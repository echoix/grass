[
    {
        "type": "convention",
        "module": "grass.app",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/app/__init__.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "grass.app.data",
        "obj": "create_database_directory",
        "line": 74,
        "column": 47,
        "endLine": 74,
        "endColumn": 61,
        "path": "python/grass/app/data.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.app.runtime",
        "obj": "get_grass_config_dir",
        "line": 32,
        "column": 4,
        "endLine": 40,
        "endColumn": 60,
        "path": "python/grass/app/runtime.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.app.runtime",
        "obj": "set_browser",
        "line": 248,
        "column": 50,
        "endLine": 248,
        "endColumn": 57,
        "path": "python/grass/app/runtime.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.benchmark.plots",
        "obj": "get_pyplot",
        "line": 26,
        "column": 4,
        "endLine": 26,
        "endColumn": 21,
        "path": "python/grass/benchmark/plots.py",
        "symbol": "import-error",
        "message": "Unable to import 'matplotlib'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.benchmark.plots",
        "obj": "get_pyplot",
        "line": 35,
        "column": 4,
        "endLine": 35,
        "endColumn": 35,
        "path": "python/grass/benchmark/plots.py",
        "symbol": "import-error",
        "message": "Unable to import 'matplotlib.pyplot'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.benchmark.plots",
        "obj": "nprocs_plot",
        "line": 88,
        "column": 8,
        "endLine": 90,
        "endColumn": 9,
        "path": "python/grass/benchmark/plots.py",
        "symbol": "import-error",
        "message": "Unable to import 'matplotlib.ticker'",
        "message-id": "E0401"
    },
    {
        "type": "refactor",
        "module": "grass.benchmark.plots",
        "obj": "num_cells_plot",
        "line": 107,
        "column": 0,
        "endLine": 107,
        "endColumn": 18,
        "path": "python/grass/benchmark/plots.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (13/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.benchmark.results",
        "obj": "save_results",
        "line": 41,
        "column": 15,
        "endLine": 41,
        "endColumn": 33,
        "path": "python/grass/benchmark/results.py",
        "symbol": "use-dict-literal",
        "message": "Consider using '{\"results\": data}' instead of a call to 'dict'.",
        "message-id": "R1735"
    },
    {
        "type": "refactor",
        "module": "grass.benchmark.runners",
        "obj": "benchmark_single",
        "line": 58,
        "column": 4,
        "endLine": 59,
        "endColumn": 21,
        "path": "python/grass/benchmark/runners.py",
        "symbol": "consider-using-min-builtin",
        "message": "Consider using 'min_avg = min(min_avg, avg)' instead of unnecessary if block",
        "message-id": "R1730"
    },
    {
        "type": "warning",
        "module": "grass.exceptions.__init__",
        "obj": "",
        "line": 56,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/exceptions/__init__.py",
        "symbol": "fixme",
        "message": "TODO: we inherit from subprocess to be aligned with check_call but it is needed?",
        "message-id": "W0511"
    },
    {
        "type": "convention",
        "module": "grass.exceptions",
        "obj": "DBError",
        "line": 7,
        "column": 0,
        "endLine": 7,
        "endColumn": 13,
        "path": "python/grass/exceptions/__init__.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.exceptions",
        "obj": "FatalError",
        "line": 11,
        "column": 0,
        "endLine": 11,
        "endColumn": 16,
        "path": "python/grass/exceptions/__init__.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.exceptions",
        "obj": "FlagError",
        "line": 15,
        "column": 0,
        "endLine": 15,
        "endColumn": 15,
        "path": "python/grass/exceptions/__init__.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.exceptions",
        "obj": "GrassError",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 16,
        "path": "python/grass/exceptions/__init__.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.exceptions",
        "obj": "ImplementationError",
        "line": 23,
        "column": 0,
        "endLine": 23,
        "endColumn": 25,
        "path": "python/grass/exceptions/__init__.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.exceptions",
        "obj": "OpenError",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 15,
        "path": "python/grass/exceptions/__init__.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.exceptions",
        "obj": "ParameterError",
        "line": 31,
        "column": 0,
        "endLine": 31,
        "endColumn": 20,
        "path": "python/grass/exceptions/__init__.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.exceptions",
        "obj": "Usage",
        "line": 52,
        "column": 0,
        "endLine": 52,
        "endColumn": 11,
        "path": "python/grass/exceptions/__init__.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "error",
        "module": "grass.exceptions",
        "obj": "CalledModuleError.__init__",
        "line": 83,
        "column": 18,
        "endLine": 83,
        "endColumn": 19,
        "path": "python/grass/exceptions/__init__.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.exceptions",
        "obj": "CalledModuleError.__init__",
        "line": 87,
        "column": 18,
        "endLine": 87,
        "endColumn": 19,
        "path": "python/grass/exceptions/__init__.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.exceptions",
        "obj": "CalledModuleError.__init__",
        "line": 89,
        "column": 19,
        "endLine": 89,
        "endColumn": 20,
        "path": "python/grass/exceptions/__init__.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.experimental.create",
        "obj": "require_create_ensure_mapset",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 32,
        "path": "python/grass/experimental/create.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.experimental.mapset",
        "obj": "MapsetSession.__init__",
        "line": 42,
        "column": 4,
        "endLine": 42,
        "endColumn": 16,
        "path": "python/grass/experimental/mapset.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.grassdb.checks",
        "obj": "",
        "line": 50,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "fixme",
        "message": "TODO: distinguish between valid for getting maps and usable as current",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.grassdb.checks",
        "obj": "",
        "line": 281,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "fixme",
        "message": "TODO: remove the grass.py specific wording",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "mapset_exists",
        "line": 35,
        "column": 25,
        "endLine": 35,
        "endColumn": 26,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "is_mapset_valid",
        "line": 69,
        "column": 25,
        "endLine": 69,
        "endColumn": 26,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.grassdb.checks",
        "obj": "get_reason_id_mapset_not_usable",
        "line": 228,
        "column": 4,
        "endLine": 238,
        "endColumn": 23,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "get_mapset_invalid_reason",
        "line": 282,
        "column": 15,
        "endLine": 282,
        "endColumn": 16,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "get_mapset_invalid_reason",
        "line": 286,
        "column": 15,
        "endLine": 286,
        "endColumn": 16,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "get_mapset_invalid_reason",
        "line": 289,
        "column": 12,
        "endLine": 289,
        "endColumn": 13,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "get_mapset_invalid_reason",
        "line": 298,
        "column": 12,
        "endLine": 298,
        "endColumn": 13,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "get_mapset_invalid_reason",
        "line": 307,
        "column": 11,
        "endLine": 307,
        "endColumn": 12,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "get_location_invalid_reason",
        "line": 335,
        "column": 15,
        "endLine": 335,
        "endColumn": 16,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "get_location_invalid_reason",
        "line": 339,
        "column": 12,
        "endLine": 339,
        "endColumn": 13,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "get_location_invalid_reason",
        "line": 347,
        "column": 12,
        "endLine": 347,
        "endColumn": 13,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "get_location_invalid_reason",
        "line": 356,
        "column": 12,
        "endLine": 356,
        "endColumn": 13,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "get_location_invalid_reason",
        "line": 366,
        "column": 11,
        "endLine": 366,
        "endColumn": 12,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "get_location_invalid_suggestion",
        "line": 382,
        "column": 15,
        "endLine": 382,
        "endColumn": 16,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "get_location_invalid_suggestion",
        "line": 388,
        "column": 15,
        "endLine": 388,
        "endColumn": 16,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "get_mapset_name_invalid_reason",
        "line": 410,
        "column": 18,
        "endLine": 410,
        "endColumn": 19,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "get_mapset_name_invalid_reason",
        "line": 417,
        "column": 18,
        "endLine": 417,
        "endColumn": 19,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "get_mapset_name_invalid_reason",
        "line": 424,
        "column": 18,
        "endLine": 424,
        "endColumn": 19,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "get_location_name_invalid_reason",
        "line": 446,
        "column": 18,
        "endLine": 446,
        "endColumn": 19,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "get_location_name_invalid_reason",
        "line": 453,
        "column": 18,
        "endLine": 453,
        "endColumn": 19,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "get_reason_mapset_not_removable",
        "line": 513,
        "column": 18,
        "endLine": 513,
        "endColumn": 19,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "get_reason_mapset_not_removable",
        "line": 518,
        "column": 18,
        "endLine": 518,
        "endColumn": 19,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "get_reason_mapset_not_removable",
        "line": 523,
        "column": 18,
        "endLine": 523,
        "endColumn": 19,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "get_reason_mapset_not_removable",
        "line": 526,
        "column": 18,
        "endLine": 526,
        "endColumn": 19,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "get_reasons_location_not_removable",
        "line": 557,
        "column": 12,
        "endLine": 557,
        "endColumn": 13,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.checks",
        "obj": "get_reasons_grassdb_not_removable",
        "line": 596,
        "column": 12,
        "endLine": 596,
        "endColumn": 13,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.grassdb.checks",
        "obj": "get_list_of_locations",
        "line": 620,
        "column": 16,
        "endLine": 620,
        "endColumn": 22,
        "path": "python/grass/grassdb/checks.py",
        "symbol": "use-list-literal",
        "message": "Consider using [] instead of list()",
        "message-id": "R1734"
    },
    {
        "type": "convention",
        "module": "grass.grassdb.config",
        "obj": "",
        "line": 13,
        "column": 0,
        "endLine": 13,
        "endColumn": 16,
        "path": "python/grass/grassdb/config.py",
        "symbol": "invalid-name",
        "message": "Constant name \"default_location\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.grassdb.config",
        "obj": "",
        "line": 14,
        "column": 0,
        "endLine": 14,
        "endColumn": 18,
        "path": "python/grass/grassdb/config.py",
        "symbol": "invalid-name",
        "message": "Constant name \"temporary_location\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.grassdb.config",
        "obj": "",
        "line": 15,
        "column": 0,
        "endLine": 15,
        "endColumn": 16,
        "path": "python/grass/grassdb/config.py",
        "symbol": "invalid-name",
        "message": "Constant name \"unknown_location\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.grassdb.config",
        "obj": "",
        "line": 16,
        "column": 0,
        "endLine": 16,
        "endColumn": 14,
        "path": "python/grass/grassdb/config.py",
        "symbol": "invalid-name",
        "message": "Constant name \"unknown_mapset\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.grassdb.config",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 16,
        "path": "python/grass/grassdb/config.py",
        "symbol": "invalid-name",
        "message": "Constant name \"permanent_mapset\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.grassdb.history",
        "obj": "filter",
        "line": 148,
        "column": 0,
        "endLine": 148,
        "endColumn": 10,
        "path": "python/grass/grassdb/history.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'filter'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.grassdb.history",
        "obj": "ensure_history_file",
        "line": 71,
        "column": 16,
        "endLine": 71,
        "endColumn": 17,
        "path": "python/grass/grassdb/history.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.grassdb.history",
        "obj": "_read_from_plain_text",
        "line": 83,
        "column": 19,
        "endLine": 83,
        "endColumn": 25,
        "path": "python/grass/grassdb/history.py",
        "symbol": "use-list-literal",
        "message": "Consider using [] instead of list()",
        "message-id": "R1734"
    },
    {
        "type": "error",
        "module": "grass.grassdb.history",
        "obj": "_read_from_plain_text",
        "line": 94,
        "column": 12,
        "endLine": 94,
        "endColumn": 13,
        "path": "python/grass/grassdb/history.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.grassdb.history",
        "obj": "_read_from_JSON",
        "line": 99,
        "column": 0,
        "endLine": 99,
        "endColumn": 19,
        "path": "python/grass/grassdb/history.py",
        "symbol": "invalid-name",
        "message": "Function name \"_read_from_JSON\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.grassdb.history",
        "obj": "_read_from_JSON",
        "line": 106,
        "column": 19,
        "endLine": 106,
        "endColumn": 25,
        "path": "python/grass/grassdb/history.py",
        "symbol": "use-list-literal",
        "message": "Consider using [] instead of list()",
        "message-id": "R1734"
    },
    {
        "type": "error",
        "module": "grass.grassdb.history",
        "obj": "_read_from_JSON",
        "line": 117,
        "column": 24,
        "endLine": 117,
        "endColumn": 25,
        "path": "python/grass/grassdb/history.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.history",
        "obj": "_read_from_JSON",
        "line": 131,
        "column": 12,
        "endLine": 131,
        "endColumn": 13,
        "path": "python/grass/grassdb/history.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.history",
        "obj": "_remove_entry_from_plain_text",
        "line": 183,
        "column": 12,
        "endLine": 183,
        "endColumn": 13,
        "path": "python/grass/grassdb/history.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.grassdb.history",
        "obj": "_remove_entry_from_JSON",
        "line": 189,
        "column": 0,
        "endLine": 189,
        "endColumn": 27,
        "path": "python/grass/grassdb/history.py",
        "symbol": "invalid-name",
        "message": "Function name \"_remove_entry_from_JSON\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.grassdb.history",
        "obj": "_remove_entry_from_JSON",
        "line": 209,
        "column": 20,
        "endLine": 209,
        "endColumn": 21,
        "path": "python/grass/grassdb/history.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.history",
        "obj": "_remove_entry_from_JSON",
        "line": 215,
        "column": 12,
        "endLine": 215,
        "endColumn": 13,
        "path": "python/grass/grassdb/history.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.grassdb.history",
        "obj": "convert_plain_text_to_JSON",
        "line": 231,
        "column": 0,
        "endLine": 231,
        "endColumn": 30,
        "path": "python/grass/grassdb/history.py",
        "symbol": "invalid-name",
        "message": "Function name \"convert_plain_text_to_JSON\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.grassdb.history",
        "obj": "convert_plain_text_to_JSON",
        "line": 252,
        "column": 12,
        "endLine": 252,
        "endColumn": 13,
        "path": "python/grass/grassdb/history.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.grassdb.history",
        "obj": "_add_entry_to_JSON",
        "line": 289,
        "column": 0,
        "endLine": 289,
        "endColumn": 22,
        "path": "python/grass/grassdb/history.py",
        "symbol": "invalid-name",
        "message": "Function name \"_add_entry_to_JSON\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.grassdb.history",
        "obj": "_add_entry_to_JSON",
        "line": 307,
        "column": 12,
        "endLine": 307,
        "endColumn": 13,
        "path": "python/grass/grassdb/history.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.history",
        "obj": "_add_entry_to_JSON",
        "line": 311,
        "column": 12,
        "endLine": 311,
        "endColumn": 13,
        "path": "python/grass/grassdb/history.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.grassdb.history",
        "obj": "_update_entry_in_JSON",
        "line": 327,
        "column": 0,
        "endLine": 327,
        "endColumn": 25,
        "path": "python/grass/grassdb/history.py",
        "symbol": "invalid-name",
        "message": "Function name \"_update_entry_in_JSON\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.grassdb.history",
        "obj": "_update_entry_in_JSON",
        "line": 351,
        "column": 20,
        "endLine": 351,
        "endColumn": 21,
        "path": "python/grass/grassdb/history.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.history",
        "obj": "_update_entry_in_JSON",
        "line": 357,
        "column": 12,
        "endLine": 357,
        "endColumn": 13,
        "path": "python/grass/grassdb/history.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.history",
        "obj": "copy",
        "line": 385,
        "column": 12,
        "endLine": 385,
        "endColumn": 13,
        "path": "python/grass/grassdb/history.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.manage",
        "obj": "delete_mapset",
        "line": 25,
        "column": 12,
        "endLine": 25,
        "endColumn": 13,
        "path": "python/grass/grassdb/manage.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.manage",
        "obj": "rename_mapset",
        "line": 43,
        "column": 25,
        "endLine": 43,
        "endColumn": 26,
        "path": "python/grass/grassdb/manage.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.grassdb.manage",
        "obj": "split_mapset_path",
        "line": 111,
        "column": 8,
        "endLine": 113,
        "endColumn": 9,
        "path": "python/grass/grassdb/manage.py",
        "symbol": "pointless-exception-statement",
        "message": "Exception statement has no effect",
        "message-id": "W0133"
    },
    {
        "type": "error",
        "module": "grass.grassdb.manage",
        "obj": "split_mapset_path",
        "line": 112,
        "column": 12,
        "endLine": 112,
        "endColumn": 13,
        "path": "python/grass/grassdb/manage.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.manage",
        "obj": "resolve_mapset_path",
        "line": 167,
        "column": 12,
        "endLine": 167,
        "endColumn": 13,
        "path": "python/grass/grassdb/manage.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.grassdb.manage",
        "obj": "resolve_mapset_path",
        "line": 180,
        "column": 16,
        "endLine": 180,
        "endColumn": 17,
        "path": "python/grass/grassdb/manage.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1484/1000)",
        "message-id": "C0302"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 62,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: report this as a bug? is this in Python 3.x?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 147,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: we don't know if user calls this",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 200,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: add support for multiline (first line general, others with details)",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 204,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: decide if precision is mandatory",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 206,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: auto-determine precision based on the map type",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 207,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: we can have also more general function without the subset reference",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 208,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: change name to Module",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 249,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: add region vs map extent and res check in case of error",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 504,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: use precision?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 505,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: write a test for this method with r.in.ascii",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 540,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: use precision?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 541,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: write a test for this method with r.in.ascii",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 542,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: almost the same as 2D version",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 734,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: possible improvement is to require some descriptive name",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 764,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: name of map generation is repeated three times",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 765,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: this method is almost the same as the one for 2D",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 852,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: -z and 3D support",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 859,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: introduce some function which will make file valid",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 869,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: -z and 3D support",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 875,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: perhaps we can afford just simple file name",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 924,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: we are using r.info min max and r.univar min max interchangeably",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 991,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: we are using r.info min max and r.univar min max interchangeably",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1054,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: this works only in 2D",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1055,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: write tests",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1061,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: if msg is None: add info specific to this function",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1067,
        "column": 45,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: more unique name",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1068,
        "column": 53,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: more unique name",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1091,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: this would use some refactoring",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1109,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: write tests",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1147,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: here we have to have significant digits which is not consistent",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1148,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: documentation for all new asserts",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1149,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: same can be created for raster and 3D raster",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1208,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: manage using cleanup settings",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1214,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: we expect v.out.ascii to give the same order all the time, is that OK?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1233,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: filenames are set to \"actual\" and \"reference\", isn't it too general?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1247,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: this should be solved according to cleanup policy",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1258,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: there is a diff size constant which we can use",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1273,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: this might be tough to do with some more sophisticated way of",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1276,
        "column": 17,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: this might be here and somehow stored as file or done in",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1281,
        "column": 17,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: all HTML files might be collected by the main reporter",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1282,
        "column": 17,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: standardize the format of name of HTML file",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1326,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: standardized error code would be handy here",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1335,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: message format, parameters",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1339,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: use this also in assert and apply when appropriate",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1358,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: we can also compare time to some expected but that's tricky",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1361,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: this should be the function used for valgrind or profiling or debug",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1362,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: it asserts the rc but it does much more, so testModule?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1363,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: do we need special function for testing module failures or just add",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1365,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: consider not allowing to call this method more than once",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1369,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: enable merging streams?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1399,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: message format",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1400,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: stderr?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1418,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: always or only if the calling test method failed?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1423,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: should we merge stderr to stdout in this case?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1448,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: add tests and documentation to methods which are using this function",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1475,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "fixme",
        "message": "TODO: in any case capture PIPE always?",
        "message-id": "W0511"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase._formatMessage",
        "line": 87,
        "column": 19,
        "endLine": 87,
        "endColumn": 28,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase._formatMessage",
        "line": 89,
        "column": 19,
        "endLine": 89,
        "endColumn": 28,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.use_temp_region",
        "line": 120,
        "column": 15,
        "endLine": 120,
        "endColumn": 23,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertLooksLike",
        "line": 181,
        "column": 4,
        "endLine": 181,
        "endColumn": 23,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertLooksLike\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertLooksLike",
        "line": 201,
        "column": 12,
        "endLine": 201,
        "endColumn": 23,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Variable name \"standardMsg\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertLooksLike",
        "line": 201,
        "column": 26,
        "endLine": 201,
        "endColumn": 62,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertModuleKeyValue",
        "line": 209,
        "column": 4,
        "endLine": 209,
        "endColumn": 28,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertModuleKeyValue\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertModuleKeyValue",
        "line": 209,
        "column": 4,
        "endLine": 209,
        "endColumn": 28,
        "path": "python/grass/gunittest/case.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertModuleKeyValue",
        "line": 252,
        "column": 20,
        "endLine": 255,
        "endColumn": 28,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertModuleKeyValue",
        "line": 258,
        "column": 16,
        "endLine": 258,
        "endColumn": 22,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Variable name \"stdMsg\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertModuleKeyValue",
        "line": 258,
        "column": 25,
        "endLine": 258,
        "endColumn": 43,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertModuleKeyValue",
        "line": 259,
        "column": 16,
        "endLine": 259,
        "endColumn": 22,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Variable name \"stdMsg\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertModuleKeyValue",
        "line": 260,
        "column": 16,
        "endLine": 260,
        "endColumn": 22,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Variable name \"stdMsg\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertModuleKeyValue",
        "line": 260,
        "column": 26,
        "endLine": 260,
        "endColumn": 59,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertModuleKeyValue",
        "line": 261,
        "column": 16,
        "endLine": 261,
        "endColumn": 22,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Variable name \"stdMsg\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertModuleKeyValue",
        "line": 261,
        "column": 26,
        "endLine": 261,
        "endColumn": 42,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertModuleKeyValue",
        "line": 243,
        "column": 12,
        "endLine": 243,
        "endColumn": 18,
        "path": "python/grass/gunittest/case.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'unused'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRasterFitsUnivar",
        "line": 273,
        "column": 4,
        "endLine": 273,
        "endColumn": 30,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertRasterFitsUnivar\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRasterFitsInfo",
        "line": 300,
        "column": 4,
        "endLine": 300,
        "endColumn": 28,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertRasterFitsInfo\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRaster3dFitsUnivar",
        "line": 325,
        "column": 4,
        "endLine": 325,
        "endColumn": 32,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertRaster3dFitsUnivar\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRaster3dFitsInfo",
        "line": 348,
        "column": 4,
        "endLine": 348,
        "endColumn": 30,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertRaster3dFitsInfo\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorFitsTopoInfo",
        "line": 368,
        "column": 4,
        "endLine": 368,
        "endColumn": 32,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertVectorFitsTopoInfo\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorFitsRegionInfo",
        "line": 399,
        "column": 4,
        "endLine": 399,
        "endColumn": 34,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertVectorFitsRegionInfo\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorFitsExtendedInfo",
        "line": 418,
        "column": 4,
        "endLine": 418,
        "endColumn": 36,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertVectorFitsExtendedInfo\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorInfoEqualsVectorInfo",
        "line": 444,
        "column": 4,
        "endLine": 444,
        "endColumn": 40,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertVectorInfoEqualsVectorInfo\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorFitsUnivar",
        "line": 461,
        "column": 4,
        "endLine": 461,
        "endColumn": 30,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertVectorFitsUnivar\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorFitsUnivar",
        "line": 461,
        "column": 4,
        "endLine": 461,
        "endColumn": 30,
        "path": "python/grass/gunittest/case.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorFitsUnivar",
        "line": 463,
        "column": 8,
        "endLine": 463,
        "endColumn": 11,
        "path": "python/grass/gunittest/case.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorFitsUnivar",
        "line": 468,
        "column": 8,
        "endLine": 468,
        "endColumn": 12,
        "path": "python/grass/gunittest/case.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorFitsUnivar",
        "line": 488,
        "column": 21,
        "endLine": 488,
        "endColumn": 60,
        "path": "python/grass/gunittest/case.py",
        "symbol": "use-dict-literal",
        "message": "Consider using '{\"map\": map, \"column\": column, \"flags\": 'g'}' instead of a call to 'dict'.",
        "message-id": "R1735"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRasterMinMax",
        "line": 506,
        "column": 4,
        "endLine": 506,
        "endColumn": 26,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertRasterMinMax\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRasterMinMax",
        "line": 506,
        "column": 33,
        "endLine": 506,
        "endColumn": 36,
        "path": "python/grass/gunittest/case.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRasterMinMax",
        "line": 523,
        "column": 16,
        "endLine": 525,
        "endColumn": 37,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRasterMinMax",
        "line": 532,
        "column": 16,
        "endLine": 534,
        "endColumn": 37,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRaster3dMinMax",
        "line": 543,
        "column": 4,
        "endLine": 543,
        "endColumn": 28,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertRaster3dMinMax\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRaster3dMinMax",
        "line": 543,
        "column": 35,
        "endLine": 543,
        "endColumn": 38,
        "path": "python/grass/gunittest/case.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRaster3dMinMax",
        "line": 560,
        "column": 16,
        "endLine": 562,
        "endColumn": 37,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRaster3dMinMax",
        "line": 569,
        "column": 16,
        "endLine": 571,
        "endColumn": 37,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "TestCase._get_detailed_message_about_no_map",
        "line": 577,
        "column": 55,
        "endLine": 577,
        "endColumn": 59,
        "path": "python/grass/gunittest/case.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase._get_detailed_message_about_no_map",
        "line": 578,
        "column": 14,
        "endLine": 578,
        "endColumn": 76,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRasterExists",
        "line": 594,
        "column": 4,
        "endLine": 594,
        "endColumn": 26,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertRasterExists\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRasterDoesNotExist",
        "line": 600,
        "column": 4,
        "endLine": 600,
        "endColumn": 32,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertRasterDoesNotExist\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRaster3dExists",
        "line": 606,
        "column": 4,
        "endLine": 606,
        "endColumn": 28,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertRaster3dExists\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRaster3dDoesNotExist",
        "line": 612,
        "column": 4,
        "endLine": 612,
        "endColumn": 34,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertRaster3dDoesNotExist\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorExists",
        "line": 618,
        "column": 4,
        "endLine": 618,
        "endColumn": 26,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertVectorExists\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorDoesNotExist",
        "line": 624,
        "column": 4,
        "endLine": 624,
        "endColumn": 32,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertVectorDoesNotExist\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertFileExists",
        "line": 630,
        "column": 4,
        "endLine": 630,
        "endColumn": 24,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertFileExists\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertFileExists",
        "line": 642,
        "column": 21,
        "endLine": 642,
        "endColumn": 45,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertFileExists",
        "line": 645,
        "column": 21,
        "endLine": 645,
        "endColumn": 39,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertFileExists",
        "line": 648,
        "column": 21,
        "endLine": 648,
        "endColumn": 60,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertFileMd5",
        "line": 651,
        "column": 4,
        "endLine": 651,
        "endColumn": 21,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertFileMd5\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertFileMd5",
        "line": 698,
        "column": 12,
        "endLine": 698,
        "endColumn": 23,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Variable name \"standardMsg\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertFileMd5",
        "line": 699,
        "column": 16,
        "endLine": 701,
        "endColumn": 39,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertFilesEqualMd5",
        "line": 707,
        "column": 4,
        "endLine": 707,
        "endColumn": 27,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertFilesEqualMd5\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertFilesEqualMd5",
        "line": 717,
        "column": 21,
        "endLine": 717,
        "endColumn": 67,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.case",
        "obj": "TestCase._get_unique_name",
        "line": 736,
        "column": 8,
        "endLine": 741,
        "endColumn": 62,
        "path": "python/grass/gunittest/case.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase._compute_difference_raster",
        "line": 758,
        "column": 21,
        "endLine": 758,
        "endColumn": 56,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase._compute_difference_raster3d",
        "line": 784,
        "column": 18,
        "endLine": 784,
        "endColumn": 41,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.case",
        "obj": "TestCase._compute_vector_xor",
        "line": 818,
        "column": 4,
        "endLine": 818,
        "endColumn": 27,
        "path": "python/grass/gunittest/case.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRastersNoDifference",
        "line": 889,
        "column": 4,
        "endLine": 889,
        "endColumn": 33,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertRastersNoDifference\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRastersNoDifference",
        "line": 889,
        "column": 4,
        "endLine": 889,
        "endColumn": 33,
        "path": "python/grass/gunittest/case.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRastersNoDifference",
        "line": 906,
        "column": 29,
        "endLine": 906,
        "endColumn": 64,
        "path": "python/grass/gunittest/case.py",
        "symbol": "use-dict-literal",
        "message": "Consider using '{\"min\": -precision, \"max\": precision}' instead of a call to 'dict'.",
        "message-id": "R1735"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRastersDifference",
        "line": 936,
        "column": 4,
        "endLine": 936,
        "endColumn": 31,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertRastersDifference\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRastersDifference",
        "line": 936,
        "column": 4,
        "endLine": 936,
        "endColumn": 31,
        "path": "python/grass/gunittest/case.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRasters3dNoDifference",
        "line": 961,
        "column": 4,
        "endLine": 961,
        "endColumn": 35,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertRasters3dNoDifference\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRasters3dNoDifference",
        "line": 961,
        "column": 4,
        "endLine": 961,
        "endColumn": 35,
        "path": "python/grass/gunittest/case.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRasters3dNoDifference",
        "line": 973,
        "column": 29,
        "endLine": 973,
        "endColumn": 64,
        "path": "python/grass/gunittest/case.py",
        "symbol": "use-dict-literal",
        "message": "Consider using '{\"min\": -precision, \"max\": precision}' instead of a call to 'dict'.",
        "message-id": "R1735"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRasters3dDifference",
        "line": 1003,
        "column": 4,
        "endLine": 1003,
        "endColumn": 33,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertRasters3dDifference\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRasters3dDifference",
        "line": 1003,
        "column": 4,
        "endLine": 1003,
        "endColumn": 33,
        "path": "python/grass/gunittest/case.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertRastersEqual",
        "line": 1023,
        "column": 4,
        "endLine": 1023,
        "endColumn": 26,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertRastersEqual\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorIsVectorBuffered",
        "line": 1056,
        "column": 4,
        "endLine": 1056,
        "endColumn": 36,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertVectorIsVectorBuffered\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorsNoAreaDifference",
        "line": 1110,
        "column": 4,
        "endLine": 1110,
        "endColumn": 37,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertVectorsNoAreaDifference\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorsNoAreaDifference",
        "line": 1110,
        "column": 4,
        "endLine": 1110,
        "endColumn": 37,
        "path": "python/grass/gunittest/case.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "error",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorsNoAreaDifference",
        "line": 1121,
        "column": 15,
        "endLine": 1121,
        "endColumn": 40,
        "path": "python/grass/gunittest/case.py",
        "symbol": "no-member",
        "message": "Instance of 'TestCase' has no '_compute_xor_vectors' member",
        "message-id": "E1101"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorsNoAreaDifference",
        "line": 1139,
        "column": 20,
        "endLine": 1141,
        "endColumn": 59,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorEqualsVector",
        "line": 1150,
        "column": 4,
        "endLine": 1150,
        "endColumn": 32,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertVectorEqualsVector\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorEqualsVector",
        "line": 1150,
        "column": 4,
        "endLine": 1150,
        "endColumn": 32,
        "path": "python/grass/gunittest/case.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorEqualsAscii",
        "line": 1179,
        "column": 4,
        "endLine": 1179,
        "endColumn": 31,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertVectorEqualsAscii\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorEqualsAscii",
        "line": 1179,
        "column": 4,
        "endLine": 1179,
        "endColumn": 31,
        "path": "python/grass/gunittest/case.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorAsciiEqualsVectorAscii",
        "line": 1215,
        "column": 4,
        "endLine": 1215,
        "endColumn": 42,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertVectorAsciiEqualsVectorAscii\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorAsciiEqualsVectorAscii",
        "line": 1215,
        "column": 4,
        "endLine": 1215,
        "endColumn": 42,
        "path": "python/grass/gunittest/case.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (19/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorAsciiEqualsVectorAscii",
        "line": 1228,
        "column": 8,
        "endLine": 1228,
        "endColumn": 22,
        "path": "python/grass/gunittest/case.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (difflib)",
        "message-id": "C0415"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorAsciiEqualsVectorAscii",
        "line": 1230,
        "column": 20,
        "endLine": 1230,
        "endColumn": 32,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorAsciiEqualsVectorAscii",
        "line": 1230,
        "column": 20,
        "endLine": 1230,
        "endColumn": 32,
        "path": "python/grass/gunittest/case.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorAsciiEqualsVectorAscii",
        "line": 1231,
        "column": 18,
        "endLine": 1231,
        "endColumn": 33,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorAsciiEqualsVectorAscii",
        "line": 1231,
        "column": 18,
        "endLine": 1231,
        "endColumn": 33,
        "path": "python/grass/gunittest/case.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1254,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in assignment",
        "message-id": "W1404"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorAsciiEqualsVectorAscii",
        "line": 1294,
        "column": 32,
        "endLine": 1294,
        "endColumn": 61,
        "path": "python/grass/gunittest/case.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertVectorAsciiEqualsVectorAscii",
        "line": 1294,
        "column": 32,
        "endLine": 1294,
        "endColumn": 61,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.runModule",
        "line": 1302,
        "column": 4,
        "endLine": 1302,
        "endColumn": 17,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"runModule\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.runModule",
        "line": 1327,
        "column": 12,
        "endLine": 1327,
        "endColumn": 21,
        "path": "python/grass/gunittest/case.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (re)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "TestCase.runModule",
        "line": 1336,
        "column": 12,
        "endLine": 1338,
        "endColumn": 13,
        "path": "python/grass/gunittest/case.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'except CalledModuleError as exc' and 'raise CalledModuleError(module.name, module.get_python(), module.returncode, errors=errors) from exc'",
        "message-id": "W0707"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertModule",
        "line": 1371,
        "column": 4,
        "endLine": 1371,
        "endColumn": 20,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertModule\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertModule",
        "line": 1391,
        "column": 21,
        "endLine": 1391,
        "endColumn": 51,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertModuleFail",
        "line": 1424,
        "column": 4,
        "endLine": 1424,
        "endColumn": 24,
        "path": "python/grass/gunittest/case.py",
        "symbol": "invalid-name",
        "message": "Method name \"assertModuleFail\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "TestCase.assertModuleFail",
        "line": 1442,
        "column": 16,
        "endLine": 1443,
        "endColumn": 48,
        "path": "python/grass/gunittest/case.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 1456,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/case.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.case",
        "obj": "",
        "line": 36,
        "column": 0,
        "endLine": 36,
        "endColumn": 23,
        "path": "python/grass/gunittest/case.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"io.StringIO\" should be placed before first party imports \"grass.pygrass.modules.Module\", \"grass.exceptions.CalledModuleError\", \"grass.script.text_to_string\" and local imports \"gmodules.call_module\", \"checkers.check_text_ellipsis\", \"utils.safe_repr\", \"gutils.is_map_in_mapset\"",
        "message-id": "C0411"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.checkers",
        "obj": "",
        "line": 23,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "fixme",
        "message": "TODO: we are silent about the error and use a object with different",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.checkers",
        "obj": "",
        "line": 26,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "fixme",
        "message": "TODO: grass should survive and give better errors when translations are not",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.checkers",
        "obj": "",
        "line": 145,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "fixme",
        "message": "TODO: what is the default separator?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.checkers",
        "obj": "",
        "line": 198,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "fixme",
        "message": "TODO: add also general split with vsep",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.checkers",
        "obj": "",
        "line": 214,
        "column": 21,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "fixme",
        "message": "TODO: here should go _ for translation",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.checkers",
        "obj": "",
        "line": 215,
        "column": 21,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "fixme",
        "message": "TODO: the error message is not really informative",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.checkers",
        "obj": "",
        "line": 228,
        "column": 21,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "fixme",
        "message": "TODO: here should go _ for translation",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.checkers",
        "obj": "",
        "line": 254,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "fixme",
        "message": "TODO: decide if there should be some default for precision",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.checkers",
        "obj": "",
        "line": 255,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "fixme",
        "message": "TODO: define standard precisions for DCELL, FCELL, CELL, mm, ft, cm, ...",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.checkers",
        "obj": "",
        "line": 256,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "fixme",
        "message": "TODO: decide if None is valid, and use some default or no compare",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.checkers",
        "obj": "",
        "line": 257,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "fixme",
        "message": "TODO: is None a valid value for precision?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.checkers",
        "obj": "",
        "line": 387,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "fixme",
        "message": "TODO: should the return depend on the a_is_subset parameter?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.checkers",
        "obj": "",
        "line": 492,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "fixme",
        "message": "TODO: support also float (with E, e, inf, nan, ...?) and int (###, ##.)",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.checkers",
        "obj": "",
        "line": 496,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "fixme",
        "message": "TODO: change checking over lines?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.checkers",
        "obj": "",
        "line": 497,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "fixme",
        "message": "TODO: change parameter order?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.checkers",
        "obj": "",
        "line": 498,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "fixme",
        "message": "TODO: the behavior with last \\n is strange but now using DOTALL and $",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.checkers",
        "obj": "",
        "line": 609,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "fixme",
        "message": "TODO: accept also open file object",
        "message-id": "W0511"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.checkers",
        "obj": "text_to_keyvalue",
        "line": 146,
        "column": 0,
        "endLine": 146,
        "endColumn": 20,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.checkers",
        "obj": "text_to_keyvalue",
        "line": 146,
        "column": 0,
        "endLine": 146,
        "endColumn": 20,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.checkers",
        "obj": "text_to_keyvalue",
        "line": 221,
        "column": 28,
        "endLine": 222,
        "endColumn": 58,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.checkers",
        "obj": "text_to_keyvalue",
        "line": 230,
        "column": 25,
        "endLine": 230,
        "endColumn": 74,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.checkers",
        "obj": "values_equal",
        "line": 311,
        "column": 8,
        "endLine": 314,
        "endColumn": 28,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "consider-using-enumerate",
        "message": "Consider using enumerate instead of iterating with range and len",
        "message-id": "C0200"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.checkers",
        "obj": "values_equal",
        "line": 258,
        "column": 0,
        "endLine": 258,
        "endColumn": 16,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (7/6)",
        "message-id": "R0911"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.checkers",
        "obj": "keyvalue_equals",
        "line": 321,
        "column": 0,
        "endLine": 321,
        "endColumn": 19,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "error",
        "module": "grass.gunittest.checkers",
        "obj": "keyvalue_equals",
        "line": 379,
        "column": 38,
        "endLine": 379,
        "endColumn": 44,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "unsupported-membership-test",
        "message": "Value 'b_keys' doesn't support membership test",
        "message-id": "E1135"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.checkers",
        "obj": "diff_keyvalue",
        "line": 389,
        "column": 0,
        "endLine": 389,
        "endColumn": 17,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.checkers",
        "obj": "proj_info_equals.compare_sums",
        "line": 450,
        "column": 4,
        "endLine": 450,
        "endColumn": 20,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.checkers",
        "obj": "check_text_ellipsis",
        "line": 541,
        "column": 4,
        "endLine": 544,
        "endColumn": 20,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'return bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.checkers",
        "obj": "check_text_ellipsis",
        "line": 541,
        "column": 4,
        "endLine": 544,
        "endColumn": 20,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.checkers",
        "obj": "text_file_md5",
        "line": 645,
        "column": 9,
        "endLine": 645,
        "endColumn": 28,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "error",
        "module": "grass.gunittest.checkers",
        "obj": "text_file_md5",
        "line": 652,
        "column": 30,
        "endLine": 652,
        "endColumn": 36,
        "path": "python/grass/gunittest/checkers.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'regexp' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.gmodules",
        "obj": "",
        "line": 107,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/gmodules.py",
        "symbol": "fixme",
        "message": "TODO: remove this:",
        "message-id": "W0511"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.gmodules",
        "obj": "SimpleModule.__init__",
        "line": 48,
        "column": 20,
        "endLine": 48,
        "endColumn": 72,
        "path": "python/grass/gunittest/gmodules.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.gunittest.gmodules",
        "obj": "call_module",
        "line": 112,
        "column": 29,
        "endLine": 112,
        "endColumn": 30,
        "path": "python/grass/gunittest/gmodules.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.gunittest.gmodules",
        "obj": "call_module",
        "line": 114,
        "column": 29,
        "endLine": 114,
        "endColumn": 30,
        "path": "python/grass/gunittest/gmodules.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.gunittest.gmodules",
        "obj": "call_module",
        "line": 117,
        "column": 25,
        "endLine": 117,
        "endColumn": 26,
        "path": "python/grass/gunittest/gmodules.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.gunittest.gmodules",
        "obj": "call_module",
        "line": 119,
        "column": 25,
        "endLine": 119,
        "endColumn": 26,
        "path": "python/grass/gunittest/gmodules.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.gunittest.gmodules",
        "obj": "call_module",
        "line": 121,
        "column": 24,
        "endLine": 121,
        "endColumn": 25,
        "path": "python/grass/gunittest/gmodules.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.gunittest.gmodules",
        "obj": "call_module",
        "line": 123,
        "column": 24,
        "endLine": 123,
        "endColumn": 25,
        "path": "python/grass/gunittest/gmodules.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.gutils",
        "obj": "is_map_in_mapset",
        "line": 24,
        "column": 27,
        "endLine": 24,
        "endColumn": 31,
        "path": "python/grass/gunittest/gutils.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.gutils",
        "obj": "is_map_in_mapset",
        "line": 42,
        "column": 7,
        "endLine": 42,
        "endColumn": 41,
        "path": "python/grass/gunittest/gutils.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'type in ('rast', 'raster')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.gutils",
        "obj": "is_map_in_mapset",
        "line": 44,
        "column": 9,
        "endLine": 44,
        "endColumn": 47,
        "path": "python/grass/gunittest/gutils.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'type in ('rast3d', 'raster3d')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.gutils",
        "obj": "is_map_in_mapset",
        "line": 63,
        "column": 4,
        "endLine": 66,
        "endColumn": 20,
        "path": "python/grass/gunittest/gutils.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'return bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.gutils",
        "obj": "is_map_in_mapset",
        "line": 63,
        "column": 4,
        "endLine": 66,
        "endColumn": 20,
        "path": "python/grass/gunittest/gutils.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.gutils",
        "obj": "is_map_in_mapset",
        "line": 59,
        "column": 12,
        "endLine": 59,
        "endColumn": 18,
        "path": "python/grass/gunittest/gutils.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'errors'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.invoker",
        "obj": "",
        "line": 39,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "fixme",
        "message": "TODO: this might be more extend then update",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.invoker",
        "obj": "",
        "line": 73,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "fixme",
        "message": "TODO: it is not clear what clean_outputs mean, if should be split",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.invoker",
        "obj": "",
        "line": 101,
        "column": 45,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "fixme",
        "message": "TODO: solve distribution of this constant",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.invoker",
        "obj": "",
        "line": 118,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "fixme",
        "message": "TODO: use g.mapset -c, no need to duplicate functionality",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.invoker",
        "obj": "",
        "line": 123,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "fixme",
        "message": "TODO: use grass module to do this? but we are not in the right gisdbase",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.invoker",
        "obj": "",
        "line": 128,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "fixme",
        "message": "TODO: default region in mapset will be what?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.invoker",
        "obj": "",
        "line": 130,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "fixme",
        "message": "TODO: this should be a function in grass.script (used also in gis_set.py,",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.invoker",
        "obj": "",
        "line": 144,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "fixme",
        "message": "TODO: link dir instead of copy tree and remove link afterwads",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.invoker",
        "obj": "",
        "line": 146,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "fixme",
        "message": "TODO: use different dir name in samplecode and test if it works",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.invoker",
        "obj": "",
        "line": 153,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "fixme",
        "message": "TODO: put this to constructor and copy here again",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.invoker",
        "obj": "",
        "line": 171,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "fixme",
        "message": "TODO: we might clean the directory here before test if non-empty",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.invoker",
        "obj": "",
        "line": 181,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "fixme",
        "message": "TODO: add some special checks for MS Windows",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.invoker",
        "obj": "",
        "line": 273,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "fixme",
        "message": "TODO: add some try-except or with for better error handling",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.invoker",
        "obj": "",
        "line": 275,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "fixme",
        "message": "TODO: only if clean up",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.invoker",
        "obj": "",
        "line": 315,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "fixme",
        "message": "TODO: move constants out of loader class or even module",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.invoker",
        "obj": "",
        "line": 339,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "fixme",
        "message": "TODO: move this to some (new?) reporter",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.invoker",
        "obj": "",
        "line": 340,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "fixme",
        "message": "TODO: add basic summary of linked files so that the page is not empty",
        "message-id": "W0511"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.invoker",
        "obj": "update_keyval_file",
        "line": 40,
        "column": 0,
        "endLine": 40,
        "endColumn": 22,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.invoker",
        "obj": "update_keyval_file",
        "line": 42,
        "column": 13,
        "endLine": 42,
        "endColumn": 32,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.invoker",
        "obj": "update_keyval_file",
        "line": 65,
        "column": 9,
        "endLine": 65,
        "endColumn": 28,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.invoker",
        "obj": "GrassTestFilesInvoker",
        "line": 70,
        "column": 0,
        "endLine": 70,
        "endColumn": 27,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (9/7)",
        "message-id": "R0902"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.invoker",
        "obj": "GrassTestFilesInvoker.__init__",
        "line": 77,
        "column": 4,
        "endLine": 77,
        "endColumn": 16,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.invoker",
        "obj": "GrassTestFilesInvoker._run_test_module",
        "line": 138,
        "column": 4,
        "endLine": 138,
        "endColumn": 24,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.invoker",
        "obj": "GrassTestFilesInvoker._run_test_module",
        "line": 138,
        "column": 4,
        "endLine": 138,
        "endColumn": 24,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (26/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.invoker",
        "obj": "GrassTestFilesInvoker._run_test_module",
        "line": 247,
        "column": 13,
        "endLine": 247,
        "endColumn": 35,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.invoker",
        "obj": "GrassTestFilesInvoker._run_test_module",
        "line": 249,
        "column": 13,
        "endLine": 249,
        "endColumn": 35,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.invoker",
        "obj": "GrassTestFilesInvoker._run_test_module",
        "line": 250,
        "column": 15,
        "endLine": 250,
        "endColumn": 38,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "unidiomatic-typecheck",
        "message": "Use isinstance() rather than type() for a typecheck.",
        "message-id": "C0123"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.invoker",
        "obj": "GrassTestFilesInvoker._run_test_module",
        "line": 138,
        "column": 4,
        "endLine": 138,
        "endColumn": 24,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (61/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.invoker",
        "obj": "GrassTestFilesInvoker.run_in_location",
        "line": 287,
        "column": 4,
        "endLine": 287,
        "endColumn": 23,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.invoker",
        "obj": "GrassTestFilesInvoker.run_in_location",
        "line": 308,
        "column": 25,
        "endLine": 308,
        "endColumn": 77,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "use-dict-literal",
        "message": "Consider using '{\"location\": location, \"location_type\": location_type}' instead of a call to 'dict'.",
        "message-id": "R1735"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.invoker",
        "obj": "GrassTestFilesInvoker.run_in_location",
        "line": 341,
        "column": 13,
        "endLine": 341,
        "endColumn": 63,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.invoker",
        "obj": "GrassTestFilesInvoker.run_in_location",
        "line": 343,
        "column": 16,
        "endLine": 351,
        "endColumn": 32,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.invoker",
        "obj": "GrassTestFilesInvoker",
        "line": 70,
        "column": 0,
        "endLine": 70,
        "endColumn": 27,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.invoker",
        "obj": "",
        "line": 33,
        "column": 0,
        "endLine": 33,
        "endColumn": 25,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.script\" should be placed before local imports \"checkers.text_to_keyvalue\", \"loader.GrassTestLoader\", \"reporters.GrassTestFilesMultiReporter\", \"utils.silent_rmtree\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.invoker",
        "obj": "",
        "line": 34,
        "column": 0,
        "endLine": 34,
        "endColumn": 52,
        "path": "python/grass/gunittest/invoker.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.script.utils.decode\" should be placed before local imports \"checkers.text_to_keyvalue\", \"loader.GrassTestLoader\", \"reporters.GrassTestFilesMultiReporter\", \"utils.silent_rmtree\"",
        "message-id": "C0411"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.loader",
        "obj": "",
        "line": 51,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/loader.py",
        "symbol": "fixme",
        "message": "TODO: resolve test file versus test module",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.loader",
        "obj": "",
        "line": 66,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/loader.py",
        "symbol": "fixme",
        "message": "TODO: implement loading without the import",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.loader",
        "obj": "",
        "line": 133,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/loader.py",
        "symbol": "fixme",
        "message": "TODO: warning about no tests in a testsuite",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.loader",
        "obj": "",
        "line": 136,
        "column": 17,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/loader.py",
        "symbol": "fixme",
        "message": "TODO: add also import if requested",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.loader",
        "obj": "",
        "line": 138,
        "column": 17,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/loader.py",
        "symbol": "fixme",
        "message": "TODO: check if there is some main in .py",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.loader",
        "obj": "",
        "line": 141,
        "column": 17,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/loader.py",
        "symbol": "fixme",
        "message": "TODO: check if there is set -e or exit !0 or ?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.loader",
        "obj": "",
        "line": 200,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/loader.py",
        "symbol": "fixme",
        "message": "TODO: find out if this is useful for us in some way",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.loader",
        "obj": "",
        "line": 215,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/loader.py",
        "symbol": "fixme",
        "message": "TODO: what is the purpose of top_level_dir, can it be useful?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.loader",
        "obj": "",
        "line": 217,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/loader.py",
        "symbol": "fixme",
        "message": "TODO: not using pattern here",
        "message-id": "W0511"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.loader",
        "obj": "discover_modules",
        "line": 67,
        "column": 0,
        "endLine": 67,
        "endColumn": 20,
        "path": "python/grass/gunittest/loader.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (11/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.loader",
        "obj": "discover_modules",
        "line": 67,
        "column": 0,
        "endLine": 67,
        "endColumn": 20,
        "path": "python/grass/gunittest/loader.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (29/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.loader",
        "obj": "discover_modules",
        "line": 108,
        "column": 4,
        "endLine": 195,
        "endColumn": 21,
        "path": "python/grass/gunittest/loader.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (7/5)",
        "message-id": "R1702"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.loader",
        "obj": "discover_modules",
        "line": 178,
        "column": 24,
        "endLine": 181,
        "endColumn": 25,
        "path": "python/grass/gunittest/loader.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise ImportError('Cannot import module named %s in %s (%s)' % (name, full, e.message)) from e'",
        "message-id": "W0707"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.loader",
        "obj": "discover_modules",
        "line": 179,
        "column": 28,
        "endLine": 180,
        "endColumn": 44,
        "path": "python/grass/gunittest/loader.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.gunittest.loader",
        "obj": "discover_modules",
        "line": 180,
        "column": 60,
        "endLine": 180,
        "endColumn": 69,
        "path": "python/grass/gunittest/loader.py",
        "symbol": "no-member",
        "message": "Instance of 'ImportError' has no 'message' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.loader",
        "obj": "discover_modules",
        "line": 67,
        "column": 0,
        "endLine": 67,
        "endColumn": 20,
        "path": "python/grass/gunittest/loader.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (23/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.loader",
        "obj": "discover_modules",
        "line": 67,
        "column": 0,
        "endLine": 67,
        "endColumn": 20,
        "path": "python/grass/gunittest/loader.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (52/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.loader",
        "obj": "discover_modules",
        "line": 74,
        "column": 4,
        "endLine": 74,
        "endColumn": 18,
        "path": "python/grass/gunittest/loader.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'import_modules'",
        "message-id": "W0613"
    },
    {
        "type": "error",
        "module": "grass.gunittest.loader",
        "obj": "",
        "line": 237,
        "column": 4,
        "endLine": 237,
        "endColumn": 32,
        "path": "python/grass/gunittest/loader.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'start_dir' in method call",
        "message-id": "E1120"
    },
    {
        "type": "error",
        "module": "grass.gunittest.loader",
        "obj": "",
        "line": 237,
        "column": 4,
        "endLine": 237,
        "endColumn": 21,
        "path": "python/grass/gunittest/loader.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'grass_location' in constructor call",
        "message-id": "E1120"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.main",
        "obj": "",
        "line": 83,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/main.py",
        "symbol": "fixme",
        "message": "TODO: put the link to to the report only if available",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.main",
        "obj": "",
        "line": 84,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/main.py",
        "symbol": "fixme",
        "message": "TODO: how to disable Python code coverage for module and C tests?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.main",
        "obj": "",
        "line": 85,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/main.py",
        "symbol": "fixme",
        "message": "TODO: we probably need to have different test  functions for C, Python modules,",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.main",
        "obj": "",
        "line": 87,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/main.py",
        "symbol": "fixme",
        "message": "TODO: combine the results using python -m coverage --help | grep combine",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.main",
        "obj": "",
        "line": 88,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/main.py",
        "symbol": "fixme",
        "message": "TODO: function to anonymize/beautify file names (in content and actual filenames)",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.main",
        "obj": "",
        "line": 89,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/main.py",
        "symbol": "fixme",
        "message": "TODO: implement coverage but only when requested by invoker and only if",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.main",
        "obj": "",
        "line": 99,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/main.py",
        "symbol": "fixme",
        "message": "TODO: add some message somewhere",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.main",
        "obj": "",
        "line": 101,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/main.py",
        "symbol": "fixme",
        "message": "TODO: enable passing omit to exclude also gunittest or nothing",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.main",
        "obj": "",
        "line": 105,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/main.py",
        "symbol": "fixme",
        "message": "TODO: check if we are in the directory where the test file is",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.main",
        "obj": "",
        "line": 112,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/main.py",
        "symbol": "fixme",
        "message": "TODO: is sys.exit the right thing here",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.main",
        "obj": "",
        "line": 227,
        "column": 33,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/main.py",
        "symbol": "fixme",
        "message": "TODO: too brute force?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.main",
        "obj": "",
        "line": 242,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/main.py",
        "symbol": "fixme",
        "message": "TODO: remove also results dir from files",
        "message-id": "W0511"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.main",
        "obj": "GrassTestProgram.__init__",
        "line": 32,
        "column": 4,
        "endLine": 32,
        "endColumn": 16,
        "path": "python/grass/gunittest/main.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.main",
        "obj": "GrassTestProgram.__init__",
        "line": 32,
        "column": 4,
        "endLine": 32,
        "endColumn": 16,
        "path": "python/grass/gunittest/main.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.main",
        "obj": "GrassTestProgram.__init__",
        "line": 58,
        "column": 13,
        "endLine": 58,
        "endColumn": 50,
        "path": "python/grass/gunittest/main.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.main",
        "obj": "GrassTestProgram.__init__",
        "line": 36,
        "column": 8,
        "endLine": 36,
        "endColumn": 21,
        "path": "python/grass/gunittest/main.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'clean_outputs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.main",
        "obj": "main",
        "line": 157,
        "column": 0,
        "endLine": 157,
        "endColumn": 8,
        "path": "python/grass/gunittest/main.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.main",
        "obj": "main",
        "line": 157,
        "column": 0,
        "endLine": 157,
        "endColumn": 8,
        "path": "python/grass/gunittest/main.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (7/6)",
        "message-id": "R0911"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.multireport",
        "obj": "",
        "line": 24,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "fixme",
        "message": "TODO: we should be able to work without matplotlib",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.multireport",
        "obj": "",
        "line": 171,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "fixme",
        "message": "TODO: document: counting errors and failures together",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.multireport",
        "obj": "",
        "line": 213,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "fixme",
        "message": "TODO: again undocumented, counting errors and failures together",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.multireport",
        "obj": "",
        "line": 368,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "fixme",
        "message": "TODO: solve the directory inconsitencies, implement None",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.multireport",
        "obj": "",
        "line": 385,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "fixme",
        "message": "TODO: include name to summary file",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.multireport",
        "obj": "",
        "line": 541,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "fixme",
        "message": "TODO: document: location type must be a valid dir name",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "grass.gunittest.multireport",
        "obj": "",
        "line": 25,
        "column": 0,
        "endLine": 25,
        "endColumn": 17,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "import-error",
        "message": "Unable to import 'matplotlib'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.gunittest.multireport",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 31,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "import-error",
        "message": "Unable to import 'matplotlib.pyplot'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multireport",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 31,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "wrong-import-position",
        "message": "Import \"import matplotlib.pyplot as plt\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "error",
        "module": "grass.gunittest.multireport",
        "obj": "",
        "line": 31,
        "column": 0,
        "endLine": 31,
        "endColumn": 37,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "import-error",
        "message": "Unable to import 'matplotlib.dates'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multireport",
        "obj": "",
        "line": 31,
        "column": 0,
        "endLine": 31,
        "endColumn": 37,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from matplotlib.dates import date2num\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multireport",
        "obj": "TestResultSummary",
        "line": 34,
        "column": 0,
        "endLine": 34,
        "endColumn": 23,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.multireport",
        "obj": "TestResultSummary",
        "line": 34,
        "column": 0,
        "endLine": 34,
        "endColumn": 23,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (20/7)",
        "message-id": "R0902"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.multireport",
        "obj": "TestResultSummary",
        "line": 34,
        "column": 0,
        "endLine": 34,
        "endColumn": 23,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multireport",
        "obj": "plot_percents",
        "line": 64,
        "column": 0,
        "endLine": 64,
        "endColumn": 17,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.multireport",
        "obj": "plot_percents",
        "line": 64,
        "column": 0,
        "endLine": 64,
        "endColumn": 17,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multireport",
        "obj": "plot_percents",
        "line": 90,
        "column": 27,
        "endLine": 90,
        "endColumn": 33,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multireport",
        "obj": "plot_percent_successful",
        "line": 95,
        "column": 0,
        "endLine": 95,
        "endColumn": 27,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.multireport",
        "obj": "plot_percent_successful",
        "line": 95,
        "column": 0,
        "endLine": 95,
        "endColumn": 27,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.multireport",
        "obj": "plot_percent_successful",
        "line": 95,
        "column": 0,
        "endLine": 95,
        "endColumn": 27,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.multireport",
        "obj": "plot_percent_successful.median",
        "line": 104,
        "column": 8,
        "endLine": 107,
        "endColumn": 39,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multireport",
        "obj": "plot_percent_successful",
        "line": 143,
        "column": 27,
        "endLine": 143,
        "endColumn": 33,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multireport",
        "obj": "tests_successful_plot",
        "line": 148,
        "column": 0,
        "endLine": 148,
        "endColumn": 25,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.multireport",
        "obj": "tests_successful_plot",
        "line": 148,
        "column": 0,
        "endLine": 148,
        "endColumn": 25,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multireport",
        "obj": "tests_plot",
        "line": 168,
        "column": 0,
        "endLine": 168,
        "endColumn": 14,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.multireport",
        "obj": "tests_plot",
        "line": 168,
        "column": 0,
        "endLine": 168,
        "endColumn": 14,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multireport",
        "obj": "tests_percent_plot",
        "line": 207,
        "column": 0,
        "endLine": 207,
        "endColumn": 22,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.multireport",
        "obj": "tests_percent_plot",
        "line": 207,
        "column": 0,
        "endLine": 207,
        "endColumn": 22,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multireport",
        "obj": "files_successful_plot",
        "line": 232,
        "column": 0,
        "endLine": 232,
        "endColumn": 25,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.multireport",
        "obj": "files_successful_plot",
        "line": 232,
        "column": 0,
        "endLine": 232,
        "endColumn": 25,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multireport",
        "obj": "files_plot",
        "line": 252,
        "column": 0,
        "endLine": 252,
        "endColumn": 14,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.multireport",
        "obj": "files_plot",
        "line": 252,
        "column": 0,
        "endLine": 252,
        "endColumn": 14,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multireport",
        "obj": "files_percent_plot",
        "line": 290,
        "column": 0,
        "endLine": 290,
        "endColumn": 22,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.multireport",
        "obj": "files_percent_plot",
        "line": 290,
        "column": 0,
        "endLine": 290,
        "endColumn": 22,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multireport",
        "obj": "info_plot",
        "line": 314,
        "column": 0,
        "endLine": 314,
        "endColumn": 13,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.multireport",
        "obj": "info_plot",
        "line": 314,
        "column": 0,
        "endLine": 314,
        "endColumn": 13,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multireport",
        "obj": "main_page",
        "line": 369,
        "column": 0,
        "endLine": 369,
        "endColumn": 13,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.multireport",
        "obj": "main_page",
        "line": 369,
        "column": 0,
        "endLine": 369,
        "endColumn": 13,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.multireport",
        "obj": "main_page",
        "line": 373,
        "column": 9,
        "endLine": 373,
        "endColumn": 28,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multireport",
        "obj": "main_page",
        "line": 375,
        "column": 12,
        "endLine": 382,
        "endColumn": 21,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.gunittest.multireport",
        "obj": "main_page",
        "line": 419,
        "column": 30,
        "endLine": 419,
        "endColumn": 44,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "no-member",
        "message": "Module 'itertools' has no 'izip' member",
        "message-id": "E1101"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multireport",
        "obj": "main",
        "line": 429,
        "column": 0,
        "endLine": 429,
        "endColumn": 8,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.multireport",
        "obj": "main",
        "line": 429,
        "column": 0,
        "endLine": 429,
        "endColumn": 8,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (30/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multireport",
        "obj": "main",
        "line": 469,
        "column": 20,
        "endLine": 470,
        "endColumn": 47,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.multireport",
        "obj": "main",
        "line": 475,
        "column": 39,
        "endLine": 475,
        "endColumn": 57,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.multireport",
        "obj": "main",
        "line": 475,
        "column": 39,
        "endLine": 475,
        "endColumn": 57,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multireport",
        "obj": "main",
        "line": 517,
        "column": 18,
        "endLine": 517,
        "endColumn": 59,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.gunittest.multireport",
        "obj": "main",
        "line": 517,
        "column": 71,
        "endLine": 517,
        "endColumn": 80,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "no-member",
        "message": "Instance of 'KeyError' has no 'message' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.multireport",
        "obj": "main",
        "line": 519,
        "column": 26,
        "endLine": 519,
        "endColumn": 71,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multireport",
        "obj": "main",
        "line": 548,
        "column": 20,
        "endLine": 548,
        "endColumn": 67,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.multireport",
        "obj": "main",
        "line": 429,
        "column": 0,
        "endLine": 429,
        "endColumn": 8,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (78/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.multireport",
        "obj": "main",
        "line": 519,
        "column": 26,
        "endLine": 519,
        "endColumn": 71,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multireport",
        "obj": "",
        "line": 25,
        "column": 0,
        "endLine": 25,
        "endColumn": 17,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "wrong-import-order",
        "message": "third party import \"matplotlib\" should be placed before first party imports \"grass.gunittest.checkers.text_to_keyvalue\", \"grass.gunittest.utils.ensure_dir\", \"grass.gunittest.reporters.success_to_html_percent\" ",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multireport",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 31,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "wrong-import-order",
        "message": "third party import \"matplotlib.pyplot\" should be placed before first party imports \"grass.gunittest.checkers.text_to_keyvalue\", \"grass.gunittest.utils.ensure_dir\", \"grass.gunittest.reporters.success_to_html_percent\" ",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multireport",
        "obj": "",
        "line": 31,
        "column": 0,
        "endLine": 31,
        "endColumn": 37,
        "path": "python/grass/gunittest/multireport.py",
        "symbol": "wrong-import-order",
        "message": "third party import \"matplotlib.dates.date2num\" should be placed before first party imports \"grass.gunittest.checkers.text_to_keyvalue\", \"grass.gunittest.utils.ensure_dir\", \"grass.gunittest.reporters.success_to_html_percent\" ",
        "message-id": "C0411"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.multirunner",
        "obj": "",
        "line": 76,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/multirunner.py",
        "symbol": "fixme",
        "message": "TODO: rename since every src can be used?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.multirunner",
        "obj": "",
        "line": 96,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/multirunner.py",
        "symbol": "fixme",
        "message": "TODO: if locations empty or just one we can suppose the same all the time",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.multirunner",
        "obj": "",
        "line": 105,
        "column": 31,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/multirunner.py",
        "symbol": "fixme",
        "message": "TODO: can be guessed from dist",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.multirunner",
        "obj": "",
        "line": 106,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/multirunner.py",
        "symbol": "fixme",
        "message": "TODO: create directory according to date and revision and create reports there",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.multirunner",
        "obj": "",
        "line": 145,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/multirunner.py",
        "symbol": "fixme",
        "message": "TODO: can init work without it or is there some demo location in dist?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.multirunner",
        "obj": "",
        "line": 177,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/multirunner.py",
        "symbol": "fixme",
        "message": "TODO: solve the path to source code (work now only for grass source code)",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.multirunner",
        "obj": "_get_encoding",
        "line": 24,
        "column": 19,
        "endLine": 24,
        "endColumn": 44,
        "path": "python/grass/gunittest/multirunner.py",
        "symbol": "deprecated-method",
        "message": "Using deprecated method getdefaultlocale()",
        "message-id": "W4902"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multirunner",
        "obj": "decode",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 10,
        "path": "python/grass/gunittest/multirunner.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.multirunner",
        "obj": "decode",
        "line": 31,
        "column": 4,
        "endLine": 34,
        "endColumn": 21,
        "path": "python/grass/gunittest/multirunner.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.multirunner",
        "obj": "decode",
        "line": 30,
        "column": 19,
        "endLine": 30,
        "endColumn": 27,
        "path": "python/grass/gunittest/multirunner.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'encoding'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multirunner",
        "obj": "encode",
        "line": 37,
        "column": 0,
        "endLine": 37,
        "endColumn": 10,
        "path": "python/grass/gunittest/multirunner.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.multirunner",
        "obj": "encode",
        "line": 38,
        "column": 4,
        "endLine": 41,
        "endColumn": 21,
        "path": "python/grass/gunittest/multirunner.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.multirunner",
        "obj": "encode",
        "line": 37,
        "column": 19,
        "endLine": 37,
        "endColumn": 27,
        "path": "python/grass/gunittest/multirunner.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'encoding'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multirunner",
        "obj": "main",
        "line": 51,
        "column": 0,
        "endLine": 51,
        "endColumn": 8,
        "path": "python/grass/gunittest/multirunner.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.multirunner",
        "obj": "main",
        "line": 51,
        "column": 0,
        "endLine": 51,
        "endColumn": 8,
        "path": "python/grass/gunittest/multirunner.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (23/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multirunner",
        "obj": "main",
        "line": 122,
        "column": 12,
        "endLine": 122,
        "endColumn": 65,
        "path": "python/grass/gunittest/multirunner.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.multirunner",
        "obj": "main",
        "line": 141,
        "column": 4,
        "endLine": 141,
        "endColumn": 29,
        "path": "python/grass/gunittest/multirunner.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (grass.script)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "grass.gunittest.multirunner",
        "obj": "main",
        "line": 148,
        "column": 4,
        "endLine": 148,
        "endColumn": 51,
        "path": "python/grass/gunittest/multirunner.py",
        "symbol": "too-many-function-args",
        "message": "Too many positional arguments for function call",
        "message-id": "E1121"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.multirunner",
        "obj": "main",
        "line": 116,
        "column": 8,
        "endLine": 118,
        "endColumn": 5,
        "path": "python/grass/gunittest/multirunner.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.multirunner",
        "obj": "main",
        "line": 156,
        "column": 12,
        "endLine": 172,
        "endColumn": 9,
        "path": "python/grass/gunittest/multirunner.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.multirunner",
        "obj": "main",
        "line": 184,
        "column": 12,
        "endLine": 184,
        "endColumn": 39,
        "path": "python/grass/gunittest/multirunner.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1290/1000)",
        "message-id": "C0302"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 28,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: change text_to_keyvalue to same sep as here",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 29,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: create keyvalue file and move it there together with things from checkers",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 35,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: use isep for iterables other than strings",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 37,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: this does not work for list of non-strings",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 62,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: this can fail in some (random) cases on MS Windows",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 71,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: why not remove GISDBASE by default?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 93,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: provide more effective implementation",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 131,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: use CSS class",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 135,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: use CSS class",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 139,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: use CSS class",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 165,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: here should be starting directory",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 191,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: introduce directory, not only current",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 202,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: get also date if this make sense",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 222,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: add this to svnversion function",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 237,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: these functions should be called only if we know that svn is installed",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 250,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: allow also usage of --limit",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 260,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: get also date if this make sense",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 277,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: don't do this for the top level directories?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 332,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: no directory cleaning (self.clean_before)? now cleaned by caller",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 333,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: perhaps only those whoe need it should do it (even multiple times)",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 570,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: this can be moved to the counter class",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 631,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: provide one implementation",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 683,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: add success counter to GrassTestResult base class",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 748,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: include optionally hyper link to test suite",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 749,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: file_path is reconstructed in a naive way",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 781,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: replace by better handling of potential lists when parsing",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 782,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: create link to module if running in grass or in addons",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 827,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: here we don't have opportunity to write error file",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 832,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: document info: additional information to be stored type: dict",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 845,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: this can be moved to the counter class",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 854,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: document: tested_dirs is a list and it should fit with names",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 880,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: we don't have a general mechanism for storing any type in text",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 903,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: add some general metadata here (passed in constructor)",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 925,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: considering others according to total, OK?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 939,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: move this to counter class and perhaps use aggregation",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 947,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: should we test for zero?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 962,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: replace by better handling of potential lists when parsing",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 963,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: create link to module if running in grass or in addons",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 1045,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: here we lost the possibility to include also file name",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 1049,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: there is a quite a lot duplication between this class and html reporter",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 1050,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: document: do not use it for two reports, it accumulates the results",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 1051,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: add also keyvalue summary generation?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 1064,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: this might be even a object which could add and validate",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 1079,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: create object from this, so that it can be passed from",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 1081,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: put the inside of for loop to another function",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 1100,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: should we use forward slashes also for the HTML because",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 1115,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: put keyvalue fine name to constant",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 1123,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: write else here",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 1150,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: keyvalue method should have types for keys function",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 1237,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "fixme",
        "message": "TODO: this will need changes according to potential changes in",
        "message-id": "W0511"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 14,
        "column": 0,
        "endLine": 14,
        "endColumn": 35,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from xml.sax import saxutils' instead",
        "message-id": "R0402"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "keyvalue_to_text",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 20,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "keyvalue_to_text",
        "line": 39,
        "column": 21,
        "endLine": 39,
        "endColumn": 40,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "replace_in_file",
        "line": 53,
        "column": 15,
        "endLine": 53,
        "endColumn": 35,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "replace_in_file",
        "line": 54,
        "column": 15,
        "endLine": 54,
        "endColumn": 39,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "replace_in_file",
        "line": 53,
        "column": 15,
        "endLine": 53,
        "endColumn": 35,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "replace_in_file",
        "line": 54,
        "column": 15,
        "endLine": 54,
        "endColumn": 39,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "NoopFileAnonymizer",
        "line": 66,
        "column": 0,
        "endLine": 66,
        "endColumn": 24,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "NoopFileAnonymizer.anonymize",
        "line": 67,
        "column": 4,
        "endLine": 67,
        "endColumn": 17,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "NoopFileAnonymizer",
        "line": 66,
        "column": 0,
        "endLine": 66,
        "endColumn": 24,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "FileAnonymizer",
        "line": 72,
        "column": 0,
        "endLine": 72,
        "endColumn": 20,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "FileAnonymizer.__init__",
        "line": 81,
        "column": 12,
        "endLine": 81,
        "endColumn": 42,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (grass.script)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "FileAnonymizer.anonymize",
        "line": 88,
        "column": 4,
        "endLine": 88,
        "endColumn": 17,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "FileAnonymizer",
        "line": 72,
        "column": 0,
        "endLine": 72,
        "endColumn": 20,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "get_source_url",
        "line": 113,
        "column": 4,
        "endLine": 116,
        "endColumn": 66,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "get_source_url",
        "line": 114,
        "column": 15,
        "endLine": 114,
        "endColumn": 55,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "get_source_url",
        "line": 116,
        "column": 15,
        "endLine": 116,
        "endColumn": 47,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "get_source_url",
        "line": 105,
        "column": 19,
        "endLine": 105,
        "endColumn": 23,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'path'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "get_source_url",
        "line": 105,
        "column": 25,
        "endLine": 105,
        "endColumn": 33,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'revision'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "get_source_url",
        "line": 112,
        "column": 4,
        "endLine": 112,
        "endColumn": 11,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "possibly-unused-variable",
        "message": "Possibly unused variable 'tracurl'",
        "message-id": "W0641"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "color_error_line",
        "line": 129,
        "column": 0,
        "endLine": 129,
        "endColumn": 20,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "to_web_path",
        "line": 153,
        "column": 4,
        "endLine": 156,
        "endColumn": 19,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "get_svn_revision",
        "line": 172,
        "column": 4,
        "endLine": 181,
        "endColumn": 19,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "get_svn_revision",
        "line": 167,
        "column": 8,
        "endLine": 169,
        "endColumn": 5,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "get_svn_revision",
        "line": 170,
        "column": 12,
        "endLine": 170,
        "endColumn": 18,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'stderr'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "get_svn_info",
        "line": 224,
        "column": 8,
        "endLine": 224,
        "endColumn": 20,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (errno)",
        "message-id": "C0415"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "get_svn_info",
        "line": 192,
        "column": 12,
        "endLine": 196,
        "endColumn": 9,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "get_svn_info",
        "line": 197,
        "column": 16,
        "endLine": 197,
        "endColumn": 22,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'stderr'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "years_ago",
        "line": 232,
        "column": 0,
        "endLine": 232,
        "endColumn": 13,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "get_svn_path_authors",
        "line": 266,
        "column": 8,
        "endLine": 266,
        "endColumn": 20,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (errno)",
        "message-id": "C0415"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "get_svn_path_authors",
        "line": 251,
        "column": 12,
        "endLine": 255,
        "endColumn": 9,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "get_svn_path_authors",
        "line": 256,
        "column": 16,
        "endLine": 256,
        "endColumn": 22,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'stderr'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "get_html_test_authors_table",
        "line": 274,
        "column": 0,
        "endLine": 274,
        "endColumn": 31,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 280,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in assignment",
        "message-id": "W1404"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "get_html_test_authors_table",
        "line": 299,
        "column": 8,
        "endLine": 308,
        "endColumn": 26,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesMultiReporter.start",
        "line": 331,
        "column": 4,
        "endLine": 331,
        "endColumn": 13,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesMultiReporter.finish",
        "line": 345,
        "column": 4,
        "endLine": 345,
        "endColumn": 14,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesMultiReporter.start_file_test",
        "line": 355,
        "column": 4,
        "endLine": 355,
        "endColumn": 23,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesMultiReporter.end_file_test",
        "line": 365,
        "column": 4,
        "endLine": 365,
        "endColumn": 21,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesCountingReporter",
        "line": 384,
        "column": 0,
        "endLine": 384,
        "endColumn": 36,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesCountingReporter",
        "line": 384,
        "column": 0,
        "endLine": 384,
        "endColumn": 36,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (12/7)",
        "message-id": "R0902"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesCountingReporter.start",
        "line": 402,
        "column": 4,
        "endLine": 402,
        "endColumn": 13,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesCountingReporter.start",
        "line": 402,
        "column": 20,
        "endLine": 402,
        "endColumn": 31,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'results_dir'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesCountingReporter.finish",
        "line": 410,
        "column": 4,
        "endLine": 410,
        "endColumn": 14,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesCountingReporter.start_file_test",
        "line": 424,
        "column": 4,
        "endLine": 424,
        "endColumn": 23,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesCountingReporter.start_file_test",
        "line": 424,
        "column": 30,
        "endLine": 424,
        "endColumn": 36,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'module'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesCountingReporter.end_file_test",
        "line": 429,
        "column": 4,
        "endLine": 429,
        "endColumn": 21,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesCountingReporter.end_file_test",
        "line": 429,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "percent_to_html",
        "line": 440,
        "column": 0,
        "endLine": 440,
        "endColumn": 19,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "percent_to_html",
        "line": 441,
        "column": 4,
        "endLine": 450,
        "endColumn": 23,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "percent_to_html",
        "line": 444,
        "column": 15,
        "endLine": 444,
        "endColumn": 28,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "percent_to_html",
        "line": 451,
        "column": 11,
        "endLine": 451,
        "endColumn": 63,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "wrap_stdstream_to_html",
        "line": 456,
        "column": 0,
        "endLine": 456,
        "endColumn": 26,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "wrap_stdstream_to_html",
        "line": 457,
        "column": 13,
        "endLine": 457,
        "endColumn": 43,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "wrap_stdstream_to_html",
        "line": 459,
        "column": 11,
        "endLine": 459,
        "endColumn": 29,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "wrap_stdstream_to_html",
        "line": 461,
        "column": 9,
        "endLine": 461,
        "endColumn": 21,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "wrap_stdstream_to_html",
        "line": 459,
        "column": 11,
        "endLine": 459,
        "endColumn": 29,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "html_file_preview",
        "line": 468,
        "column": 0,
        "endLine": 468,
        "endColumn": 21,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "html_file_preview",
        "line": 472,
        "column": 15,
        "endLine": 472,
        "endColumn": 64,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "html_file_preview",
        "line": 475,
        "column": 15,
        "endLine": 475,
        "endColumn": 58,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "html_file_preview",
        "line": 480,
        "column": 13,
        "endLine": 480,
        "endColumn": 27,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "html_file_preview.tail",
        "line": 486,
        "column": 37,
        "endLine": 486,
        "endColumn": 51,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "html_file_preview",
        "line": 492,
        "column": 15,
        "endLine": 492,
        "endColumn": 70,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "returncode_to_html_text",
        "line": 497,
        "column": 0,
        "endLine": 497,
        "endColumn": 27,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "returncode_to_html_text",
        "line": 498,
        "column": 4,
        "endLine": 506,
        "endColumn": 60,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "returncode_to_html_sentence",
        "line": 510,
        "column": 0,
        "endLine": 510,
        "endColumn": 31,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "returncode_to_html_sentence",
        "line": 511,
        "column": 4,
        "endLine": 520,
        "endColumn": 9,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "returncode_to_html_sentence",
        "line": 513,
        "column": 12,
        "endLine": 514,
        "endColumn": 43,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "returncode_to_html_sentence",
        "line": 518,
        "column": 12,
        "endLine": 519,
        "endColumn": 46,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "returncode_to_success_html_par",
        "line": 523,
        "column": 0,
        "endLine": 523,
        "endColumn": 34,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "returncode_to_success_html_par",
        "line": 524,
        "column": 4,
        "endLine": 527,
        "endColumn": 85,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "success_to_html_text",
        "line": 530,
        "column": 0,
        "endLine": 530,
        "endColumn": 24,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "success_to_html_text",
        "line": 531,
        "column": 4,
        "endLine": 540,
        "endColumn": 9,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "success_to_html_percent",
        "line": 546,
        "column": 0,
        "endLine": 546,
        "endColumn": 27,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter",
        "line": 555,
        "column": 0,
        "endLine": 555,
        "endColumn": 32,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter",
        "line": 555,
        "column": 0,
        "endLine": 555,
        "endColumn": 32,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (10/7)",
        "message-id": "R0902"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.start",
        "line": 568,
        "column": 26,
        "endLine": 568,
        "endColumn": 51,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.start",
        "line": 590,
        "column": 24,
        "endLine": 590,
        "endColumn": 70,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.start",
        "line": 594,
        "column": 12,
        "endLine": 605,
        "endColumn": 34,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.start",
        "line": 568,
        "column": 26,
        "endLine": 568,
        "endColumn": 51,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.finish",
        "line": 613,
        "column": 12,
        "endLine": 620,
        "endColumn": 22,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.finish.format_percentage",
        "line": 633,
        "column": 12,
        "endLine": 636,
        "endColumn": 43,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.finish.format_percentage",
        "line": 634,
        "column": 23,
        "endLine": 634,
        "endColumn": 37,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.finish",
        "line": 639,
        "column": 12,
        "endLine": 642,
        "endColumn": 54,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.finish",
        "line": 653,
        "column": 12,
        "endLine": 655,
        "endColumn": 28,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.end_file_test",
        "line": 663,
        "column": 4,
        "endLine": 663,
        "endColumn": 21,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "arguments-differ",
        "message": "Number of parameters was 3 in 'GrassTestFilesCountingReporter.end_file_test' and is now 8 in overriding 'GrassTestFilesHtmlReporter.end_file_test' method",
        "message-id": "W0221"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.end_file_test",
        "line": 663,
        "column": 4,
        "endLine": 663,
        "endColumn": 21,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "arguments-differ",
        "message": "Variadics removed in overriding 'GrassTestFilesHtmlReporter.end_file_test' method",
        "message-id": "W0221"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.end_file_test",
        "line": 663,
        "column": 4,
        "endLine": 663,
        "endColumn": 21,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.end_file_test",
        "line": 663,
        "column": 4,
        "endLine": 663,
        "endColumn": 21,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (24/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.end_file_test",
        "line": 737,
        "column": 21,
        "endLine": 737,
        "endColumn": 47,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.end_file_test",
        "line": 752,
        "column": 12,
        "endLine": 762,
        "endColumn": 59,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.end_file_test",
        "line": 784,
        "column": 15,
        "endLine": 784,
        "endColumn": 40,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "unidiomatic-typecheck",
        "message": "Use isinstance() rather than type() for a typecheck.",
        "message-id": "C0123"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.end_file_test",
        "line": 787,
        "column": 16,
        "endLine": 787,
        "endColumn": 62,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.end_file_test",
        "line": 737,
        "column": 21,
        "endLine": 737,
        "endColumn": 47,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.start",
        "line": 571,
        "column": 8,
        "endLine": 571,
        "endColumn": 21,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'failures' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.start",
        "line": 572,
        "column": 8,
        "endLine": 572,
        "endColumn": 19,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'errors' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.start",
        "line": 573,
        "column": 8,
        "endLine": 573,
        "endColumn": 20,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'skipped' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.start",
        "line": 574,
        "column": 8,
        "endLine": 574,
        "endColumn": 22,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'successes' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.start",
        "line": 575,
        "column": 8,
        "endLine": 575,
        "endColumn": 30,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'expected_failures' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.start",
        "line": 576,
        "column": 8,
        "endLine": 576,
        "endColumn": 31,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'unexpected_success' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesHtmlReporter.start",
        "line": 577,
        "column": 8,
        "endLine": 577,
        "endColumn": 18,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'total' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesKeyValueReporter",
        "line": 834,
        "column": 0,
        "endLine": 834,
        "endColumn": 36,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesKeyValueReporter",
        "line": 834,
        "column": 0,
        "endLine": 834,
        "endColumn": 36,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (14/7)",
        "message-id": "R0902"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesKeyValueReporter.finish",
        "line": 910,
        "column": 13,
        "endLine": 910,
        "endColumn": 40,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesKeyValueReporter.end_file_test",
        "line": 914,
        "column": 4,
        "endLine": 914,
        "endColumn": 21,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "arguments-differ",
        "message": "Number of parameters was 3 in 'GrassTestFilesCountingReporter.end_file_test' and is now 8 in overriding 'GrassTestFilesKeyValueReporter.end_file_test' method",
        "message-id": "W0221"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesKeyValueReporter.end_file_test",
        "line": 914,
        "column": 4,
        "endLine": 914,
        "endColumn": 21,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "arguments-differ",
        "message": "Variadics removed in overriding 'GrassTestFilesKeyValueReporter.end_file_test' method",
        "message-id": "W0221"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesKeyValueReporter.end_file_test",
        "line": 914,
        "column": 4,
        "endLine": 914,
        "endColumn": 21,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesKeyValueReporter.end_file_test",
        "line": 914,
        "column": 4,
        "endLine": 914,
        "endColumn": 21,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (17/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesKeyValueReporter.start",
        "line": 846,
        "column": 8,
        "endLine": 846,
        "endColumn": 21,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'failures' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesKeyValueReporter.start",
        "line": 847,
        "column": 8,
        "endLine": 847,
        "endColumn": 19,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'errors' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesKeyValueReporter.start",
        "line": 848,
        "column": 8,
        "endLine": 848,
        "endColumn": 20,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'skipped' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesKeyValueReporter.start",
        "line": 849,
        "column": 8,
        "endLine": 849,
        "endColumn": 22,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'successes' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesKeyValueReporter.start",
        "line": 850,
        "column": 8,
        "endLine": 850,
        "endColumn": 30,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'expected_failures' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesKeyValueReporter.start",
        "line": 851,
        "column": 8,
        "endLine": 851,
        "endColumn": 31,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'unexpected_success' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesKeyValueReporter.start",
        "line": 852,
        "column": 8,
        "endLine": 852,
        "endColumn": 18,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'total' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesKeyValueReporter.start",
        "line": 855,
        "column": 8,
        "endLine": 855,
        "endColumn": 18,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'names' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesKeyValueReporter.start",
        "line": 856,
        "column": 8,
        "endLine": 856,
        "endColumn": 24,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'tested_dirs' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesKeyValueReporter.start",
        "line": 857,
        "column": 8,
        "endLine": 857,
        "endColumn": 30,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'files_returncodes' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesKeyValueReporter.start",
        "line": 860,
        "column": 8,
        "endLine": 860,
        "endColumn": 20,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'modules' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesKeyValueReporter.start",
        "line": 861,
        "column": 8,
        "endLine": 861,
        "endColumn": 31,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'test_files_authors' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesTextReporter",
        "line": 975,
        "column": 0,
        "endLine": 975,
        "endColumn": 32,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesTextReporter.start",
        "line": 980,
        "column": 4,
        "endLine": 980,
        "endColumn": 13,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "useless-parent-delegation",
        "message": "Useless parent or super() delegation in method 'start'",
        "message-id": "W0246"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesTextReporter.finish.format_percentage",
        "line": 987,
        "column": 12,
        "endLine": 990,
        "endColumn": 43,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesTextReporter.finish.format_percentage",
        "line": 988,
        "column": 23,
        "endLine": 988,
        "endColumn": 37,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesTextReporter.finish",
        "line": 993,
        "column": 12,
        "endLine": 996,
        "endColumn": 54,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesTextReporter.start_file_test",
        "line": 1009,
        "column": 27,
        "endLine": 1009,
        "endColumn": 48,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesTextReporter.end_file_test",
        "line": 1013,
        "column": 4,
        "endLine": 1013,
        "endColumn": 21,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "arguments-differ",
        "message": "Number of parameters was 3 in 'GrassTestFilesCountingReporter.end_file_test' and is now 8 in overriding 'GrassTestFilesTextReporter.end_file_test' method",
        "message-id": "W0221"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesTextReporter.end_file_test",
        "line": 1013,
        "column": 4,
        "endLine": 1013,
        "endColumn": 21,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "arguments-differ",
        "message": "Variadics removed in overriding 'GrassTestFilesTextReporter.end_file_test' method",
        "message-id": "W0221"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesTextReporter.end_file_test",
        "line": 1013,
        "column": 4,
        "endLine": 1013,
        "endColumn": 21,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "GrassTestFilesTextReporter.end_file_test",
        "line": 1029,
        "column": 17,
        "endLine": 1029,
        "endColumn": 29,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "TestsuiteDirReporter",
        "line": 1053,
        "column": 0,
        "endLine": 1053,
        "endColumn": 26,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "TestsuiteDirReporter",
        "line": 1053,
        "column": 0,
        "endLine": 1053,
        "endColumn": 26,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (14/7)",
        "message-id": "R0902"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "TestsuiteDirReporter.report_for_dir",
        "line": 1078,
        "column": 4,
        "endLine": 1078,
        "endColumn": 22,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "TestsuiteDirReporter.report_for_dir",
        "line": 1078,
        "column": 4,
        "endLine": 1078,
        "endColumn": 22,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (34/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "TestsuiteDirReporter.report_for_dir",
        "line": 1099,
        "column": 15,
        "endLine": 1099,
        "endColumn": 35,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "TestsuiteDirReporter.report_for_dir",
        "line": 1102,
        "column": 15,
        "endLine": 1102,
        "endColumn": 65,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "TestsuiteDirReporter.report_for_dir",
        "line": 1120,
        "column": 17,
        "endLine": 1120,
        "endColumn": 44,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "TestsuiteDirReporter.report_for_dir",
        "line": 1155,
        "column": 15,
        "endLine": 1155,
        "endColumn": 50,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "unidiomatic-typecheck",
        "message": "Use isinstance() rather than type() for a typecheck.",
        "message-id": "C0123"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "TestsuiteDirReporter.report_for_dir",
        "line": 1193,
        "column": 12,
        "endLine": 1198,
        "endColumn": 35,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "TestsuiteDirReporter.report_for_dir",
        "line": 1078,
        "column": 4,
        "endLine": 1078,
        "endColumn": 22,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (69/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "TestsuiteDirReporter.report_for_dir",
        "line": 1099,
        "column": 15,
        "endLine": 1099,
        "endColumn": 35,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "TestsuiteDirReporter.report_for_dirs",
        "line": 1236,
        "column": 4,
        "endLine": 1236,
        "endColumn": 23,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "TestsuiteDirReporter.report_for_dirs",
        "line": 1241,
        "column": 15,
        "endLine": 1241,
        "endColumn": 35,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 1242,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in assignment",
        "message-id": "W1404"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "TestsuiteDirReporter.report_for_dirs",
        "line": 1271,
        "column": 12,
        "endLine": 1278,
        "endColumn": 22,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.reporters",
        "obj": "TestsuiteDirReporter.report_for_dirs",
        "line": 1241,
        "column": 15,
        "endLine": 1241,
        "endColumn": 35,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.reporters",
        "obj": "",
        "line": 25,
        "column": 0,
        "endLine": 25,
        "endColumn": 23,
        "path": "python/grass/gunittest/reporters.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"io.StringIO\" should be placed before local imports \"utils.ensure_dir\", \"checkers.text_to_keyvalue\"",
        "message-id": "C0411"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.runner",
        "obj": "",
        "line": 53,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "fixme",
        "message": "TODO: better would be to pass start at the beginning",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.runner",
        "obj": "",
        "line": 55,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "fixme",
        "message": "TODO: document: we expect all grass classes to have setTimes",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.runner",
        "obj": "",
        "line": 56,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "fixme",
        "message": "TODO: alternatively, be more forgiving for non-unittest methods",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.runner",
        "obj": "",
        "line": 59,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "fixme",
        "message": "TODO: implement this",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.runner",
        "obj": "",
        "line": 242,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "fixme",
        "message": "TODO: name should be included by test file caller",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.runner",
        "obj": "",
        "line": 279,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "fixme",
        "message": "TODO: document this: if not supported by view,",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.runner",
        "obj": "",
        "line": 285,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "fixme",
        "message": "TODO: include each module just once? list good and bad modules?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.runner",
        "obj": "",
        "line": 290,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "fixme",
        "message": "TODO: include also type modules?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.runner",
        "obj": "",
        "line": 291,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "fixme",
        "message": "TODO: include also C++ code?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.runner",
        "obj": "",
        "line": 292,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "fixme",
        "message": "TODO: distinguish C and Python modules?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.runner",
        "obj": "",
        "line": 441,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "fixme",
        "message": "TODO: better would be to pass start at the beginning",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.runner",
        "obj": "",
        "line": 443,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "fixme",
        "message": "TODO: document: we expect all grass classes to have setTimes",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.runner",
        "obj": "",
        "line": 444,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "fixme",
        "message": "TODO: alternatively, be more forgiving for non-unittest methods",
        "message-id": "W0511"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 10,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "invalid-name",
        "message": "Constant name \"__unittest\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "_WritelnDecorator.writeln",
        "line": 34,
        "column": 4,
        "endLine": 34,
        "endColumn": 15,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "TestResult",
        "line": 40,
        "column": 0,
        "endLine": 40,
        "endColumn": 16,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "TestResult.setTimes",
        "line": 57,
        "column": 4,
        "endLine": 57,
        "endColumn": 16,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "TestResult.setTimes",
        "line": 57,
        "column": 4,
        "endLine": 57,
        "endColumn": 16,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "invalid-name",
        "message": "Method name \"setTimes\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "TextTestResult.__init__",
        "line": 74,
        "column": 8,
        "endLine": 74,
        "endColumn": 20,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"showAll\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "TextTestResult.getDescription",
        "line": 82,
        "column": 4,
        "endLine": 82,
        "endColumn": 22,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "TextTestResult.getDescription",
        "line": 82,
        "column": 4,
        "endLine": 82,
        "endColumn": 22,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "invalid-name",
        "message": "Method name \"getDescription\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.runner",
        "obj": "TextTestResult.getDescription",
        "line": 84,
        "column": 8,
        "endLine": 87,
        "endColumn": 28,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "TextTestResult.addSkip",
        "line": 123,
        "column": 32,
        "endLine": 123,
        "endColumn": 47,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "TextTestResult.printErrorList",
        "line": 150,
        "column": 4,
        "endLine": 150,
        "endColumn": 22,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "TextTestResult.printErrorList",
        "line": 150,
        "column": 4,
        "endLine": 150,
        "endColumn": 22,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "invalid-name",
        "message": "Method name \"printErrorList\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "TextTestResult.printErrorList",
        "line": 153,
        "column": 32,
        "endLine": 153,
        "endColumn": 40,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "TextTestResult.printErrorList",
        "line": 155,
        "column": 32,
        "endLine": 155,
        "endColumn": 36,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "TextTestResult.stopTestRun",
        "line": 167,
        "column": 26,
        "endLine": 167,
        "endColumn": 41,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "TextTestResult.stopTestRun",
        "line": 169,
        "column": 30,
        "endLine": 169,
        "endColumn": 41,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "TextTestResult.stopTestRun",
        "line": 172,
        "column": 8,
        "endLine": 172,
        "endColumn": 21,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "invalid-name",
        "message": "Variable name \"expectedFails\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "TextTestResult.stopTestRun",
        "line": 172,
        "column": 24,
        "endLine": 172,
        "endColumn": 43,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "invalid-name",
        "message": "Variable name \"unexpectedSuccesses\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "TextTestResult.stopTestRun",
        "line": 176,
        "column": 8,
        "endLine": 176,
        "endColumn": 21,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "invalid-name",
        "message": "Variable name \"expectedFails\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "TextTestResult.stopTestRun",
        "line": 176,
        "column": 23,
        "endLine": 176,
        "endColumn": 42,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "invalid-name",
        "message": "Variable name \"unexpectedSuccesses\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "TextTestResult.stopTestRun",
        "line": 183,
        "column": 29,
        "endLine": 183,
        "endColumn": 42,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "TextTestResult.stopTestRun",
        "line": 185,
        "column": 29,
        "endLine": 185,
        "endColumn": 40,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "TextTestResult.stopTestRun",
        "line": 189,
        "column": 25,
        "endLine": 189,
        "endColumn": 37,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "TextTestResult.stopTestRun",
        "line": 191,
        "column": 25,
        "endLine": 191,
        "endColumn": 47,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "TextTestResult.stopTestRun",
        "line": 193,
        "column": 25,
        "endLine": 193,
        "endColumn": 50,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "TextTestResult.stopTestRun",
        "line": 195,
        "column": 32,
        "endLine": 195,
        "endColumn": 39,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "KeyValueTestResult.stopTestRun",
        "line": 249,
        "column": 21,
        "endLine": 249,
        "endColumn": 33,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "KeyValueTestResult.stopTestRun",
        "line": 260,
        "column": 8,
        "endLine": 260,
        "endColumn": 21,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "invalid-name",
        "message": "Variable name \"expectedFails\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "KeyValueTestResult.stopTestRun",
        "line": 260,
        "column": 23,
        "endLine": 260,
        "endColumn": 42,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "invalid-name",
        "message": "Variable name \"unexpectedSuccesses\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "KeyValueTestResult.stopTestRun",
        "line": 263,
        "column": 21,
        "endLine": 263,
        "endColumn": 32,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "KeyValueTestResult.stopTestRun",
        "line": 272,
        "column": 21,
        "endLine": 272,
        "endColumn": 31,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "KeyValueTestResult.stopTestRun",
        "line": 274,
        "column": 21,
        "endLine": 274,
        "endColumn": 34,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "KeyValueTestResult.stopTestRun",
        "line": 275,
        "column": 21,
        "endLine": 275,
        "endColumn": 32,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "KeyValueTestResult.stopTestRun",
        "line": 276,
        "column": 21,
        "endLine": 276,
        "endColumn": 35,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "KeyValueTestResult.stopTestRun",
        "line": 277,
        "column": 21,
        "endLine": 277,
        "endColumn": 33,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "KeyValueTestResult.stopTestRun",
        "line": 282,
        "column": 21,
        "endLine": 282,
        "endColumn": 43,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "KeyValueTestResult.stopTestRun",
        "line": 283,
        "column": 21,
        "endLine": 283,
        "endColumn": 46,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "KeyValueTestResult.stopTestRun",
        "line": 286,
        "column": 21,
        "endLine": 286,
        "endColumn": 40,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "KeyValueTestResult.stopTestRun",
        "line": 287,
        "column": 21,
        "endLine": 287,
        "endColumn": 45,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "KeyValueTestResult.stopTestRun",
        "line": 293,
        "column": 21,
        "endLine": 293,
        "endColumn": 35,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "MultiTestResult",
        "line": 300,
        "column": 0,
        "endLine": 300,
        "endColumn": 21,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "GrassTestRunner",
        "line": 456,
        "column": 0,
        "endLine": 456,
        "endColumn": 21,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.runner",
        "obj": "GrassTestRunner.__init__",
        "line": 457,
        "column": 4,
        "endLine": 457,
        "endColumn": 16,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "GrassTestRunner.run",
        "line": 479,
        "column": 8,
        "endLine": 479,
        "endColumn": 17,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startTime\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "GrassTestRunner.run",
        "line": 480,
        "column": 8,
        "endLine": 480,
        "endColumn": 20,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startTestRun\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "GrassTestRunner.run",
        "line": 486,
        "column": 12,
        "endLine": 486,
        "endColumn": 20,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "invalid-name",
        "message": "Variable name \"stopTime\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "GrassTestRunner.run",
        "line": 487,
        "column": 12,
        "endLine": 487,
        "endColumn": 21,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "invalid-name",
        "message": "Variable name \"timeTaken\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "GrassTestRunner.run",
        "line": 488,
        "column": 12,
        "endLine": 488,
        "endColumn": 20,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "invalid-name",
        "message": "Variable name \"setTimes\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.runner",
        "obj": "GrassTestRunner.run",
        "line": 491,
        "column": 12,
        "endLine": 491,
        "endColumn": 23,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "invalid-name",
        "message": "Variable name \"stopTestRun\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.gunittest.runner",
        "obj": "GrassTestRunner",
        "line": 456,
        "column": 0,
        "endLine": 456,
        "endColumn": 21,
        "path": "python/grass/gunittest/runner.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.utils",
        "obj": "do_doctest_gettext_workaround.new_displayhook",
        "line": 50,
        "column": 29,
        "endLine": 50,
        "endColumn": 35,
        "path": "python/grass/gunittest/utils.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.utils",
        "obj": "do_doctest_gettext_workaround",
        "line": 58,
        "column": 4,
        "endLine": 58,
        "endColumn": 19,
        "path": "python/grass/gunittest/utils.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (builtins)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "grass.gunittest.utils",
        "obj": "safe_repr",
        "line": 68,
        "column": 0,
        "endLine": 68,
        "endColumn": 13,
        "path": "python/grass/gunittest/utils.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.gunittest.utils",
        "obj": "safe_repr",
        "line": 71,
        "column": 11,
        "endLine": 71,
        "endColumn": 20,
        "path": "python/grass/gunittest/utils.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "convention",
        "module": "grass.imaging",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/imaging/__init__.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2avi",
        "obj": "_cleanDir",
        "line": 50,
        "column": 0,
        "endLine": 50,
        "endColumn": 13,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "invalid-name",
        "message": "Function name \"_cleanDir\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2avi",
        "obj": "_cleanDir",
        "line": 50,
        "column": 14,
        "endLine": 50,
        "endColumn": 21,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "invalid-name",
        "message": "Argument name \"tempDir\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2avi",
        "obj": "_cleanDir",
        "line": 54,
        "column": 15,
        "endLine": 54,
        "endColumn": 24,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2avi",
        "obj": "_cleanDir",
        "line": 51,
        "column": 8,
        "endLine": 51,
        "endColumn": 9,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'i'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2avi",
        "obj": "writeAvi",
        "line": 62,
        "column": 0,
        "endLine": 62,
        "endColumn": 12,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "invalid-name",
        "message": "Function name \"writeAvi\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2avi",
        "obj": "writeAvi",
        "line": 67,
        "column": 4,
        "endLine": 67,
        "endColumn": 16,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "invalid-name",
        "message": "Argument name \"inputOptions\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2avi",
        "obj": "writeAvi",
        "line": 68,
        "column": 4,
        "endLine": 68,
        "endColumn": 17,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "invalid-name",
        "message": "Argument name \"outputOptions\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2avi",
        "obj": "writeAvi",
        "line": 62,
        "column": 0,
        "endLine": 62,
        "endColumn": 12,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2avi",
        "obj": "writeAvi",
        "line": 99,
        "column": 8,
        "endLine": 99,
        "endColumn": 71,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'except Exception as exc' and 'raise ValueError(_('Invalid duration parameter for writeAvi.')) from exc'",
        "message-id": "W0707"
    },
    {
        "type": "error",
        "module": "grass.imaging.images2avi",
        "obj": "writeAvi",
        "line": 99,
        "column": 25,
        "endLine": 99,
        "endColumn": 26,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2avi",
        "obj": "writeAvi",
        "line": 102,
        "column": 4,
        "endLine": 102,
        "endColumn": 11,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "invalid-name",
        "message": "Variable name \"tempDir\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2avi",
        "obj": "writeAvi",
        "line": 106,
        "column": 4,
        "endLine": 106,
        "endColumn": 5,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "invalid-name",
        "message": "Variable name \"N\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2avi",
        "obj": "writeAvi",
        "line": 116,
        "column": 14,
        "endLine": 116,
        "endColumn": 32,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2avi",
        "obj": "writeAvi",
        "line": 117,
        "column": 15,
        "endLine": 117,
        "endColumn": 29,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2avi",
        "obj": "writeAvi",
        "line": 118,
        "column": 15,
        "endLine": 118,
        "endColumn": 36,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2avi",
        "obj": "writeAvi",
        "line": 122,
        "column": 4,
        "endLine": 122,
        "endColumn": 5,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "invalid-name",
        "message": "Variable name \"S\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2avi",
        "obj": "writeAvi",
        "line": 127,
        "column": 4,
        "endLine": 127,
        "endColumn": 10,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "invalid-name",
        "message": "Variable name \"outPut\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2avi",
        "obj": "writeAvi",
        "line": 132,
        "column": 8,
        "endLine": 144,
        "endColumn": 57,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "error",
        "module": "grass.imaging.images2avi",
        "obj": "writeAvi",
        "line": 138,
        "column": 18,
        "endLine": 138,
        "endColumn": 19,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.imaging.images2avi",
        "obj": "writeAvi",
        "line": 144,
        "column": 31,
        "endLine": 144,
        "endColumn": 32,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2avi",
        "obj": "writeAvi",
        "line": 149,
        "column": 15,
        "endLine": 149,
        "endColumn": 24,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2avi",
        "obj": "writeAvi",
        "line": 152,
        "column": 12,
        "endLine": 155,
        "endColumn": 21,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2avi",
        "obj": "writeAvi",
        "line": 62,
        "column": 0,
        "endLine": 62,
        "endColumn": 12,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2avi",
        "obj": "writeAvi",
        "line": 122,
        "column": 8,
        "endLine": 124,
        "endColumn": 5,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2avi",
        "obj": "readAvi",
        "line": 161,
        "column": 0,
        "endLine": 161,
        "endColumn": 11,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "invalid-name",
        "message": "Function name \"readAvi\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2avi",
        "obj": "readAvi",
        "line": 161,
        "column": 22,
        "endLine": 161,
        "endColumn": 29,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "invalid-name",
        "message": "Argument name \"asNumpy\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2avi",
        "obj": "readAvi",
        "line": 177,
        "column": 4,
        "endLine": 177,
        "endColumn": 11,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "invalid-name",
        "message": "Variable name \"tempDir\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2avi",
        "obj": "readAvi",
        "line": 186,
        "column": 4,
        "endLine": 186,
        "endColumn": 5,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "invalid-name",
        "message": "Variable name \"S\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2avi",
        "obj": "readAvi",
        "line": 191,
        "column": 4,
        "endLine": 191,
        "endColumn": 10,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "invalid-name",
        "message": "Variable name \"outPut\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2avi",
        "obj": "readAvi",
        "line": 193,
        "column": 4,
        "endLine": 204,
        "endColumn": 26,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1720"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2avi",
        "obj": "readAvi",
        "line": 186,
        "column": 8,
        "endLine": 188,
        "endColumn": 5,
        "path": "python/grass/imaging/images2avi.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1119/1000)",
        "message-id": "C0302"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2gif",
        "obj": "",
        "line": 65,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "fixme",
        "message": "todo: This module should be part of imageio (or at least based on)",
        "message-id": "W0511"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "",
        "line": 73,
        "column": 4,
        "endLine": 73,
        "endColumn": 10,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Constant name \"pillow\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "",
        "line": 77,
        "column": 8,
        "endLine": 77,
        "endColumn": 14,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Constant name \"pillow\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "get_cKDTree",
        "line": 88,
        "column": 0,
        "endLine": 88,
        "endColumn": 15,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "get_cKDTree",
        "line": 88,
        "column": 0,
        "endLine": 88,
        "endColumn": 15,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Function name \"get_cKDTree\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "get_cKDTree",
        "line": 90,
        "column": 8,
        "endLine": 90,
        "endColumn": 41,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (scipy.spatial.cKDTree)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "checkImages",
        "line": 103,
        "column": 0,
        "endLine": 103,
        "endColumn": 15,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Function name \"checkImages\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2gif",
        "obj": "checkImages",
        "line": 103,
        "column": 16,
        "endLine": 103,
        "endColumn": 22,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'images' from outer scope (line 1118)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2gif",
        "obj": "checkImages",
        "line": 113,
        "column": 8,
        "endLine": 113,
        "endColumn": 10,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'im' from outer scope (line 1113)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "intToBin",
        "line": 146,
        "column": 0,
        "endLine": 146,
        "endColumn": 12,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Function name \"intToBin\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.getheaderAnim",
        "line": 158,
        "column": 4,
        "endLine": 158,
        "endColumn": 21,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Method name \"getheaderAnim\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.getheaderAnim",
        "line": 158,
        "column": 28,
        "endLine": 158,
        "endColumn": 30,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'im' from outer scope (line 1113)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.getImageDescriptor",
        "line": 169,
        "column": 4,
        "endLine": 169,
        "endColumn": 26,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Method name \"getImageDescriptor\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.getImageDescriptor",
        "line": 169,
        "column": 33,
        "endLine": 169,
        "endColumn": 35,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'im' from outer scope (line 1113)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.getAppExt",
        "line": 202,
        "column": 4,
        "endLine": 202,
        "endColumn": 17,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Method name \"getAppExt\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.getAppExt",
        "line": 216,
        "column": 11,
        "endLine": 216,
        "endColumn": 15,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "using-constant-test",
        "message": "Using a conditional statement with a constant value",
        "message-id": "W0125"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.getGraphicsControlExt",
        "line": 224,
        "column": 4,
        "endLine": 224,
        "endColumn": 29,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Method name \"getGraphicsControlExt\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.handleSubRectangles",
        "line": 252,
        "column": 4,
        "endLine": 252,
        "endColumn": 27,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Method name \"handleSubRectangles\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.handleSubRectangles",
        "line": 252,
        "column": 42,
        "endLine": 252,
        "endColumn": 55,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Argument name \"subRectangles\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.handleSubRectangles",
        "line": 252,
        "column": 34,
        "endLine": 252,
        "endColumn": 40,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'images' from outer scope (line 1118)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.handleSubRectangles",
        "line": 284,
        "column": 16,
        "endLine": 284,
        "endColumn": 18,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'im' from outer scope (line 1113)",
        "message-id": "W0621"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.handleSubRectangles",
        "line": 268,
        "column": 25,
        "endLine": 268,
        "endColumn": 46,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "unnecessary-comprehension",
        "message": "Unnecessary use of a comprehension, use list(xy) instead.",
        "message-id": "R1721"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.handleSubRectangles",
        "line": 283,
        "column": 12,
        "endLine": 292,
        "endColumn": 33,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "consider-using-enumerate",
        "message": "Consider using enumerate instead of iterating with range and len",
        "message-id": "C0200"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.getSubRectangles",
        "line": 300,
        "column": 4,
        "endLine": 300,
        "endColumn": 24,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Method name \"getSubRectangles\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.getSubRectangles",
        "line": 327,
        "column": 12,
        "endLine": 327,
        "endColumn": 14,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'im' from outer scope (line 1113)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.getSubRectangles",
        "line": 333,
        "column": 12,
        "endLine": 333,
        "endColumn": 13,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Variable name \"X\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.getSubRectangles",
        "line": 334,
        "column": 12,
        "endLine": 334,
        "endColumn": 13,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Variable name \"Y\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.convertImagesToPIL",
        "line": 354,
        "column": 4,
        "endLine": 354,
        "endColumn": 26,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Method name \"convertImagesToPIL\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.convertImagesToPIL",
        "line": 354,
        "column": 33,
        "endLine": 354,
        "endColumn": 39,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'images' from outer scope (line 1118)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.convertImagesToPIL",
        "line": 364,
        "column": 12,
        "endLine": 364,
        "endColumn": 14,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'im' from outer scope (line 1113)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.convertImagesToPIL",
        "line": 382,
        "column": 16,
        "endLine": 382,
        "endColumn": 26,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nqInstance\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.convertImagesToPIL",
        "line": 391,
        "column": 12,
        "endLine": 391,
        "endColumn": 14,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Variable name \"AD\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.writeGifToFile",
        "line": 399,
        "column": 4,
        "endLine": 399,
        "endColumn": 22,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Method name \"writeGifToFile\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.writeGifToFile",
        "line": 399,
        "column": 4,
        "endLine": 399,
        "endColumn": 22,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.writeGifToFile",
        "line": 399,
        "column": 4,
        "endLine": 399,
        "endColumn": 22,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (21/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.writeGifToFile",
        "line": 399,
        "column": 33,
        "endLine": 399,
        "endColumn": 39,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'images' from outer scope (line 1118)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.writeGifToFile",
        "line": 411,
        "column": 12,
        "endLine": 411,
        "endColumn": 14,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'im' from outer scope (line 1113)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.writeGifToFile",
        "line": 423,
        "column": 8,
        "endLine": 423,
        "endColumn": 21,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Variable name \"globalPalette\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.writeGifToFile",
        "line": 427,
        "column": 8,
        "endLine": 427,
        "endColumn": 18,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Variable name \"firstFrame\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.writeGifToFile",
        "line": 443,
        "column": 16,
        "endLine": 443,
        "endColumn": 26,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Variable name \"firstFrame\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2gif",
        "obj": "GifWriter.writeGifToFile",
        "line": 445,
        "column": 15,
        "endLine": 445,
        "endColumn": 19,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "using-constant-test",
        "message": "Using a conditional statement with a constant value",
        "message-id": "W0125"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "writeGif",
        "line": 480,
        "column": 0,
        "endLine": 480,
        "endColumn": 12,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Function name \"writeGif\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2gif",
        "obj": "writeGif",
        "line": 480,
        "column": 23,
        "endLine": 480,
        "endColumn": 29,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'images' from outer scope (line 1118)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "writeGifPillow",
        "line": 505,
        "column": 0,
        "endLine": 505,
        "endColumn": 18,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Function name \"writeGifPillow\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2gif",
        "obj": "writeGifPillow",
        "line": 505,
        "column": 29,
        "endLine": 505,
        "endColumn": 35,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'images' from outer scope (line 1118)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2gif",
        "obj": "writeGifPillow",
        "line": 520,
        "column": 8,
        "endLine": 520,
        "endColumn": 10,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'im' from outer scope (line 1113)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "writeGifVisvis",
        "line": 531,
        "column": 0,
        "endLine": 531,
        "endColumn": 18,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Function name \"writeGifVisvis\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "writeGifVisvis",
        "line": 538,
        "column": 4,
        "endLine": 538,
        "endColumn": 17,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Argument name \"subRectangles\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2gif",
        "obj": "writeGifVisvis",
        "line": 531,
        "column": 0,
        "endLine": 531,
        "endColumn": 18,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2gif",
        "obj": "writeGifVisvis",
        "line": 533,
        "column": 4,
        "endLine": 533,
        "endColumn": 10,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'images' from outer scope (line 1118)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "writeGifVisvis",
        "line": 584,
        "column": 4,
        "endLine": 584,
        "endColumn": 13,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Variable name \"gifWriter\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2gif",
        "obj": "writeGifVisvis",
        "line": 597,
        "column": 23,
        "endLine": 597,
        "endColumn": 44,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "unnecessary-comprehension",
        "message": "Unnecessary use of a comprehension, use list(duration) instead.",
        "message-id": "R1721"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "writeGifVisvis",
        "line": 606,
        "column": 8,
        "endLine": 606,
        "endColumn": 22,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Variable name \"defaultDispose\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "writeGifVisvis",
        "line": 610,
        "column": 8,
        "endLine": 610,
        "endColumn": 22,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Variable name \"defaultDispose\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2gif",
        "obj": "writeGifVisvis",
        "line": 531,
        "column": 0,
        "endLine": 531,
        "endColumn": 18,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (15/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2gif",
        "obj": "writeGifVisvis",
        "line": 625,
        "column": 9,
        "endLine": 625,
        "endColumn": 29,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "readGif",
        "line": 632,
        "column": 0,
        "endLine": 632,
        "endColumn": 11,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Function name \"readGif\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "readGif",
        "line": 632,
        "column": 22,
        "endLine": 632,
        "endColumn": 29,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Argument name \"asNumpy\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2gif",
        "obj": "readGif",
        "line": 655,
        "column": 4,
        "endLine": 655,
        "endColumn": 10,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'images' from outer scope (line 1118)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2gif",
        "obj": "readGif",
        "line": 673,
        "column": 12,
        "endLine": 673,
        "endColumn": 14,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'im' from outer scope (line 1113)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "readGif",
        "line": 651,
        "column": 4,
        "endLine": 651,
        "endColumn": 9,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Variable name \"pilIm\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.setconstants",
        "line": 761,
        "column": 8,
        "endLine": 761,
        "endColumn": 20,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"NCYCLES\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.setconstants",
        "line": 762,
        "column": 8,
        "endLine": 762,
        "endColumn": 20,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"NETSIZE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.setconstants",
        "line": 763,
        "column": 8,
        "endLine": 763,
        "endColumn": 21,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"SPECIALS\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.setconstants",
        "line": 764,
        "column": 8,
        "endLine": 764,
        "endColumn": 20,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"BGCOLOR\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.setconstants",
        "line": 765,
        "column": 8,
        "endLine": 765,
        "endColumn": 23,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"CUTNETSIZE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.setconstants",
        "line": 766,
        "column": 8,
        "endLine": 766,
        "endColumn": 22,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"MAXNETPOS\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.setconstants",
        "line": 768,
        "column": 8,
        "endLine": 768,
        "endColumn": 20,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"INITRAD\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.setconstants",
        "line": 769,
        "column": 8,
        "endLine": 769,
        "endColumn": 28,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"RADIUSBIASSHIFT\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.setconstants",
        "line": 770,
        "column": 8,
        "endLine": 770,
        "endColumn": 23,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"RADIUSBIAS\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.setconstants",
        "line": 771,
        "column": 8,
        "endLine": 771,
        "endColumn": 27,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"INITBIASRADIUS\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.setconstants",
        "line": 772,
        "column": 8,
        "endLine": 772,
        "endColumn": 22,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"RADIUSDEC\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.setconstants",
        "line": 774,
        "column": 8,
        "endLine": 774,
        "endColumn": 27,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"ALPHABIASSHIFT\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.setconstants",
        "line": 775,
        "column": 8,
        "endLine": 775,
        "endColumn": 22,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"INITALPHA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.setconstants",
        "line": 777,
        "column": 8,
        "endLine": 777,
        "endColumn": 18,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"GAMMA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.setconstants",
        "line": 778,
        "column": 8,
        "endLine": 778,
        "endColumn": 17,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"BETA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.setconstants",
        "line": 779,
        "column": 8,
        "endLine": 779,
        "endColumn": 22,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"BETAGAMMA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant",
        "line": 680,
        "column": 0,
        "endLine": 680,
        "endColumn": 14,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (25/7)",
        "message-id": "R0902"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.setconstants",
        "line": 760,
        "column": 4,
        "endLine": 760,
        "endColumn": 20,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.writeColourMap",
        "line": 817,
        "column": 4,
        "endLine": 817,
        "endColumn": 22,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.writeColourMap",
        "line": 817,
        "column": 4,
        "endLine": 817,
        "endColumn": 22,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Method name \"writeColourMap\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.setUpArrays",
        "line": 827,
        "column": 4,
        "endLine": 827,
        "endColumn": 19,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.setUpArrays",
        "line": 827,
        "column": 4,
        "endLine": 827,
        "endColumn": 19,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Method name \"setUpArrays\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.altersingle",
        "line": 851,
        "column": 4,
        "endLine": 851,
        "endColumn": 19,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.geta",
        "line": 858,
        "column": 4,
        "endLine": 858,
        "endColumn": 12,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.alterneigh",
        "line": 870,
        "column": 4,
        "endLine": 870,
        "endColumn": 18,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.alterneigh",
        "line": 870,
        "column": 4,
        "endLine": 870,
        "endColumn": 18,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.specialFind",
        "line": 926,
        "column": 4,
        "endLine": 926,
        "endColumn": 19,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.specialFind",
        "line": 926,
        "column": 4,
        "endLine": 926,
        "endColumn": 19,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Method name \"specialFind\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.learn",
        "line": 933,
        "column": 4,
        "endLine": 933,
        "endColumn": 13,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.learn",
        "line": 933,
        "column": 4,
        "endLine": 933,
        "endColumn": 13,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (20/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.learn",
        "line": 934,
        "column": 8,
        "endLine": 934,
        "endColumn": 18,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Variable name \"biasRadius\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.learn",
        "line": 947,
        "column": 12,
        "endLine": 947,
        "endColumn": 67,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.learn",
        "line": 991,
        "column": 16,
        "endLine": 991,
        "endColumn": 26,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Variable name \"biasRadius\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.learn",
        "line": 996,
        "column": 8,
        "endLine": 996,
        "endColumn": 18,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Variable name \"finalAlpha\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.learn",
        "line": 997,
        "column": 14,
        "endLine": 997,
        "endColumn": 58,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.learn",
        "line": 933,
        "column": 4,
        "endLine": 933,
        "endColumn": 13,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (13/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.learn",
        "line": 933,
        "column": 4,
        "endLine": 933,
        "endColumn": 13,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (52/50)",
        "message-id": "R0915"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.fix",
        "line": 999,
        "column": 4,
        "endLine": 999,
        "endColumn": 11,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.inxbuild",
        "line": 1008,
        "column": 4,
        "endLine": 1008,
        "endColumn": 16,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.paletteImage",
        "line": 1039,
        "column": 4,
        "endLine": 1039,
        "endColumn": 20,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Method name \"paletteImage\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.quantize",
        "line": 1061,
        "column": 8,
        "endLine": 1065,
        "endColumn": 53,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.quantize_with_scipy",
        "line": 1067,
        "column": 4,
        "endLine": 1067,
        "endColumn": 27,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.quantize_with_scipy",
        "line": 1072,
        "column": 8,
        "endLine": 1072,
        "endColumn": 15,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "invalid-name",
        "message": "Variable name \"cKDTree\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.quantize_with_scipy",
        "line": 1076,
        "column": 14,
        "endLine": 1076,
        "endColumn": 31,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2gif",
        "obj": "NeuQuant.convert",
        "line": 1101,
        "column": 4,
        "endLine": 1101,
        "endColumn": 15,
        "path": "python/grass/imaging/images2gif.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2ims",
        "obj": "checkImages",
        "line": 46,
        "column": 0,
        "endLine": 46,
        "endColumn": 15,
        "path": "python/grass/imaging/images2ims.py",
        "symbol": "invalid-name",
        "message": "Function name \"checkImages\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2ims",
        "obj": "checkImages",
        "line": 65,
        "column": 16,
        "endLine": 65,
        "endColumn": 22,
        "path": "python/grass/imaging/images2ims.py",
        "symbol": "invalid-name",
        "message": "Variable name \"theMax\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2ims",
        "obj": "checkImages",
        "line": 66,
        "column": 19,
        "endLine": 66,
        "endColumn": 48,
        "path": "python/grass/imaging/images2ims.py",
        "symbol": "chained-comparison",
        "message": "Simplify chained comparison between the operands",
        "message-id": "R1716"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2ims",
        "obj": "checkImages",
        "line": 46,
        "column": 0,
        "endLine": 46,
        "endColumn": 15,
        "path": "python/grass/imaging/images2ims.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (13/12)",
        "message-id": "R0912"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2ims",
        "obj": "_getFilenameParts",
        "line": 92,
        "column": 0,
        "endLine": 92,
        "endColumn": 21,
        "path": "python/grass/imaging/images2ims.py",
        "symbol": "invalid-name",
        "message": "Function name \"_getFilenameParts\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2ims",
        "obj": "_getFilenameParts",
        "line": 93,
        "column": 4,
        "endLine": 96,
        "endColumn": 41,
        "path": "python/grass/imaging/images2ims.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2ims",
        "obj": "_getFilenameWithFormatter",
        "line": 99,
        "column": 0,
        "endLine": 99,
        "endColumn": 29,
        "path": "python/grass/imaging/images2ims.py",
        "symbol": "invalid-name",
        "message": "Function name \"_getFilenameWithFormatter\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2ims",
        "obj": "_getFilenameWithFormatter",
        "line": 99,
        "column": 40,
        "endLine": 99,
        "endColumn": 41,
        "path": "python/grass/imaging/images2ims.py",
        "symbol": "invalid-name",
        "message": "Argument name \"N\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2ims",
        "obj": "_getSequenceNumber",
        "line": 114,
        "column": 0,
        "endLine": 114,
        "endColumn": 22,
        "path": "python/grass/imaging/images2ims.py",
        "symbol": "invalid-name",
        "message": "Function name \"_getSequenceNumber\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2ims",
        "obj": "writeIms",
        "line": 128,
        "column": 0,
        "endLine": 128,
        "endColumn": 12,
        "path": "python/grass/imaging/images2ims.py",
        "symbol": "invalid-name",
        "message": "Function name \"writeIms\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2ims",
        "obj": "readIms",
        "line": 175,
        "column": 0,
        "endLine": 175,
        "endColumn": 11,
        "path": "python/grass/imaging/images2ims.py",
        "symbol": "invalid-name",
        "message": "Function name \"readIms\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2ims",
        "obj": "readIms",
        "line": 175,
        "column": 22,
        "endLine": 175,
        "endColumn": 29,
        "path": "python/grass/imaging/images2ims.py",
        "symbol": "invalid-name",
        "message": "Argument name \"asNumpy\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2swf",
        "obj": "",
        "line": 90,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "fixme",
        "message": "todo: use imageio/FreeImage to support reading JPEG images from SWF?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2swf",
        "obj": "",
        "line": 692,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "fixme",
        "message": "todo: nbits for fillStyle and lineStyle is hard coded.",
        "message-id": "W0511"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "",
        "line": 86,
        "column": 0,
        "endLine": 86,
        "endColumn": 9,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Class name \"text_type\" doesn't conform to PascalCase naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "",
        "line": 87,
        "column": 0,
        "endLine": 87,
        "endColumn": 11,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Class name \"binary_type\" doesn't conform to PascalCase naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "checkImages",
        "line": 93,
        "column": 0,
        "endLine": 93,
        "endColumn": 15,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Function name \"checkImages\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "checkImages",
        "line": 111,
        "column": 16,
        "endLine": 111,
        "endColumn": 22,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Variable name \"theMax\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2swf",
        "obj": "checkImages",
        "line": 112,
        "column": 19,
        "endLine": 112,
        "endColumn": 48,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "chained-comparison",
        "message": "Simplify chained comparison between the operands",
        "message-id": "R1716"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2swf",
        "obj": "checkImages",
        "line": 93,
        "column": 0,
        "endLine": 93,
        "endColumn": 15,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (13/12)",
        "message-id": "R0912"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "BitArray._checkSize",
        "line": 160,
        "column": 4,
        "endLine": 160,
        "endColumn": 18,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Method name \"_checkSize\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "BitArray.Append",
        "line": 172,
        "column": 4,
        "endLine": 172,
        "endColumn": 14,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "BitArray.Append",
        "line": 172,
        "column": 4,
        "endLine": 172,
        "endColumn": 14,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Method name \"Append\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "BitArray.Reverse",
        "line": 187,
        "column": 4,
        "endLine": 187,
        "endColumn": 15,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Method name \"Reverse\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "BitArray.ToBytes",
        "line": 192,
        "column": 4,
        "endLine": 192,
        "endColumn": 15,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Method name \"ToBytes\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "intToUint32",
        "line": 215,
        "column": 0,
        "endLine": 215,
        "endColumn": 15,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "intToUint32",
        "line": 215,
        "column": 0,
        "endLine": 215,
        "endColumn": 15,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Function name \"intToUint32\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "intToUint16",
        "line": 219,
        "column": 0,
        "endLine": 219,
        "endColumn": 15,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "intToUint16",
        "line": 219,
        "column": 0,
        "endLine": 219,
        "endColumn": 15,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Function name \"intToUint16\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "intToUint8",
        "line": 223,
        "column": 0,
        "endLine": 223,
        "endColumn": 14,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "intToUint8",
        "line": 223,
        "column": 0,
        "endLine": 223,
        "endColumn": 14,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Function name \"intToUint8\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "intToBits",
        "line": 227,
        "column": 0,
        "endLine": 227,
        "endColumn": 13,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Function name \"intToBits\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "bitsToInt",
        "line": 249,
        "column": 0,
        "endLine": 249,
        "endColumn": 13,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "bitsToInt",
        "line": 249,
        "column": 0,
        "endLine": 249,
        "endColumn": 13,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Function name \"bitsToInt\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "getTypeAndLen",
        "line": 264,
        "column": 0,
        "endLine": 264,
        "endColumn": 17,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Function name \"getTypeAndLen\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2swf",
        "obj": "getTypeAndLen",
        "line": 279,
        "column": 4,
        "endLine": 279,
        "endColumn": 8,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "getTypeAndLen",
        "line": 280,
        "column": 4,
        "endLine": 280,
        "endColumn": 5,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Variable name \"L\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "getTypeAndLen",
        "line": 281,
        "column": 4,
        "endLine": 281,
        "endColumn": 6,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Variable name \"L2\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "getTypeAndLen",
        "line": 291,
        "column": 8,
        "endLine": 291,
        "endColumn": 9,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Variable name \"L\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "getTypeAndLen",
        "line": 292,
        "column": 8,
        "endLine": 292,
        "endColumn": 10,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Variable name \"L2\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "signedIntToBits",
        "line": 298,
        "column": 0,
        "endLine": 298,
        "endColumn": 19,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Function name \"signedIntToBits\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "twitsToBits",
        "line": 332,
        "column": 0,
        "endLine": 332,
        "endColumn": 15,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Function name \"twitsToBits\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2swf",
        "obj": "twitsToBits",
        "line": 344,
        "column": 8,
        "endLine": 345,
        "endColumn": 24,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "consider-using-max-builtin",
        "message": "Consider using 'maxlen = max(maxlen, tmp)' instead of unnecessary if block",
        "message-id": "R1731"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "floatsToBits",
        "line": 355,
        "column": 0,
        "endLine": 355,
        "endColumn": 16,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Function name \"floatsToBits\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "_readFrom",
        "line": 372,
        "column": 0,
        "endLine": 372,
        "endColumn": 13,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Function name \"_readFrom\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "Tag",
        "line": 388,
        "column": 0,
        "endLine": 388,
        "endColumn": 9,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "Tag.ProcessTag",
        "line": 393,
        "column": 4,
        "endLine": 393,
        "endColumn": 18,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Method name \"ProcessTag\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "Tag.GetTag",
        "line": 397,
        "column": 4,
        "endLine": 397,
        "endColumn": 14,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Method name \"GetTag\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "Tag.MakeRectRecord",
        "line": 416,
        "column": 4,
        "endLine": 416,
        "endColumn": 22,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Method name \"MakeRectRecord\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "Tag.MakeMatrixRecord",
        "line": 421,
        "column": 4,
        "endLine": 421,
        "endColumn": 24,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "Tag.MakeMatrixRecord",
        "line": 421,
        "column": 4,
        "endLine": 421,
        "endColumn": 24,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Method name \"MakeMatrixRecord\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "ControlTag",
        "line": 456,
        "column": 0,
        "endLine": 456,
        "endColumn": 16,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2swf",
        "obj": "ControlTag",
        "line": 456,
        "column": 0,
        "endLine": 456,
        "endColumn": 16,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "abstract-method",
        "message": "Method 'ProcessTag' is abstract in class 'Tag' but is not overridden in child class 'ControlTag'",
        "message-id": "W0223"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "FileAttributesTag",
        "line": 461,
        "column": 0,
        "endLine": 461,
        "endColumn": 23,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "ShowFrameTag",
        "line": 470,
        "column": 0,
        "endLine": 470,
        "endColumn": 18,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2swf",
        "obj": "SetBackgroundTag.__init__",
        "line": 482,
        "column": 4,
        "endLine": 482,
        "endColumn": 16,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "super-init-not-called",
        "message": "__init__ method from base class 'ControlTag' is not called",
        "message-id": "W0231"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "DoActionTag",
        "line": 498,
        "column": 0,
        "endLine": 498,
        "endColumn": 17,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "DoActionTag.Append",
        "line": 504,
        "column": 4,
        "endLine": 504,
        "endColumn": 14,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "DoActionTag.Append",
        "line": 504,
        "column": 4,
        "endLine": 504,
        "endColumn": 14,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Method name \"Append\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "DoActionTag.ProcessTag",
        "line": 517,
        "column": 22,
        "endLine": 517,
        "endColumn": 51,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "DefinitionTag",
        "line": 526,
        "column": 0,
        "endLine": 526,
        "endColumn": 19,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2swf",
        "obj": "DefinitionTag",
        "line": 526,
        "column": 0,
        "endLine": 526,
        "endColumn": 19,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "abstract-method",
        "message": "Method 'ProcessTag' is abstract in class 'Tag' but is not overridden in child class 'DefinitionTag'",
        "message-id": "W0223"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "BitmapTag",
        "line": 535,
        "column": 0,
        "endLine": 535,
        "endColumn": 15,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "PlaceObjectTag",
        "line": 580,
        "column": 0,
        "endLine": 580,
        "endColumn": 20,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "PlaceObjectTag.__init__",
        "line": 585,
        "column": 8,
        "endLine": 585,
        "endColumn": 22,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"idToPlace\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2swf",
        "obj": "PlaceObjectTag.ProcessTag",
        "line": 593,
        "column": 8,
        "endLine": 593,
        "endColumn": 10,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'id'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "ShapeTag",
        "line": 607,
        "column": 0,
        "endLine": 607,
        "endColumn": 14,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "ShapeTag.__init__",
        "line": 611,
        "column": 8,
        "endLine": 611,
        "endColumn": 21,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"bitmapId\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "ShapeTag.MakeStyleChangeRecord",
        "line": 669,
        "column": 4,
        "endLine": 669,
        "endColumn": 29,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "ShapeTag.MakeStyleChangeRecord",
        "line": 669,
        "column": 4,
        "endLine": 669,
        "endColumn": 29,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Method name \"MakeStyleChangeRecord\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "ShapeTag.MakeStyleChangeRecord",
        "line": 669,
        "column": 36,
        "endLine": 669,
        "endColumn": 45,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Argument name \"lineStyle\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "ShapeTag.MakeStyleChangeRecord",
        "line": 669,
        "column": 52,
        "endLine": 669,
        "endColumn": 61,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Argument name \"fillStyle\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "ShapeTag.MakeStyleChangeRecord",
        "line": 669,
        "column": 68,
        "endLine": 669,
        "endColumn": 74,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Argument name \"moveTo\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "ShapeTag.MakeStraightEdgeRecord",
        "line": 704,
        "column": 4,
        "endLine": 704,
        "endColumn": 30,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "ShapeTag.MakeStraightEdgeRecord",
        "line": 704,
        "column": 4,
        "endLine": 704,
        "endColumn": 30,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Method name \"MakeStraightEdgeRecord\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "ShapeTag.MakeEndShapeRecord",
        "line": 725,
        "column": 4,
        "endLine": 725,
        "endColumn": 26,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "ShapeTag.MakeEndShapeRecord",
        "line": 725,
        "column": 4,
        "endLine": 725,
        "endColumn": 26,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Method name \"MakeEndShapeRecord\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "buildFile",
        "line": 736,
        "column": 0,
        "endLine": 736,
        "endColumn": 13,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Function name \"buildFile\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2swf",
        "obj": "buildFile",
        "line": 736,
        "column": 0,
        "endLine": 736,
        "endColumn": 13,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "writeSwf",
        "line": 763,
        "column": 0,
        "endLine": 763,
        "endColumn": 12,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Function name \"writeSwf\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2swf",
        "obj": "writeSwf",
        "line": 763,
        "column": 0,
        "endLine": 763,
        "endColumn": 12,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (17/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2swf",
        "obj": "writeSwf",
        "line": 799,
        "column": 23,
        "endLine": 799,
        "endColumn": 44,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "unnecessary-comprehension",
        "message": "Unnecessary use of a comprehension, use list(duration) instead.",
        "message-id": "R1721"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "writeSwf",
        "line": 806,
        "column": 4,
        "endLine": 806,
        "endColumn": 15,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Variable name \"minDuration\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2swf",
        "obj": "writeSwf",
        "line": 832,
        "column": 4,
        "endLine": 833,
        "endColumn": 13,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "try-except-raise",
        "message": "The except handler raises immediately",
        "message-id": "W0706"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2swf",
        "obj": "writeSwf",
        "line": 763,
        "column": 0,
        "endLine": 763,
        "endColumn": 12,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (15/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2swf",
        "obj": "writeSwf",
        "line": 829,
        "column": 9,
        "endLine": 829,
        "endColumn": 29,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2swf",
        "obj": "writeSwf",
        "line": 821,
        "column": 12,
        "endLine": 821,
        "endColumn": 13,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'i'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "_readPixels",
        "line": 838,
        "column": 0,
        "endLine": 838,
        "endColumn": 15,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Function name \"_readPixels\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "_readPixels",
        "line": 838,
        "column": 23,
        "endLine": 838,
        "endColumn": 30,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Argument name \"tagType\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "_readPixels",
        "line": 838,
        "column": 32,
        "endLine": 838,
        "endColumn": 34,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Argument name \"L1\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2swf",
        "obj": "_readPixels",
        "line": 848,
        "column": 4,
        "endLine": 848,
        "endColumn": 10,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'format'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.imaging.images2swf",
        "obj": "_readPixels",
        "line": 872,
        "column": 19,
        "endLine": 872,
        "endColumn": 28,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2swf",
        "obj": "_readPixels",
        "line": 838,
        "column": 0,
        "endLine": 838,
        "endColumn": 15,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "readSwf",
        "line": 889,
        "column": 0,
        "endLine": 889,
        "endColumn": 11,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Function name \"readSwf\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "readSwf",
        "line": 889,
        "column": 22,
        "endLine": 889,
        "endColumn": 29,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Argument name \"asNumpy\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2swf",
        "obj": "readSwf",
        "line": 889,
        "column": 0,
        "endLine": 889,
        "endColumn": 11,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "readSwf",
        "line": 931,
        "column": 8,
        "endLine": 931,
        "endColumn": 13,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Variable name \"Lrect\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "readSwf",
        "line": 933,
        "column": 12,
        "endLine": 933,
        "endColumn": 17,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Variable name \"Lrect\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "readSwf",
        "line": 934,
        "column": 8,
        "endLine": 934,
        "endColumn": 13,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Variable name \"Lrect\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "readSwf",
        "line": 948,
        "column": 12,
        "endLine": 948,
        "endColumn": 13,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Variable name \"T\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "readSwf",
        "line": 948,
        "column": 15,
        "endLine": 948,
        "endColumn": 17,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Variable name \"L1\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.imaging.images2swf",
        "obj": "readSwf",
        "line": 948,
        "column": 19,
        "endLine": 948,
        "endColumn": 21,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "invalid-name",
        "message": "Variable name \"L2\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2swf",
        "obj": "readSwf",
        "line": 889,
        "column": 0,
        "endLine": 889,
        "endColumn": 11,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (18/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2swf",
        "obj": "readSwf",
        "line": 889,
        "column": 0,
        "endLine": 889,
        "endColumn": 11,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (51/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.images2swf",
        "obj": "readSwf",
        "line": 913,
        "column": 9,
        "endLine": 913,
        "endColumn": 29,
        "path": "python/grass/imaging/images2swf.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.imaging.operations",
        "obj": "",
        "line": 129,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/imaging/operations.py",
        "symbol": "unknown-option-value",
        "message": "Unknown option value for 'disable', expected a valid pylint message and got 'redefined-variable-type'",
        "message-id": "W0012"
    },
    {
        "type": "refactor",
        "module": "grass.imaging.operations",
        "obj": "",
        "line": 62,
        "column": 8,
        "endLine": 62,
        "endColumn": 39,
        "path": "python/grass/imaging/operations.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from PIL import ImageOps' instead",
        "message-id": "R0402"
    },
    {
        "type": "warning",
        "module": "grass.imaging.operations",
        "obj": "crop_image",
        "line": 69,
        "column": 45,
        "endLine": 69,
        "endColumn": 51,
        "path": "python/grass/imaging/operations.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'format'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.imaging.operations",
        "obj": "crop_image",
        "line": 77,
        "column": 27,
        "endLine": 77,
        "endColumn": 28,
        "path": "python/grass/imaging/operations.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.imaging.operations",
        "obj": "thumbnail_image",
        "line": 86,
        "column": 67,
        "endLine": 86,
        "endColumn": 73,
        "path": "python/grass/imaging/operations.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'format'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.imaging.operations",
        "obj": "thumbnail_image",
        "line": 98,
        "column": 27,
        "endLine": 98,
        "endColumn": 28,
        "path": "python/grass/imaging/operations.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.imaging.operations",
        "obj": "change_rbg_to_transparent",
        "line": 107,
        "column": 58,
        "endLine": 107,
        "endColumn": 64,
        "path": "python/grass/imaging/operations.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'format'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.imaging.operations",
        "obj": "change_rbg_to_transparent",
        "line": 123,
        "column": 27,
        "endLine": 123,
        "endColumn": 28,
        "path": "python/grass/imaging/operations.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.imaging.operations",
        "obj": "invert_image_colors",
        "line": 145,
        "column": 54,
        "endLine": 145,
        "endColumn": 60,
        "path": "python/grass/imaging/operations.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'format'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.imaging.operations",
        "obj": "invert_image_colors",
        "line": 155,
        "column": 27,
        "endLine": 155,
        "endColumn": 28,
        "path": "python/grass/imaging/operations.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.imaging.operations",
        "obj": "invert_image_colors",
        "line": 158,
        "column": 12,
        "endLine": 158,
        "endColumn": 13,
        "path": "python/grass/imaging/operations.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.jupyter.baseseriesmap",
        "obj": "BaseSeriesMap",
        "line": 13,
        "column": 0,
        "endLine": 13,
        "endColumn": 19,
        "path": "python/grass/jupyter/baseseriesmap.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (14/7)",
        "message-id": "R0902"
    },
    {
        "type": "error",
        "module": "grass.jupyter.baseseriesmap",
        "obj": "BaseSeriesMap.__getattr__",
        "line": 64,
        "column": 33,
        "endLine": 64,
        "endColumn": 65,
        "path": "python/grass/jupyter/baseseriesmap.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.jupyter.baseseriesmap",
        "obj": "BaseSeriesMap.__getattr__",
        "line": 64,
        "column": 33,
        "endLine": 64,
        "endColumn": 34,
        "path": "python/grass/jupyter/baseseriesmap.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.jupyter.baseseriesmap",
        "obj": "BaseSeriesMap.__getattr__",
        "line": 69,
        "column": 33,
        "endLine": 69,
        "endColumn": 65,
        "path": "python/grass/jupyter/baseseriesmap.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.jupyter.baseseriesmap",
        "obj": "BaseSeriesMap.__getattr__",
        "line": 69,
        "column": 33,
        "endLine": 69,
        "endColumn": 34,
        "path": "python/grass/jupyter/baseseriesmap.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.jupyter.baseseriesmap",
        "obj": "BaseSeriesMap.show",
        "line": 137,
        "column": 8,
        "endLine": 137,
        "endColumn": 36,
        "path": "python/grass/jupyter/baseseriesmap.py",
        "symbol": "import-error",
        "message": "Unable to import 'ipywidgets'",
        "message-id": "E0401"
    },
    {
        "type": "refactor",
        "module": "grass.jupyter.interactivemap",
        "obj": "Layer.__init__",
        "line": 40,
        "column": 4,
        "endLine": 40,
        "endColumn": 16,
        "path": "python/grass/jupyter/interactivemap.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.jupyter.interactivemap",
        "obj": "Raster.__init__",
        "line": 85,
        "column": 4,
        "endLine": 85,
        "endColumn": 16,
        "path": "python/grass/jupyter/interactivemap.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "error",
        "module": "grass.jupyter.interactivemap",
        "obj": "Raster.add_to",
        "line": 106,
        "column": 12,
        "endLine": 106,
        "endColumn": 25,
        "path": "python/grass/jupyter/interactivemap.py",
        "symbol": "import-error",
        "message": "Unable to import 'folium'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.jupyter.interactivemap",
        "obj": "Raster.add_to",
        "line": 117,
        "column": 12,
        "endLine": 117,
        "endColumn": 29,
        "path": "python/grass/jupyter/interactivemap.py",
        "symbol": "import-error",
        "message": "Unable to import 'ipyleaflet'",
        "message-id": "E0401"
    },
    {
        "type": "refactor",
        "module": "grass.jupyter.interactivemap",
        "obj": "Raster",
        "line": 72,
        "column": 0,
        "endLine": 72,
        "endColumn": 12,
        "path": "python/grass/jupyter/interactivemap.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "grass.jupyter.interactivemap",
        "obj": "Vector.__init__",
        "line": 144,
        "column": 4,
        "endLine": 144,
        "endColumn": 16,
        "path": "python/grass/jupyter/interactivemap.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "error",
        "module": "grass.jupyter.interactivemap",
        "obj": "Vector.add_to",
        "line": 160,
        "column": 12,
        "endLine": 160,
        "endColumn": 25,
        "path": "python/grass/jupyter/interactivemap.py",
        "symbol": "import-error",
        "message": "Unable to import 'folium'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.jupyter.interactivemap",
        "obj": "Vector.add_to",
        "line": 166,
        "column": 12,
        "endLine": 166,
        "endColumn": 29,
        "path": "python/grass/jupyter/interactivemap.py",
        "symbol": "import-error",
        "message": "Unable to import 'ipyleaflet'",
        "message-id": "E0401"
    },
    {
        "type": "refactor",
        "module": "grass.jupyter.interactivemap",
        "obj": "Vector",
        "line": 131,
        "column": 0,
        "endLine": 131,
        "endColumn": 12,
        "path": "python/grass/jupyter/interactivemap.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "grass.jupyter.interactivemap",
        "obj": "InteractiveMap.__init__",
        "line": 195,
        "column": 4,
        "endLine": 195,
        "endColumn": 16,
        "path": "python/grass/jupyter/interactivemap.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "error",
        "module": "grass.jupyter.interactivemap",
        "obj": "InteractiveMap.__init__",
        "line": 268,
        "column": 34,
        "endLine": 268,
        "endColumn": 35,
        "path": "python/grass/jupyter/interactivemap.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.jupyter.interactivemap",
        "obj": "InteractiveMap.__init__",
        "line": 275,
        "column": 29,
        "endLine": 275,
        "endColumn": 30,
        "path": "python/grass/jupyter/interactivemap.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.jupyter.interactivemap",
        "obj": "InteractiveMap.__init__",
        "line": 278,
        "column": 12,
        "endLine": 278,
        "endColumn": 40,
        "path": "python/grass/jupyter/interactivemap.py",
        "symbol": "import-error",
        "message": "Unable to import 'ipywidgets'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.jupyter.interactivemap",
        "obj": "InteractiveMap.__init__",
        "line": 279,
        "column": 12,
        "endLine": 279,
        "endColumn": 30,
        "path": "python/grass/jupyter/interactivemap.py",
        "symbol": "import-error",
        "message": "Unable to import 'xyzservices'",
        "message-id": "E0401"
    },
    {
        "type": "refactor",
        "module": "grass.jupyter.map",
        "obj": "Map.__init__",
        "line": 51,
        "column": 4,
        "endLine": 51,
        "endColumn": 16,
        "path": "python/grass/jupyter/map.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (11/5)",
        "message-id": "R0913"
    },
    {
        "type": "error",
        "module": "grass.jupyter.map",
        "obj": "Map.__getattr__",
        "line": 175,
        "column": 33,
        "endLine": 175,
        "endColumn": 34,
        "path": "python/grass/jupyter/map.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.jupyter.map",
        "obj": "Map.__getattr__",
        "line": 180,
        "column": 33,
        "endLine": 180,
        "endColumn": 34,
        "path": "python/grass/jupyter/map.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.jupyter.map3d",
        "obj": "Map3D",
        "line": 26,
        "column": 0,
        "endLine": 26,
        "endColumn": 11,
        "path": "python/grass/jupyter/map3d.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (9/7)",
        "message-id": "R0902"
    },
    {
        "type": "refactor",
        "module": "grass.jupyter.map3d",
        "obj": "Map3D.__init__",
        "line": 47,
        "column": 4,
        "endLine": 47,
        "endColumn": 16,
        "path": "python/grass/jupyter/map3d.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (12/5)",
        "message-id": "R0913"
    },
    {
        "type": "error",
        "module": "grass.jupyter.map3d",
        "obj": "Map3D.__init__",
        "line": 130,
        "column": 16,
        "endLine": 130,
        "endColumn": 17,
        "path": "python/grass/jupyter/map3d.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.jupyter.map3d",
        "obj": "Map3D.__init__",
        "line": 139,
        "column": 16,
        "endLine": 139,
        "endColumn": 17,
        "path": "python/grass/jupyter/map3d.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.jupyter.map3d",
        "obj": "Map3D.render",
        "line": 226,
        "column": 8,
        "endLine": 226,
        "endColumn": 29,
        "path": "python/grass/jupyter/map3d.py",
        "symbol": "import-error",
        "message": "Unable to import 'PIL'",
        "message-id": "E0401"
    },
    {
        "type": "refactor",
        "module": "grass.jupyter.region",
        "obj": "RegionManagerFor2D",
        "line": 127,
        "column": 0,
        "endLine": 127,
        "endColumn": 24,
        "path": "python/grass/jupyter/region.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (8/7)",
        "message-id": "R0902"
    },
    {
        "type": "refactor",
        "module": "grass.jupyter.region",
        "obj": "RegionManagerFor2D.__init__",
        "line": 130,
        "column": 4,
        "endLine": 130,
        "endColumn": 16,
        "path": "python/grass/jupyter/region.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.jupyter.region",
        "obj": "RegionManagerForSeries.__init__",
        "line": 221,
        "column": 4,
        "endLine": 221,
        "endColumn": 16,
        "path": "python/grass/jupyter/region.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.jupyter.region",
        "obj": "RegionManagerFor3D",
        "line": 290,
        "column": 0,
        "endLine": 290,
        "endColumn": 24,
        "path": "python/grass/jupyter/region.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "grass.jupyter.region",
        "obj": "RegionManagerForTimeSeries",
        "line": 328,
        "column": 0,
        "endLine": 328,
        "endColumn": 32,
        "path": "python/grass/jupyter/region.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "grass.jupyter.seriesmap",
        "obj": "SeriesMap.__init__",
        "line": 46,
        "column": 4,
        "endLine": 46,
        "endColumn": 16,
        "path": "python/grass/jupyter/seriesmap.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "error",
        "module": "grass.jupyter.seriesmap",
        "obj": "SeriesMap.add_rasters",
        "line": 81,
        "column": 32,
        "endLine": 81,
        "endColumn": 33,
        "path": "python/grass/jupyter/seriesmap.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.jupyter.seriesmap",
        "obj": "SeriesMap.add_rasters",
        "line": 85,
        "column": 52,
        "endLine": 85,
        "endColumn": 53,
        "path": "python/grass/jupyter/seriesmap.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.jupyter.seriesmap",
        "obj": "SeriesMap.add_vectors",
        "line": 108,
        "column": 32,
        "endLine": 108,
        "endColumn": 33,
        "path": "python/grass/jupyter/seriesmap.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.jupyter.seriesmap",
        "obj": "SeriesMap.add_vectors",
        "line": 112,
        "column": 52,
        "endLine": 112,
        "endColumn": 53,
        "path": "python/grass/jupyter/seriesmap.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.jupyter.seriesmap",
        "obj": "SeriesMap.add_names",
        "line": 132,
        "column": 46,
        "endLine": 132,
        "endColumn": 47,
        "path": "python/grass/jupyter/seriesmap.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.jupyter.seriesmap",
        "obj": "SeriesMap.save",
        "line": 172,
        "column": 4,
        "endLine": 172,
        "endColumn": 12,
        "path": "python/grass/jupyter/seriesmap.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.jupyter.setup",
        "obj": "",
        "line": 75,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/jupyter/setup.py",
        "symbol": "useless-option-value",
        "message": "Useless option value for 'disable', 'no-self-use' was moved to an optional extension, see https://pylint.readthedocs.io/en/latest/whatsnew/2/2.14/summary.html#removed-checkers.",
        "message-id": "R0022"
    },
    {
        "type": "error",
        "module": "grass.jupyter.setup",
        "obj": "_JupyterGlobalSession.switch_mapset",
        "line": 102,
        "column": 16,
        "endLine": 102,
        "endColumn": 57,
        "path": "python/grass/jupyter/setup.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.jupyter.setup",
        "obj": "_JupyterGlobalSession.switch_mapset",
        "line": 102,
        "column": 16,
        "endLine": 102,
        "endColumn": 17,
        "path": "python/grass/jupyter/setup.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.jupyter.timeseriesmap",
        "obj": "collect_layers",
        "line": 81,
        "column": 12,
        "endLine": 81,
        "endColumn": 13,
        "path": "python/grass/jupyter/timeseriesmap.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.jupyter.timeseriesmap",
        "obj": "collect_layers",
        "line": 102,
        "column": 18,
        "endLine": 102,
        "endColumn": 23,
        "path": "python/grass/jupyter/timeseriesmap.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'dates' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "error",
        "module": "grass.jupyter.timeseriesmap",
        "obj": "check_timeseries_exists",
        "line": 110,
        "column": 12,
        "endLine": 110,
        "endColumn": 13,
        "path": "python/grass/jupyter/timeseriesmap.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.jupyter.timeseriesmap",
        "obj": "TimeSeriesMap.__init__",
        "line": 135,
        "column": 4,
        "endLine": 135,
        "endColumn": 16,
        "path": "python/grass/jupyter/timeseriesmap.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "error",
        "module": "grass.jupyter.timeseriesmap",
        "obj": "TimeSeriesMap.__init__",
        "line": 160,
        "column": 35,
        "endLine": 160,
        "endColumn": 36,
        "path": "python/grass/jupyter/timeseriesmap.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.jupyter.timeseriesmap",
        "obj": "TimeSeriesMap.save",
        "line": 327,
        "column": 4,
        "endLine": 327,
        "endColumn": 12,
        "path": "python/grass/jupyter/timeseriesmap.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "error",
        "module": "grass.jupyter.utils",
        "obj": "reproject_region",
        "line": 73,
        "column": 12,
        "endLine": 73,
        "endColumn": 59,
        "path": "python/grass/jupyter/utils.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.jupyter.utils",
        "obj": "reproject_region",
        "line": 73,
        "column": 12,
        "endLine": 73,
        "endColumn": 13,
        "path": "python/grass/jupyter/utils.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.jupyter.utils",
        "obj": "reproject_region",
        "line": 80,
        "column": 29,
        "endLine": 80,
        "endColumn": 35,
        "path": "python/grass/jupyter/utils.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'unused'",
        "message-id": "W0612"
    },
    {
        "type": "refactor",
        "module": "grass.jupyter.utils",
        "obj": "save_gif",
        "line": 205,
        "column": 0,
        "endLine": 205,
        "endColumn": 12,
        "path": "python/grass/jupyter/utils.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.jupyter.utils",
        "obj": "save_gif",
        "line": 205,
        "column": 0,
        "endLine": 205,
        "endColumn": 12,
        "path": "python/grass/jupyter/utils.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "error",
        "module": "grass.jupyter.utils",
        "obj": "save_gif",
        "line": 228,
        "column": 4,
        "endLine": 228,
        "endColumn": 20,
        "path": "python/grass/jupyter/utils.py",
        "symbol": "import-error",
        "message": "Unable to import 'PIL.Image'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.jupyter.utils",
        "obj": "save_gif",
        "line": 229,
        "column": 4,
        "endLine": 229,
        "endColumn": 24,
        "path": "python/grass/jupyter/utils.py",
        "symbol": "import-error",
        "message": "Unable to import 'PIL.ImageDraw'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.jupyter.utils",
        "obj": "save_gif",
        "line": 230,
        "column": 4,
        "endLine": 230,
        "endColumn": 24,
        "path": "python/grass/jupyter/utils.py",
        "symbol": "import-error",
        "message": "Unable to import 'PIL.ImageFont'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.jupyter.utils",
        "obj": "save_gif",
        "line": 235,
        "column": 25,
        "endLine": 235,
        "endColumn": 57,
        "path": "python/grass/jupyter/utils.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.jupyter.utils",
        "obj": "save_gif",
        "line": 235,
        "column": 25,
        "endLine": 235,
        "endColumn": 26,
        "path": "python/grass/jupyter/utils.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_Parameter",
        "line": 37,
        "column": 0,
        "endLine": 37,
        "endColumn": 16,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_Any",
        "line": 44,
        "column": 0,
        "endLine": 44,
        "endColumn": 10,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_Anonymous",
        "line": 57,
        "column": 0,
        "endLine": 57,
        "endColumn": 16,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.dispatcher",
        "obj": "connect",
        "line": 140,
        "column": 12,
        "endLine": 140,
        "endColumn": 59,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.dispatcher",
        "obj": "connect.remove",
        "line": 153,
        "column": 19,
        "endLine": 153,
        "endColumn": 25,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'object'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.dispatcher",
        "obj": "connect.remove",
        "line": 153,
        "column": 19,
        "endLine": 153,
        "endColumn": 25,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'object'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.dispatcher",
        "obj": "connect",
        "line": 161,
        "column": 15,
        "endLine": 161,
        "endColumn": 24,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.dispatcher",
        "obj": "connect",
        "line": 159,
        "column": 12,
        "endLine": 159,
        "endColumn": 22,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "invalid-name",
        "message": "Variable name \"weakSender\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.dispatcher",
        "obj": "connect",
        "line": 164,
        "column": 4,
        "endLine": 164,
        "endColumn": 14,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "invalid-name",
        "message": "Variable name \"receiverID\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.dispatcher",
        "obj": "connect",
        "line": 178,
        "column": 11,
        "endLine": 178,
        "endColumn": 20,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.dispatcher",
        "obj": "disconnect",
        "line": 212,
        "column": 12,
        "endLine": 212,
        "endColumn": 59,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.dispatcher",
        "obj": "disconnect",
        "line": 221,
        "column": 8,
        "endLine": 223,
        "endColumn": 9,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'except KeyError as exc' and 'raise errors.DispatcherKeyError('No receivers found for signal %r from sender %r' % (signal, sender)) from exc'",
        "message-id": "W0707"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.dispatcher",
        "obj": "disconnect",
        "line": 222,
        "column": 12,
        "endLine": 222,
        "endColumn": 65,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.dispatcher",
        "obj": "disconnect",
        "line": 228,
        "column": 8,
        "endLine": 231,
        "endColumn": 9,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'except ValueError as exc' and 'raise errors.DispatcherKeyError('No connection to receiver %s for signal %s from sender %s' % (receiver, signal, sender)) from exc'",
        "message-id": "W0707"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.dispatcher",
        "obj": "disconnect",
        "line": 229,
        "column": 12,
        "endLine": 229,
        "endColumn": 75,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.dispatcher",
        "obj": "getReceivers",
        "line": 235,
        "column": 0,
        "endLine": 235,
        "endColumn": 16,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "invalid-name",
        "message": "Function name \"getReceivers\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.dispatcher",
        "obj": "liveReceivers",
        "line": 259,
        "column": 0,
        "endLine": 259,
        "endColumn": 17,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "invalid-name",
        "message": "Function name \"liveReceivers\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.dispatcher",
        "obj": "getAllReceivers",
        "line": 277,
        "column": 0,
        "endLine": 277,
        "endColumn": 19,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "invalid-name",
        "message": "Function name \"getAllReceivers\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.dispatcher",
        "obj": "getAllReceivers",
        "line": 285,
        "column": 8,
        "endLine": 285,
        "endColumn": 11,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'set'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.dispatcher",
        "obj": "send",
        "line": 306,
        "column": 0,
        "endLine": 306,
        "endColumn": 8,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "keyword-arg-before-vararg",
        "message": "Keyword argument before variable positional arguments list in the definition of send function",
        "message-id": "W1113"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.dispatcher",
        "obj": "sendExact",
        "line": 351,
        "column": 0,
        "endLine": 351,
        "endColumn": 13,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "invalid-name",
        "message": "Function name \"sendExact\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.dispatcher",
        "obj": "sendExact",
        "line": 351,
        "column": 0,
        "endLine": 351,
        "endColumn": 13,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "keyword-arg-before-vararg",
        "message": "Keyword argument before variable positional arguments list in the definition of sendExact function",
        "message-id": "W1113"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_removeReceiver",
        "line": 368,
        "column": 0,
        "endLine": 368,
        "endColumn": 19,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "invalid-name",
        "message": "Function name \"_removeReceiver\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_removeReceiver",
        "line": 375,
        "column": 4,
        "endLine": 375,
        "endColumn": 11,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "invalid-name",
        "message": "Variable name \"backKey\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_removeReceiver",
        "line": 376,
        "column": 4,
        "endLine": 397,
        "endColumn": 58,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_removeReceiver",
        "line": 377,
        "column": 8,
        "endLine": 377,
        "endColumn": 15,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "invalid-name",
        "message": "Variable name \"backSet\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_removeReceiver",
        "line": 395,
        "column": 31,
        "endLine": 395,
        "endColumn": 40,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "refactor",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_removeReceiver",
        "line": 376,
        "column": 4,
        "endLine": 397,
        "endColumn": 58,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_removeReceiver",
        "line": 368,
        "column": 0,
        "endLine": 368,
        "endColumn": 19,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_cleanupConnections",
        "line": 400,
        "column": 0,
        "endLine": 400,
        "endColumn": 23,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "invalid-name",
        "message": "Function name \"_cleanupConnections\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_cleanupConnections",
        "line": 404,
        "column": 11,
        "endLine": 404,
        "endColumn": 20,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_removeSender",
        "line": 420,
        "column": 0,
        "endLine": 420,
        "endColumn": 17,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "invalid-name",
        "message": "Function name \"_removeSender\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_removeSender",
        "line": 431,
        "column": 11,
        "endLine": 431,
        "endColumn": 20,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_removeBackrefs",
        "line": 435,
        "column": 0,
        "endLine": 435,
        "endColumn": 19,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "invalid-name",
        "message": "Function name \"_removeBackrefs\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_removeBackrefs.allReceivers",
        "line": 444,
        "column": 8,
        "endLine": 444,
        "endColumn": 24,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "invalid-name",
        "message": "Function name \"allReceivers\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_removeBackrefs.allReceivers",
        "line": 445,
        "column": 24,
        "endLine": 445,
        "endColumn": 27,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'set'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_removeBackrefs.allReceivers",
        "line": 445,
        "column": 16,
        "endLine": 445,
        "endColumn": 22,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'signal'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_removeOldBackRefs",
        "line": 452,
        "column": 0,
        "endLine": 452,
        "endColumn": 22,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "invalid-name",
        "message": "Function name \"_removeOldBackRefs\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_removeOldBackRefs",
        "line": 461,
        "column": 4,
        "endLine": 481,
        "endColumn": 20,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_removeOldBackRefs",
        "line": 467,
        "column": 8,
        "endLine": 467,
        "endColumn": 19,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "invalid-name",
        "message": "Variable name \"oldReceiver\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_removeOldBackRefs",
        "line": 461,
        "column": 4,
        "endLine": 481,
        "endColumn": 20,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_killBackref",
        "line": 484,
        "column": 0,
        "endLine": 484,
        "endColumn": 16,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "invalid-name",
        "message": "Function name \"_killBackref\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_killBackref",
        "line": 487,
        "column": 4,
        "endLine": 487,
        "endColumn": 7,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'set'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.dispatcher",
        "obj": "_killBackref",
        "line": 491,
        "column": 15,
        "endLine": 491,
        "endColumn": 24,
        "path": "python/grass/pydispatch/dispatcher.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.robust",
        "obj": "sendRobust",
        "line": 7,
        "column": 0,
        "endLine": 7,
        "endColumn": 14,
        "path": "python/grass/pydispatch/robust.py",
        "symbol": "invalid-name",
        "message": "Function name \"sendRobust\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.robust",
        "obj": "sendRobust",
        "line": 7,
        "column": 0,
        "endLine": 7,
        "endColumn": 14,
        "path": "python/grass/pydispatch/robust.py",
        "symbol": "keyword-arg-before-vararg",
        "message": "Keyword argument before variable positional arguments list in the definition of sendRobust function",
        "message-id": "W1113"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.robust",
        "obj": "sendRobust",
        "line": 47,
        "column": 15,
        "endLine": 47,
        "endColumn": 24,
        "path": "python/grass/pydispatch/robust.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.robustapply",
        "obj": "",
        "line": 55,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pydispatch/robustapply.py",
        "symbol": "superfluous-parens",
        "message": "Unnecessary parens after 'not' keyword",
        "message-id": "C0325"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.robustapply",
        "obj": "",
        "line": 12,
        "column": 4,
        "endLine": 12,
        "endColumn": 11,
        "path": "python/grass/pydispatch/robustapply.py",
        "symbol": "invalid-name",
        "message": "Constant name \"im_func\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.robustapply",
        "obj": "",
        "line": 13,
        "column": 4,
        "endLine": 13,
        "endColumn": 11,
        "path": "python/grass/pydispatch/robustapply.py",
        "symbol": "invalid-name",
        "message": "Constant name \"im_self\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.robustapply",
        "obj": "",
        "line": 14,
        "column": 4,
        "endLine": 14,
        "endColumn": 11,
        "path": "python/grass/pydispatch/robustapply.py",
        "symbol": "invalid-name",
        "message": "Constant name \"im_code\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.robustapply",
        "obj": "",
        "line": 15,
        "column": 4,
        "endLine": 15,
        "endColumn": 13,
        "path": "python/grass/pydispatch/robustapply.py",
        "symbol": "invalid-name",
        "message": "Constant name \"func_code\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.robustapply",
        "obj": "",
        "line": 17,
        "column": 4,
        "endLine": 17,
        "endColumn": 11,
        "path": "python/grass/pydispatch/robustapply.py",
        "symbol": "invalid-name",
        "message": "Constant name \"im_func\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.robustapply",
        "obj": "",
        "line": 18,
        "column": 4,
        "endLine": 18,
        "endColumn": 11,
        "path": "python/grass/pydispatch/robustapply.py",
        "symbol": "invalid-name",
        "message": "Constant name \"im_self\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.robustapply",
        "obj": "",
        "line": 19,
        "column": 4,
        "endLine": 19,
        "endColumn": 11,
        "path": "python/grass/pydispatch/robustapply.py",
        "symbol": "invalid-name",
        "message": "Constant name \"im_code\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.robustapply",
        "obj": "",
        "line": 20,
        "column": 4,
        "endLine": 20,
        "endColumn": 13,
        "path": "python/grass/pydispatch/robustapply.py",
        "symbol": "invalid-name",
        "message": "Constant name \"func_code\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.pydispatch.robustapply",
        "obj": "function",
        "line": 35,
        "column": 4,
        "endLine": 39,
        "endColumn": 84,
        "path": "python/grass/pydispatch/robustapply.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.robustapply",
        "obj": "function",
        "line": 39,
        "column": 25,
        "endLine": 39,
        "endColumn": 54,
        "path": "python/grass/pydispatch/robustapply.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.robustapply",
        "obj": "robustApply",
        "line": 43,
        "column": 0,
        "endLine": 43,
        "endColumn": 15,
        "path": "python/grass/pydispatch/robustapply.py",
        "symbol": "invalid-name",
        "message": "Function name \"robustApply\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.robustapply",
        "obj": "robustApply",
        "line": 45,
        "column": 14,
        "endLine": 45,
        "endColumn": 24,
        "path": "python/grass/pydispatch/robustapply.py",
        "symbol": "invalid-name",
        "message": "Variable name \"codeObject\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.robustapply",
        "obj": "robustApply",
        "line": 45,
        "column": 26,
        "endLine": 45,
        "endColumn": 36,
        "path": "python/grass/pydispatch/robustapply.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startIndex\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.robustapply",
        "obj": "robustApply",
        "line": 52,
        "column": 16,
        "endLine": 53,
        "endColumn": 37,
        "path": "python/grass/pydispatch/robustapply.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.saferef",
        "obj": "",
        "line": 7,
        "column": 0,
        "endLine": 7,
        "endColumn": 7,
        "path": "python/grass/pydispatch/saferef.py",
        "symbol": "invalid-name",
        "message": "Constant name \"im_func\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.saferef",
        "obj": "",
        "line": 8,
        "column": 0,
        "endLine": 8,
        "endColumn": 7,
        "path": "python/grass/pydispatch/saferef.py",
        "symbol": "invalid-name",
        "message": "Constant name \"im_self\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.saferef",
        "obj": "safeRef",
        "line": 11,
        "column": 0,
        "endLine": 11,
        "endColumn": 11,
        "path": "python/grass/pydispatch/saferef.py",
        "symbol": "invalid-name",
        "message": "Function name \"safeRef\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.saferef",
        "obj": "safeRef",
        "line": 11,
        "column": 20,
        "endLine": 11,
        "endColumn": 28,
        "path": "python/grass/pydispatch/saferef.py",
        "symbol": "invalid-name",
        "message": "Argument name \"onDelete\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.saferef",
        "obj": "safeRef",
        "line": 27,
        "column": 16,
        "endLine": 29,
        "endColumn": 41,
        "path": "python/grass/pydispatch/saferef.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pydispatch.saferef",
        "obj": "safeRef",
        "line": 33,
        "column": 4,
        "endLine": 36,
        "endColumn": 34,
        "path": "python/grass/pydispatch/saferef.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.saferef",
        "obj": "BoundMethodWeakref.__init__",
        "line": 135,
        "column": 8,
        "endLine": 135,
        "endColumn": 28,
        "path": "python/grass/pydispatch/saferef.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"deletionMethods\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.saferef",
        "obj": "BoundMethodWeakref.__init__",
        "line": 137,
        "column": 8,
        "endLine": 137,
        "endColumn": 21,
        "path": "python/grass/pydispatch/saferef.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"weakSelf\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.saferef",
        "obj": "BoundMethodWeakref.__init__",
        "line": 138,
        "column": 8,
        "endLine": 138,
        "endColumn": 21,
        "path": "python/grass/pydispatch/saferef.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"weakFunc\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.saferef",
        "obj": "BoundMethodWeakref.__init__",
        "line": 139,
        "column": 8,
        "endLine": 139,
        "endColumn": 21,
        "path": "python/grass/pydispatch/saferef.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"selfName\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.saferef",
        "obj": "BoundMethodWeakref.__init__",
        "line": 140,
        "column": 8,
        "endLine": 140,
        "endColumn": 21,
        "path": "python/grass/pydispatch/saferef.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"funcName\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.saferef",
        "obj": "BoundMethodWeakref.__new__",
        "line": 75,
        "column": 29,
        "endLine": 75,
        "endColumn": 37,
        "path": "python/grass/pydispatch/saferef.py",
        "symbol": "invalid-name",
        "message": "Argument name \"onDelete\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.saferef",
        "obj": "BoundMethodWeakref.__new__",
        "line": 75,
        "column": 4,
        "endLine": 75,
        "endColumn": 15,
        "path": "python/grass/pydispatch/saferef.py",
        "symbol": "keyword-arg-before-vararg",
        "message": "Keyword argument before variable positional arguments list in the definition of __new__ function",
        "message-id": "W1113"
    },
    {
        "type": "refactor",
        "module": "grass.pydispatch.saferef",
        "obj": "BoundMethodWeakref.__new__",
        "line": 89,
        "column": 8,
        "endLine": 96,
        "endColumn": 23,
        "path": "python/grass/pydispatch/saferef.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.saferef",
        "obj": "BoundMethodWeakref.__init__",
        "line": 98,
        "column": 31,
        "endLine": 98,
        "endColumn": 39,
        "path": "python/grass/pydispatch/saferef.py",
        "symbol": "invalid-name",
        "message": "Argument name \"onDelete\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.saferef",
        "obj": "BoundMethodWeakref.__init__.remove",
        "line": 118,
        "column": 20,
        "endLine": 118,
        "endColumn": 48,
        "path": "python/grass/pydispatch/saferef.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _allInstances of a client class",
        "message-id": "W0212"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.saferef",
        "obj": "BoundMethodWeakref.__init__.remove",
        "line": 125,
        "column": 23,
        "endLine": 125,
        "endColumn": 32,
        "path": "python/grass/pydispatch/saferef.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.saferef",
        "obj": "BoundMethodWeakref.__init__.remove",
        "line": 130,
        "column": 28,
        "endLine": 131,
        "endColumn": 49,
        "path": "python/grass/pydispatch/saferef.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.saferef",
        "obj": "BoundMethodWeakref.__init__.remove",
        "line": 113,
        "column": 19,
        "endLine": 113,
        "endColumn": 23,
        "path": "python/grass/pydispatch/saferef.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'weak'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.saferef",
        "obj": "BoundMethodWeakref.calculateKey",
        "line": 142,
        "column": 4,
        "endLine": 142,
        "endColumn": 20,
        "path": "python/grass/pydispatch/saferef.py",
        "symbol": "invalid-name",
        "message": "Method name \"calculateKey\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.pydispatch.saferef",
        "obj": "BoundMethodWeakref",
        "line": 150,
        "column": 4,
        "endLine": 150,
        "endColumn": 16,
        "path": "python/grass/pydispatch/saferef.py",
        "symbol": "no-classmethod-decorator",
        "message": "Consider using a decorator instead of calling classmethod",
        "message-id": "R0202"
    },
    {
        "type": "convention",
        "module": "grass.pydispatch.saferef",
        "obj": "BoundMethodWeakref.__str__",
        "line": 154,
        "column": 15,
        "endLine": 154,
        "endColumn": 32,
        "path": "python/grass/pydispatch/saferef.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.pydispatch.saferef",
        "obj": "BoundMethodWeakref.__cmp__",
        "line": 169,
        "column": 19,
        "endLine": 169,
        "endColumn": 22,
        "path": "python/grass/pydispatch/saferef.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'cmp'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pydispatch.saferef",
        "obj": "BoundMethodWeakref.__cmp__",
        "line": 170,
        "column": 15,
        "endLine": 170,
        "endColumn": 18,
        "path": "python/grass/pydispatch/saferef.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'cmp'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.signal",
        "obj": "",
        "line": 112,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pydispatch/signal.py",
        "symbol": "fixme",
        "message": "TODO: use the name for debugging",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.signal",
        "obj": "",
        "line": 187,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pydispatch/signal.py",
        "symbol": "fixme",
        "message": "TODO: remove args?, make it work for args?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.signal",
        "obj": "",
        "line": 188,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pydispatch/signal.py",
        "symbol": "fixme",
        "message": "TODO: where to put documentation",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.pydispatch.signal",
        "obj": "",
        "line": 234,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pydispatch/signal.py",
        "symbol": "fixme",
        "message": "TODO: remove args?",
        "message-id": "W0511"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.errors",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/errors.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "error",
        "module": "grass.pygrass.errors",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": 6,
        "endColumn": 30,
        "path": "python/grass/pygrass/errors.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.gis'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.errors",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": 6,
        "endColumn": 30,
        "path": "python/grass/pygrass/errors.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.errors",
        "obj": "must_be_open",
        "line": 9,
        "column": 0,
        "endLine": 9,
        "endColumn": 16,
        "path": "python/grass/pygrass/errors.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.errors",
        "obj": "must_be_open.wrapper",
        "line": 12,
        "column": 8,
        "endLine": 16,
        "endColumn": 48,
        "path": "python/grass/pygrass/errors.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "error",
        "module": "grass.pygrass.errors",
        "obj": "must_be_open.wrapper",
        "line": 16,
        "column": 25,
        "endLine": 16,
        "endColumn": 26,
        "path": "python/grass/pygrass/errors.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.errors",
        "obj": "must_be_open.wrapper",
        "line": 11,
        "column": 4,
        "endLine": 11,
        "endColumn": 15,
        "path": "python/grass/pygrass/errors.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.errors",
        "obj": "mapinfo_must_be_set",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 23,
        "path": "python/grass/pygrass/errors.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.errors",
        "obj": "mapinfo_must_be_set.wrapper",
        "line": 24,
        "column": 8,
        "endLine": 29,
        "endColumn": 13,
        "path": "python/grass/pygrass/errors.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.errors",
        "obj": "",
        "line": 28,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/errors.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.pygrass.errors",
        "obj": "mapinfo_must_be_set.wrapper",
        "line": 28,
        "column": 16,
        "endLine": 28,
        "endColumn": 17,
        "path": "python/grass/pygrass/errors.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.errors",
        "obj": "must_be_in_current_mapset",
        "line": 34,
        "column": 0,
        "endLine": 34,
        "endColumn": 29,
        "path": "python/grass/pygrass/errors.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.errors",
        "obj": "must_be_in_current_mapset.wrapper",
        "line": 37,
        "column": 8,
        "endLine": 42,
        "endColumn": 13,
        "path": "python/grass/pygrass/errors.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "error",
        "module": "grass.pygrass.errors",
        "obj": "must_be_in_current_mapset.wrapper",
        "line": 41,
        "column": 16,
        "endLine": 41,
        "endColumn": 17,
        "path": "python/grass/pygrass/errors.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "error",
        "module": "grass.pygrass.utils",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": 6,
        "endColumn": 30,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.gis'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.utils",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": 6,
        "endColumn": 30,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "grass.pygrass.utils",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 10,
        "endColumn": 36,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.raster'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 10,
        "endColumn": 36,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "wrong-import-position",
        "message": "Import \"import grass.lib.raster as libraster\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "error",
        "module": "grass.pygrass.utils",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 10,
        "endColumn": 36,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "grass.pygrass.utils",
        "obj": "",
        "line": 11,
        "column": 0,
        "endLine": 11,
        "endColumn": 44,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.ctypes_preamble'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "",
        "line": 11,
        "column": 0,
        "endLine": 11,
        "endColumn": 44,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from grass.lib.ctypes_preamble import String\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "error",
        "module": "grass.pygrass.utils",
        "obj": "",
        "line": 11,
        "column": 0,
        "endLine": 11,
        "endColumn": 44,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "",
        "line": 12,
        "column": 0,
        "endLine": 12,
        "endColumn": 42,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from grass.script import core as grasscore\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "",
        "line": 13,
        "column": 0,
        "endLine": 13,
        "endColumn": 44,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from grass.script import utils as grassutils\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "",
        "line": 15,
        "column": 0,
        "endLine": 15,
        "endColumn": 43,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from grass.pygrass.errors import GrassError\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 16,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "invalid-name",
        "message": "Constant name \"test_vector_name\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 16,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "invalid-name",
        "message": "Constant name \"test_raster_name\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.utils",
        "obj": "findmaps",
        "line": 51,
        "column": 13,
        "endLine": 51,
        "endColumn": 17,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.utils",
        "obj": "findmaps",
        "line": 81,
        "column": 8,
        "endLine": 81,
        "endColumn": 12,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'mset' from outer scope (line 608)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "findmaps",
        "line": 60,
        "column": 4,
        "endLine": 60,
        "endColumn": 60,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (grass.pygrass.gis.Gisdbase, grass.pygrass.gis.Location, grass.pygrass.gis.Mapset)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.utils",
        "obj": "findmaps.find_in_location",
        "line": 62,
        "column": 25,
        "endLine": 62,
        "endColumn": 29,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.utils",
        "obj": "findmaps.find_in_location",
        "line": 65,
        "column": 12,
        "endLine": 65,
        "endColumn": 16,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'mset' from outer scope (line 608)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.utils",
        "obj": "findmaps.find_in_gisdbase",
        "line": 74,
        "column": 25,
        "endLine": 74,
        "endColumn": 29,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.utils",
        "obj": "findmaps",
        "line": 80,
        "column": 4,
        "endLine": 103,
        "endColumn": 51,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "rename",
        "line": 115,
        "column": 21,
        "endLine": 115,
        "endColumn": 34,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "copy",
        "line": 129,
        "column": 28,
        "endLine": 129,
        "endColumn": 41,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.utils",
        "obj": "decode",
        "line": 137,
        "column": 4,
        "endLine": 143,
        "endColumn": 18,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "get_raster_for_points",
        "line": 315,
        "column": 4,
        "endLine": 315,
        "endColumn": 26,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (math.isnan)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "get_raster_for_points",
        "line": 320,
        "column": 8,
        "endLine": 320,
        "endColumn": 51,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (grass.pygrass.gis.region.Region)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "grass.pygrass.utils",
        "obj": "get_raster_for_points",
        "line": 328,
        "column": 25,
        "endLine": 328,
        "endColumn": 59,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.pygrass.utils",
        "obj": "get_raster_for_points",
        "line": 328,
        "column": 25,
        "endLine": 328,
        "endColumn": 26,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.utils",
        "obj": "get_raster_for_points",
        "line": 337,
        "column": 16,
        "endLine": 337,
        "endColumn": 22,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'result' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.utils",
        "obj": "get_raster_for_points",
        "line": 340,
        "column": 4,
        "endLine": 344,
        "endColumn": 19,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.utils",
        "obj": "get_raster_for_points",
        "line": 343,
        "column": 8,
        "endLine": 343,
        "endColumn": 11,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "undefined-loop-variable",
        "message": "Using possibly undefined loop variable 'poi'",
        "message-id": "W0631"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "r_export",
        "line": 347,
        "column": 0,
        "endLine": 347,
        "endColumn": 12,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "r_export",
        "line": 348,
        "column": 4,
        "endLine": 348,
        "endColumn": 44,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (grass.pygrass.modules.Module)",
        "message-id": "C0415"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.utils",
        "obj": "r_export",
        "line": 350,
        "column": 4,
        "endLine": 361,
        "endColumn": 54,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "r_export",
        "line": 351,
        "column": 39,
        "endLine": 351,
        "endColumn": 49,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "r_export",
        "line": 353,
        "column": 12,
        "endLine": 353,
        "endColumn": 22,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.utils",
        "obj": "get_lib_path",
        "line": 370,
        "column": 4,
        "endLine": 370,
        "endColumn": 47,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'get_lib_path' from outer scope (line 364)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "get_lib_path",
        "line": 370,
        "column": 4,
        "endLine": 370,
        "endColumn": 47,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (grass.script.utils.get_lib_path)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.utils",
        "obj": "set_path",
        "line": 386,
        "column": 4,
        "endLine": 386,
        "endColumn": 43,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'set_path' from outer scope (line 375)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "set_path",
        "line": 386,
        "column": 4,
        "endLine": 386,
        "endColumn": 43,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (grass.script.utils.set_path)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "table_exist",
        "line": 426,
        "column": 12,
        "endLine": 427,
        "endColumn": 48,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "table_exist",
        "line": 433,
        "column": 16,
        "endLine": 435,
        "endColumn": 38,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.utils",
        "obj": "table_exist",
        "line": 440,
        "column": 11,
        "endLine": 440,
        "endColumn": 44,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "simplifiable-if-expression",
        "message": "The if expression can be replaced with 'bool(test)'",
        "message-id": "R1719"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "create_test_vector_map",
        "line": 469,
        "column": 4,
        "endLine": 469,
        "endColumn": 47,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (grass.pygrass.vector.VectorTopo)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "create_test_vector_map",
        "line": 470,
        "column": 4,
        "endLine": 470,
        "endColumn": 77,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (grass.pygrass.vector.geometry.Point, grass.pygrass.vector.geometry.Line, grass.pygrass.vector.geometry.Centroid, grass.pygrass.vector.geometry.Boundary)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "create_test_stream_network_map",
        "line": 557,
        "column": 4,
        "endLine": 557,
        "endColumn": 47,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (grass.pygrass.vector.VectorTopo)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "create_test_stream_network_map",
        "line": 558,
        "column": 4,
        "endLine": 558,
        "endColumn": 50,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (grass.pygrass.vector.geometry.Line)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.utils",
        "obj": "",
        "line": 598,
        "column": 4,
        "endLine": 598,
        "endColumn": 35,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "import-self",
        "message": "Module import itself",
        "message-id": "W0406"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.utils",
        "obj": "",
        "line": 603,
        "column": 40,
        "endLine": 603,
        "endColumn": 48,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.utils",
        "obj": "",
        "line": 607,
        "column": 4,
        "endLine": 607,
        "endColumn": 51,
        "path": "python/grass/pygrass/utils.py",
        "symbol": "pointless-string-statement",
        "message": "String statement has no effect",
        "message-id": "W0105"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.gis.__init__",
        "obj": "",
        "line": 172,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "fixme",
        "message": "TODO remove or complete this function",
        "message-id": "W0511"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.gis",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "error",
        "module": "grass.pygrass.gis",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 10,
        "endColumn": 30,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.gis'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.gis",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 10,
        "endColumn": 30,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.gis",
        "obj": "",
        "line": 15,
        "column": 0,
        "endLine": 15,
        "endColumn": 16,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"test_vector_name\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.gis",
        "obj": "",
        "line": 16,
        "column": 0,
        "endLine": 16,
        "endColumn": 16,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"test_raster_name\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.gis",
        "obj": "is_valid",
        "line": 39,
        "column": 26,
        "endLine": 39,
        "endColumn": 30,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.gis",
        "obj": "_check_raise",
        "line": 58,
        "column": 30,
        "endLine": 58,
        "endColumn": 34,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.gis",
        "obj": "_check_raise",
        "line": 76,
        "column": 8,
        "endLine": 76,
        "endColumn": 46,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'getenv' from outer scope (line 13)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.gis",
        "obj": "_check_raise",
        "line": 76,
        "column": 8,
        "endLine": 76,
        "endColumn": 46,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "reimported",
        "message": "Reimport 'getenv' (imported line 13)",
        "message-id": "W0404"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.gis",
        "obj": "_check_raise",
        "line": 76,
        "column": 8,
        "endLine": 76,
        "endColumn": 46,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (grass.pygrass.utils.getenv)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.gis",
        "obj": "_check_raise",
        "line": 81,
        "column": 21,
        "endLine": 81,
        "endColumn": 40,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.gis",
        "obj": "make_mapset",
        "line": 115,
        "column": 4,
        "endLine": 118,
        "endColumn": 40,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"elif\" after \"raise\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1720"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.gis",
        "obj": "Gisdbase.__repr__",
        "line": 149,
        "column": 15,
        "endLine": 149,
        "endColumn": 29,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.gis",
        "obj": "Gisdbase.__getitem__",
        "line": 163,
        "column": 8,
        "endLine": 166,
        "endColumn": 68,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.gis",
        "obj": "Gisdbase.__getitem__",
        "line": 166,
        "column": 27,
        "endLine": 166,
        "endColumn": 56,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.gis",
        "obj": "Gisdbase.new_location",
        "line": 173,
        "column": 4,
        "endLine": 173,
        "endColumn": 20,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.gis",
        "obj": "Gisdbase._set_name",
        "line": 139,
        "column": 8,
        "endLine": 139,
        "endColumn": 18,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute '_name' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.gis",
        "obj": "Location.__getitem__",
        "line": 235,
        "column": 8,
        "endLine": 238,
        "endColumn": 64,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.gis",
        "obj": "Location.__getitem__",
        "line": 238,
        "column": 27,
        "endLine": 238,
        "endColumn": 54,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.gis",
        "obj": "Location.__repr__",
        "line": 255,
        "column": 15,
        "endLine": 255,
        "endColumn": 29,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.gis",
        "obj": "Location.mapsets",
        "line": 274,
        "column": 18,
        "endLine": 274,
        "endColumn": 45,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "unnecessary-comprehension",
        "message": "Unnecessary use of a comprehension, use list(self) instead.",
        "message-id": "R1721"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.gis",
        "obj": "Location._set_gisdb",
        "line": 218,
        "column": 8,
        "endLine": 218,
        "endColumn": 19,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute '_gisdb' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.gis",
        "obj": "Location._set_name",
        "line": 228,
        "column": 8,
        "endLine": 228,
        "endColumn": 18,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute '_name' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.gis",
        "obj": "Mapset.__repr__",
        "line": 348,
        "column": 15,
        "endLine": 348,
        "endColumn": 27,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.gis",
        "obj": "Mapset.glist",
        "line": 350,
        "column": 20,
        "endLine": 350,
        "endColumn": 24,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.gis",
        "obj": "Mapset.glist",
        "line": 350,
        "column": 4,
        "endLine": 350,
        "endColumn": 13,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.gis",
        "obj": "Mapset._set_gisdb",
        "line": 318,
        "column": 8,
        "endLine": 318,
        "endColumn": 19,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute '_gisdb' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.gis",
        "obj": "Mapset._set_loc",
        "line": 328,
        "column": 8,
        "endLine": 328,
        "endColumn": 17,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute '_loc' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.gis",
        "obj": "Mapset._set_name",
        "line": 338,
        "column": 8,
        "endLine": 338,
        "endColumn": 18,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute '_name' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.gis",
        "obj": "VisibleMapset.read",
        "line": 433,
        "column": 17,
        "endLine": 433,
        "endColumn": 38,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.gis",
        "obj": "VisibleMapset._write",
        "line": 447,
        "column": 13,
        "endLine": 447,
        "endColumn": 34,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.gis",
        "obj": "VisibleMapset.add",
        "line": 461,
        "column": 17,
        "endLine": 461,
        "endColumn": 39,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.gis",
        "obj": "VisibleMapset.add",
        "line": 462,
        "column": 24,
        "endLine": 462,
        "endColumn": 30,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.gis",
        "obj": "",
        "line": 501,
        "column": 40,
        "endLine": 501,
        "endColumn": 48,
        "path": "python/grass/pygrass/gis/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.pygrass.gis.region",
        "obj": "",
        "line": 8,
        "column": 0,
        "endLine": 8,
        "endColumn": 30,
        "path": "python/grass/pygrass/gis/region.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.gis'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.gis.region",
        "obj": "",
        "line": 8,
        "column": 0,
        "endLine": 8,
        "endColumn": 30,
        "path": "python/grass/pygrass/gis/region.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "grass.pygrass.gis.region",
        "obj": "",
        "line": 9,
        "column": 0,
        "endLine": 9,
        "endColumn": 36,
        "path": "python/grass/pygrass/gis/region.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.raster'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.gis.region",
        "obj": "",
        "line": 9,
        "column": 0,
        "endLine": 9,
        "endColumn": 36,
        "path": "python/grass/pygrass/gis/region.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.gis.region",
        "obj": "",
        "line": 16,
        "column": 0,
        "endLine": 16,
        "endColumn": 16,
        "path": "python/grass/pygrass/gis/region.py",
        "symbol": "invalid-name",
        "message": "Constant name \"test_vector_name\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.gis.region",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 16,
        "path": "python/grass/pygrass/gis/region.py",
        "symbol": "invalid-name",
        "message": "Constant name \"test_raster_name\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.gis.region",
        "obj": "Region.items",
        "line": 373,
        "column": 20,
        "endLine": 373,
        "endColumn": 44,
        "path": "python/grass/pygrass/gis/region.py",
        "symbol": "unnecessary-dunder-call",
        "message": "Unnecessarily calls dunder method __getattribute__. Access attribute directly or use getattr built-in function.",
        "message-id": "C2801"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.gis.region",
        "obj": "Region.from_vect",
        "line": 423,
        "column": 8,
        "endLine": 423,
        "endColumn": 51,
        "path": "python/grass/pygrass/gis/region.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (grass.pygrass.vector.VectorTopo)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.gis.region",
        "obj": "Region.get_bbox",
        "line": 631,
        "column": 8,
        "endLine": 631,
        "endColumn": 51,
        "path": "python/grass/pygrass/gis/region.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (grass.pygrass.vector.basic.Bbox)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.gis.region",
        "obj": "",
        "line": 673,
        "column": 40,
        "endLine": 673,
        "endColumn": 48,
        "path": "python/grass/pygrass/gis/region.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.gis.region",
        "obj": "",
        "line": 678,
        "column": 4,
        "endLine": 678,
        "endColumn": 51,
        "path": "python/grass/pygrass/gis/region.py",
        "symbol": "pointless-string-statement",
        "message": "String statement has no effect",
        "message-id": "W0105"
    },
    {
        "type": "error",
        "module": "grass.pygrass.messages",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 30,
        "path": "python/grass/pygrass/messages/__init__.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.gis'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.messages",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 30,
        "path": "python/grass/pygrass/messages/__init__.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.messages",
        "obj": "message_server",
        "line": 100,
        "column": 39,
        "endLine": 100,
        "endColumn": 50,
        "path": "python/grass/pygrass/messages/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.messages",
        "obj": "Messenger.fatal",
        "line": 263,
        "column": 8,
        "endLine": 266,
        "endColumn": 23,
        "path": "python/grass/pygrass/messages/__init__.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1720"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.messages",
        "obj": "Messenger.test_fatal_error",
        "line": 329,
        "column": 8,
        "endLine": 329,
        "endColumn": 19,
        "path": "python/grass/pygrass/messages/__init__.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (time)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.messages",
        "obj": "get_msgr",
        "line": 336,
        "column": 0,
        "endLine": 336,
        "endColumn": 12,
        "path": "python/grass/pygrass/messages/__init__.py",
        "symbol": "dangerous-default-value",
        "message": "Dangerous default value [] as argument",
        "message-id": "W0102"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.messages",
        "obj": "get_msgr",
        "line": 336,
        "column": 0,
        "endLine": 336,
        "endColumn": 12,
        "path": "python/grass/pygrass/messages/__init__.py",
        "symbol": "keyword-arg-before-vararg",
        "message": "Keyword argument before variable positional arguments list in the definition of get_msgr function",
        "message-id": "W1113"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/modules/__init__.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.shortcuts",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/modules/shortcuts.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.shortcuts",
        "obj": "MetaModule.__dir__",
        "line": 67,
        "column": 55,
        "endLine": 67,
        "endColumn": 61,
        "path": "python/grass/pygrass/modules/shortcuts.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.shortcuts",
        "obj": "MetaModule.__getattr__",
        "line": 71,
        "column": 24,
        "endLine": 71,
        "endColumn": 31,
        "path": "python/grass/pygrass/modules/shortcuts.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.grid",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/modules/grid/__init__.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "",
        "line": 404,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "fixme",
        "message": "TODO maybe also i.* could be supported easily",
        "message-id": "W0511"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "read_gisrc",
        "line": 124,
        "column": 9,
        "endLine": 124,
        "endColumn": 25,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "read_gisrc",
        "line": 125,
        "column": 14,
        "endLine": 127,
        "endColumn": 9,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-dict-comprehension",
        "message": "Consider using a dictionary comprehension",
        "message-id": "R1717"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "get_mapset",
        "line": 150,
        "column": 14,
        "endLine": 150,
        "endColumn": 38,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "unnecessary-comprehension",
        "message": "Unnecessary use of a comprehension, use list(src.visible) instead.",
        "message-id": "R1721"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "copy_groups",
        "line": 186,
        "column": 9,
        "endLine": 186,
        "endColumn": 44,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "simplifiable-if-expression",
        "message": "The if expression can be replaced with 'test'",
        "message-id": "R1719"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "copy_groups",
        "line": 192,
        "column": 16,
        "endLine": 192,
        "endColumn": 59,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "unnecessary-comprehension",
        "message": "Unnecessary use of a comprehension, use list(get_grp.outputs.stdout.split()) instead.",
        "message-id": "R1721"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "set_region",
        "line": 227,
        "column": 4,
        "endLine": 227,
        "endColumn": 43,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "set_region",
        "line": 229,
        "column": 4,
        "endLine": 229,
        "endColumn": 43,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "copy_rasters",
        "line": 253,
        "column": 10,
        "endLine": 253,
        "endColumn": 22,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "copy_rasters",
        "line": 266,
        "column": 25,
        "endLine": 266,
        "endColumn": 32,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "copy_rasters",
        "line": 267,
        "column": 19,
        "endLine": 267,
        "endColumn": 28,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "copy_vectors",
        "line": 290,
        "column": 10,
        "endLine": 290,
        "endColumn": 22,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "copy_vectors",
        "line": 301,
        "column": 19,
        "endLine": 301,
        "endColumn": 28,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "get_cmd",
        "line": 327,
        "column": 16,
        "endLine": 327,
        "endColumn": 23,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "get_cmd",
        "line": 330,
        "column": 12,
        "endLine": 330,
        "endColumn": 19,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "get_cmd",
        "line": 340,
        "column": 9,
        "endLine": 340,
        "endColumn": 16,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "get_cmd",
        "line": 344,
        "column": 12,
        "endLine": 344,
        "endColumn": 19,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "get_cmd",
        "line": 349,
        "column": 16,
        "endLine": 349,
        "endColumn": 21,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "get_cmd",
        "line": 350,
        "column": 16,
        "endLine": 350,
        "endColumn": 22,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "cmd_exe",
        "line": 379,
        "column": 12,
        "endLine": 379,
        "endColumn": 54,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "simplifiable-if-expression",
        "message": "The if expression can be replaced with 'test'",
        "message-id": "R1719"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "cmd_exe",
        "line": 387,
        "column": 8,
        "endLine": 387,
        "endColumn": 72,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "cmd_exe",
        "line": 387,
        "column": 31,
        "endLine": 387,
        "endColumn": 42,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "cmd_exe",
        "line": 387,
        "column": 45,
        "endLine": 387,
        "endColumn": 48,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "undefined-loop-variable",
        "message": "Using possibly undefined loop variable 'key'",
        "message-id": "W0631"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "cmd_exe",
        "line": 393,
        "column": 21,
        "endLine": 393,
        "endColumn": 28,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "cmd_exe",
        "line": 394,
        "column": 8,
        "endLine": 394,
        "endColumn": 45,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "cmd_exe",
        "line": 398,
        "column": 4,
        "endLine": 398,
        "endColumn": 49,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "cmd_exe",
        "line": 376,
        "column": 4,
        "endLine": 376,
        "endColumn": 7,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'src'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "cmd_exe",
        "line": 376,
        "column": 9,
        "endLine": 376,
        "endColumn": 12,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'dst'",
        "message-id": "W0612"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule",
        "line": 403,
        "column": 0,
        "endLine": 403,
        "endColumn": 16,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (21/7)",
        "message-id": "R0902"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule.__init__",
        "line": 445,
        "column": 4,
        "endLine": 445,
        "endColumn": 16,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (16/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule.__init__",
        "line": 445,
        "column": 4,
        "endLine": 445,
        "endColumn": 16,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (21/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule.__init__",
        "line": 445,
        "column": 4,
        "endLine": 445,
        "endColumn": 16,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "keyword-arg-before-vararg",
        "message": "Keyword argument before variable positional arguments list in the definition of __init__ function",
        "message-id": "W1113"
    },
    {
        "type": "error",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule.__init__",
        "line": 484,
        "column": 16,
        "endLine": 484,
        "endColumn": 77,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule.__init__",
        "line": 484,
        "column": 16,
        "endLine": 484,
        "endColumn": 17,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule.__init__",
        "line": 488,
        "column": 16,
        "endLine": 488,
        "endColumn": 76,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule.__init__",
        "line": 488,
        "column": 16,
        "endLine": 488,
        "endColumn": 17,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule.__init__",
        "line": 500,
        "column": 22,
        "endLine": 500,
        "endColumn": 71,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "unnecessary-comprehension",
        "message": "Unnecessary use of a comprehension, use list(select(self.module.inputs, 'raster')) instead.",
        "message-id": "R1721"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule.__init__",
        "line": 505,
        "column": 22,
        "endLine": 505,
        "endColumn": 71,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "unnecessary-comprehension",
        "message": "Unnecessary use of a comprehension, use list(select(self.module.inputs, 'vector')) instead.",
        "message-id": "R1721"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule.__init__",
        "line": 508,
        "column": 21,
        "endLine": 508,
        "endColumn": 69,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "unnecessary-comprehension",
        "message": "Unnecessary use of a comprehension, use list(select(self.module.inputs, 'group')) instead.",
        "message-id": "R1721"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule.split",
        "line": 558,
        "column": 19,
        "endLine": 558,
        "endColumn": 25,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule.get_works",
        "line": 586,
        "column": 4,
        "endLine": 586,
        "endColumn": 17,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (18/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule.get_works",
        "line": 595,
        "column": 17,
        "endLine": 595,
        "endColumn": 65,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "unnecessary-comprehension",
        "message": "Unnecessary use of a comprehension, use list(select(self.module.inputs, 'group')) instead.",
        "message-id": "R1721"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule.get_works",
        "line": 604,
        "column": 36,
        "endLine": 604,
        "endColumn": 43,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule.get_works",
        "line": 606,
        "column": 23,
        "endLine": 606,
        "endColumn": 74,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-dict-comprehension",
        "message": "Consider using a dictionary comprehension",
        "message-id": "R1717"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule.get_works",
        "line": 607,
        "column": 32,
        "endLine": 607,
        "endColumn": 36,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule.get_works",
        "line": 608,
        "column": 32,
        "endLine": 608,
        "endColumn": 36,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule.get_works",
        "line": 591,
        "column": 12,
        "endLine": 591,
        "endColumn": 16,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'mdst'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule.define_mapset_inputs",
        "line": 631,
        "column": 44,
        "endLine": 631,
        "endColumn": 49,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule._actual_run",
        "line": 665,
        "column": 35,
        "endLine": 665,
        "endColumn": 84,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule._actual_run",
        "line": 665,
        "column": 35,
        "endLine": 665,
        "endColumn": 36,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule._actual_run",
        "line": 684,
        "column": 12,
        "endLine": 684,
        "endColumn": 48,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.gis'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule._actual_run",
        "line": 684,
        "column": 12,
        "endLine": 684,
        "endColumn": 48,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (grass.lib.gis.G_tempfile)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule._actual_run",
        "line": 684,
        "column": 12,
        "endLine": 684,
        "endColumn": 48,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule._actual_run",
        "line": 694,
        "column": 26,
        "endLine": 694,
        "endColumn": 88,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule._actual_run",
        "line": 659,
        "column": 19,
        "endLine": 659,
        "endColumn": 54,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule._actual_run",
        "line": 694,
        "column": 26,
        "endLine": 694,
        "endColumn": 88,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule.patch",
        "line": 741,
        "column": 18,
        "endLine": 741,
        "endColumn": 60,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.grid.grid",
        "obj": "GridModule.patch",
        "line": 743,
        "column": 23,
        "endLine": 743,
        "endColumn": 50,
        "path": "python/grass/pygrass/modules/grid/grid.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.modules.grid.patch",
        "obj": "",
        "line": 62,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/modules/grid/patch.py",
        "symbol": "fixme",
        "message": "TODO is prefix useful??",
        "message-id": "W0511"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.patch",
        "obj": "rpatch_map",
        "line": 52,
        "column": 0,
        "endLine": 52,
        "endColumn": 14,
        "path": "python/grass/pygrass/modules/grid/patch.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.patch",
        "obj": "rpatch_map",
        "line": 52,
        "column": 0,
        "endLine": 52,
        "endColumn": 14,
        "path": "python/grass/pygrass/modules/grid/patch.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.modules.grid.patch",
        "obj": "rpatch_map",
        "line": 103,
        "column": 12,
        "endLine": 103,
        "endColumn": 19,
        "path": "python/grass/pygrass/modules/grid/patch.py",
        "symbol": "modified-iterating-list",
        "message": "Iterated list 'rrasts' is being modified inside for loop body, consider iterating through a copy of it instead.",
        "message-id": "W4701"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.patch",
        "obj": "rpatch_map_r_patch_backend",
        "line": 108,
        "column": 0,
        "endLine": 108,
        "endColumn": 30,
        "path": "python/grass/pygrass/modules/grid/patch.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.grid.split",
        "obj": "get_bbox",
        "line": 11,
        "column": 0,
        "endLine": 11,
        "endColumn": 12,
        "path": "python/grass/pygrass/modules/grid/split.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.docstring",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/modules/interface/docstring.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.modules.interface.docstring",
        "obj": "DocstringProperty.__get__",
        "line": 44,
        "column": 27,
        "endLine": 44,
        "endColumn": 31,
        "path": "python/grass/pygrass/modules/interface/docstring.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.interface.docstring",
        "obj": "DocstringProperty.__get__",
        "line": 45,
        "column": 8,
        "endLine": 48,
        "endColumn": 33,
        "path": "python/grass/pygrass/modules/interface/docstring.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.modules.interface.env",
        "obj": "get_env",
        "line": 16,
        "column": 9,
        "endLine": 16,
        "endColumn": 30,
        "path": "python/grass/pygrass/modules/interface/env.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.interface.env",
        "obj": "get_env",
        "line": 17,
        "column": 14,
        "endLine": 22,
        "endColumn": 9,
        "path": "python/grass/pygrass/modules/interface/env.py",
        "symbol": "consider-using-dict-comprehension",
        "message": "Consider using a dictionary comprehension",
        "message-id": "R1717"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.env",
        "obj": "G_debug",
        "line": 32,
        "column": 0,
        "endLine": 32,
        "endColumn": 11,
        "path": "python/grass/pygrass/modules/interface/env.py",
        "symbol": "invalid-name",
        "message": "Function name \"G_debug\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.interface.env",
        "obj": "G_debug",
        "line": 38,
        "column": 46,
        "endLine": 38,
        "endColumn": 67,
        "path": "python/grass/pygrass/modules/interface/env.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.modules.interface.env",
        "obj": "G_debug",
        "line": 38,
        "column": 46,
        "endLine": 38,
        "endColumn": 67,
        "path": "python/grass/pygrass/modules/interface/env.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.env",
        "obj": "G_debug",
        "line": 39,
        "column": 14,
        "endLine": 39,
        "endColumn": 24,
        "path": "python/grass/pygrass/modules/interface/env.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.flag",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/modules/interface/flag.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.interface.flag",
        "obj": "Flag.__init__",
        "line": 30,
        "column": 12,
        "endLine": 30,
        "endColumn": 84,
        "path": "python/grass/pygrass/modules/interface/flag.py",
        "symbol": "simplifiable-if-expression",
        "message": "The if expression can be replaced with 'test'",
        "message-id": "R1719"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.interface.flag",
        "obj": "Flag.__init__",
        "line": 35,
        "column": 33,
        "endLine": 35,
        "endColumn": 78,
        "path": "python/grass/pygrass/modules/interface/flag.py",
        "symbol": "simplifiable-if-expression",
        "message": "The if expression can be replaced with 'test'",
        "message-id": "R1719"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.interface.flag",
        "obj": "Flag.get_bash",
        "line": 55,
        "column": 12,
        "endLine": 58,
        "endColumn": 40,
        "path": "python/grass/pygrass/modules/interface/flag.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.flag",
        "obj": "Flag.get_bash",
        "line": 56,
        "column": 23,
        "endLine": 56,
        "endColumn": 29,
        "path": "python/grass/pygrass/modules/interface/flag.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.flag",
        "obj": "Flag.get_bash",
        "line": 58,
        "column": 23,
        "endLine": 58,
        "endColumn": 28,
        "path": "python/grass/pygrass/modules/interface/flag.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.flag",
        "obj": "Flag.get_python",
        "line": 80,
        "column": 19,
        "endLine": 80,
        "endColumn": 28,
        "path": "python/grass/pygrass/modules/interface/flag.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.flag",
        "obj": "Flag.__repr__",
        "line": 89,
        "column": 15,
        "endLine": 89,
        "endColumn": 31,
        "path": "python/grass/pygrass/modules/interface/flag.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.module",
        "obj": "",
        "line": 349,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/modules/interface/module.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.module",
        "obj": "",
        "line": 356,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/modules/interface/module.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.module",
        "obj": "",
        "line": 362,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/modules/interface/module.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.module",
        "obj": "",
        "line": 372,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/modules/interface/module.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.module",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/modules/interface/module.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1093/1000)",
        "message-id": "C0302"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.module",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/modules/interface/module.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.modules.interface.module",
        "obj": "_get_bash",
        "line": 18,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/modules/interface/module.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.modules.interface.module",
        "obj": "_get_bash",
        "line": 18,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/modules/interface/module.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'kargs'",
        "message-id": "W0613"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.interface.module",
        "obj": "Module",
        "line": 321,
        "column": 0,
        "endLine": 321,
        "endColumn": 12,
        "path": "python/grass/pygrass/modules/interface/module.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (20/7)",
        "message-id": "R0902"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.module",
        "obj": "Module.__init__",
        "line": 551,
        "column": 29,
        "endLine": 551,
        "endColumn": 66,
        "path": "python/grass/pygrass/modules/interface/module.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.module",
        "obj": "Module.__init__",
        "line": 556,
        "column": 18,
        "endLine": 556,
        "endColumn": 43,
        "path": "python/grass/pygrass/modules/interface/module.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.modules.interface.module",
        "obj": "Module.__init__",
        "line": 558,
        "column": 12,
        "endLine": 558,
        "endColumn": 49,
        "path": "python/grass/pygrass/modules/interface/module.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise GrassError(str_err % self.name) from e'",
        "message-id": "W0707"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.module",
        "obj": "Module.update",
        "line": 693,
        "column": 37,
        "endLine": 693,
        "endColumn": 67,
        "path": "python/grass/pygrass/modules/interface/module.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.interface.module",
        "obj": "Module.get_python",
        "line": 721,
        "column": 8,
        "endLine": 728,
        "endColumn": 55,
        "path": "python/grass/pygrass/modules/interface/module.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.module",
        "obj": "Module.get_python",
        "line": 722,
        "column": 19,
        "endLine": 722,
        "endColumn": 44,
        "path": "python/grass/pygrass/modules/interface/module.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.module",
        "obj": "Module.get_python",
        "line": 724,
        "column": 19,
        "endLine": 724,
        "endColumn": 40,
        "path": "python/grass/pygrass/modules/interface/module.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.module",
        "obj": "Module.get_python",
        "line": 726,
        "column": 19,
        "endLine": 726,
        "endColumn": 34,
        "path": "python/grass/pygrass/modules/interface/module.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.module",
        "obj": "Module.get_python",
        "line": 728,
        "column": 19,
        "endLine": 728,
        "endColumn": 30,
        "path": "python/grass/pygrass/modules/interface/module.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.module",
        "obj": "Module.__repr__",
        "line": 735,
        "column": 15,
        "endLine": 735,
        "endColumn": 27,
        "path": "python/grass/pygrass/modules/interface/module.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.interface.module",
        "obj": "MultiModule.run",
        "line": 1023,
        "column": 8,
        "endLine": 1037,
        "endColumn": 25,
        "path": "python/grass/pygrass/modules/interface/module.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.interface.module",
        "obj": "MultiModule.wait",
        "line": 1039,
        "column": 4,
        "endLine": 1039,
        "endColumn": 12,
        "path": "python/grass/pygrass/modules/interface/module.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.module",
        "obj": "",
        "line": 15,
        "column": 0,
        "endLine": 15,
        "endColumn": 33,
        "path": "python/grass/pygrass/modules/interface/module.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"itertools.zip_longest\" should be placed before first party imports \"grass.exceptions.CalledModuleError\", \"grass.script.core.Popen\", \"grass.script.utils.encode\" and local imports \"docstring.docstring_property\", \"parameter.Parameter\", \"flag.Flag\", \"typedict.TypeDict\", \"read.GETFROMTAG\", \"env.G_debug\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.parameter",
        "obj": "",
        "line": 153,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/modules/interface/parameter.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.modules.interface.parameter",
        "obj": "",
        "line": 133,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/modules/interface/parameter.py",
        "symbol": "fixme",
        "message": "TODO add documentation",
        "message-id": "W0511"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.interface.parameter",
        "obj": "_check_value.raiseexcpet",
        "line": 23,
        "column": 8,
        "endLine": 29,
        "endColumn": 21,
        "path": "python/grass/pygrass/modules/interface/parameter.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"elif\" after \"raise\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1720"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.modules.interface.parameter",
        "obj": "",
        "line": 38,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/modules/interface/parameter.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in assignment",
        "message-id": "W1404"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.modules.interface.parameter",
        "obj": "_check_value",
        "line": 64,
        "column": 19,
        "endLine": 64,
        "endColumn": 28,
        "path": "python/grass/pygrass/modules/interface/parameter.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.modules.interface.parameter",
        "obj": "_check_value",
        "line": 82,
        "column": 11,
        "endLine": 82,
        "endColumn": 20,
        "path": "python/grass/pygrass/modules/interface/parameter.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.interface.parameter",
        "obj": "_check_value",
        "line": 13,
        "column": 0,
        "endLine": 13,
        "endColumn": 16,
        "path": "python/grass/pygrass/modules/interface/parameter.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (20/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.interface.parameter",
        "obj": "_check_value",
        "line": 13,
        "column": 0,
        "endLine": 13,
        "endColumn": 16,
        "path": "python/grass/pygrass/modules/interface/parameter.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (54/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.interface.parameter",
        "obj": "Parameter",
        "line": 134,
        "column": 0,
        "endLine": 134,
        "endColumn": 15,
        "path": "python/grass/pygrass/modules/interface/parameter.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (17/7)",
        "message-id": "R0902"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.interface.parameter",
        "obj": "Parameter.__init__",
        "line": 167,
        "column": 24,
        "endLine": 167,
        "endColumn": 67,
        "path": "python/grass/pygrass/modules/interface/parameter.py",
        "symbol": "simplifiable-if-expression",
        "message": "The if expression can be replaced with 'test'",
        "message-id": "R1719"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.interface.parameter",
        "obj": "Parameter.__init__",
        "line": 168,
        "column": 24,
        "endLine": 168,
        "endColumn": 67,
        "path": "python/grass/pygrass/modules/interface/parameter.py",
        "symbol": "simplifiable-if-expression",
        "message": "The if expression can be replaced with 'test'",
        "message-id": "R1719"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.parameter",
        "obj": "Parameter.__init__",
        "line": 174,
        "column": 28,
        "endLine": 174,
        "endColumn": 51,
        "path": "python/grass/pygrass/modules/interface/parameter.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.interface.parameter",
        "obj": "Parameter.__init__",
        "line": 221,
        "column": 25,
        "endLine": 221,
        "endColumn": 76,
        "path": "python/grass/pygrass/modules/interface/parameter.py",
        "symbol": "simplifiable-if-expression",
        "message": "The if expression can be replaced with 'not test'",
        "message-id": "R1719"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.modules.interface.parameter",
        "obj": "Parameter.__init__",
        "line": 158,
        "column": 4,
        "endLine": 158,
        "endColumn": 16,
        "path": "python/grass/pygrass/modules/interface/parameter.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (13/12)",
        "message-id": "R0912"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.parameter",
        "obj": "Parameter.get_bash",
        "line": 276,
        "column": 15,
        "endLine": 276,
        "endColumn": 22,
        "path": "python/grass/pygrass/modules/interface/parameter.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.parameter",
        "obj": "Parameter.get_python",
        "line": 298,
        "column": 15,
        "endLine": 298,
        "endColumn": 26,
        "path": "python/grass/pygrass/modules/interface/parameter.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.parameter",
        "obj": "Parameter.__doc__",
        "line": 349,
        "column": 26,
        "endLine": 349,
        "endColumn": 38,
        "path": "python/grass/pygrass/modules/interface/parameter.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.parameter",
        "obj": "Parameter.__doc__",
        "line": 357,
        "column": 19,
        "endLine": 357,
        "endColumn": 38,
        "path": "python/grass/pygrass/modules/interface/parameter.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.pygrass.modules.interface.parameter",
        "obj": "Parameter.__doc__",
        "line": 358,
        "column": 26,
        "endLine": 358,
        "endColumn": 37,
        "path": "python/grass/pygrass/modules/interface/parameter.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'keydescvals' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.read",
        "obj": "do_nothing",
        "line": 8,
        "column": 0,
        "endLine": 8,
        "endColumn": 14,
        "path": "python/grass/pygrass/modules/interface/read.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.read",
        "obj": "get_None",
        "line": 12,
        "column": 0,
        "endLine": 12,
        "endColumn": 12,
        "path": "python/grass/pygrass/modules/interface/read.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.read",
        "obj": "get_None",
        "line": 12,
        "column": 0,
        "endLine": 12,
        "endColumn": 12,
        "path": "python/grass/pygrass/modules/interface/read.py",
        "symbol": "invalid-name",
        "message": "Function name \"get_None\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.modules.interface.read",
        "obj": "get_None",
        "line": 12,
        "column": 13,
        "endLine": 12,
        "endColumn": 14,
        "path": "python/grass/pygrass/modules/interface/read.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'p'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.read",
        "obj": "get_dict",
        "line": 16,
        "column": 0,
        "endLine": 16,
        "endColumn": 12,
        "path": "python/grass/pygrass/modules/interface/read.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.read",
        "obj": "get_values",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 14,
        "path": "python/grass/pygrass/modules/interface/read.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.read",
        "obj": "read_text",
        "line": 24,
        "column": 0,
        "endLine": 24,
        "endColumn": 13,
        "path": "python/grass/pygrass/modules/interface/read.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.read",
        "obj": "read_keydesc",
        "line": 28,
        "column": 0,
        "endLine": 28,
        "endColumn": 16,
        "path": "python/grass/pygrass/modules/interface/read.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.read",
        "obj": "element2dict",
        "line": 59,
        "column": 0,
        "endLine": 59,
        "endColumn": 16,
        "path": "python/grass/pygrass/modules/interface/read.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.read",
        "obj": "element2dict",
        "line": 65,
        "column": 18,
        "endLine": 65,
        "endColumn": 40,
        "path": "python/grass/pygrass/modules/interface/read.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.typedict",
        "obj": "TypeDict",
        "line": 13,
        "column": 0,
        "endLine": 13,
        "endColumn": 14,
        "path": "python/grass/pygrass/modules/interface/typedict.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "error",
        "module": "grass.pygrass.modules.interface.typedict",
        "obj": "TypeDict.__getattr__",
        "line": 21,
        "column": 15,
        "endLine": 21,
        "endColumn": 38,
        "path": "python/grass/pygrass/modules/interface/typedict.py",
        "symbol": "no-member",
        "message": "Class 'OrderedDict' has no '__getattr__' member; maybe '__setattr__'?",
        "message-id": "E1101"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.typedict",
        "obj": "TypeDict.used",
        "line": 64,
        "column": 4,
        "endLine": 64,
        "endColumn": 12,
        "path": "python/grass/pygrass/modules/interface/typedict.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.typedict",
        "obj": "TypeDict.used",
        "line": 67,
        "column": 15,
        "endLine": 67,
        "endColumn": 36,
        "path": "python/grass/pygrass/modules/interface/typedict.py",
        "symbol": "unnecessary-dunder-call",
        "message": "Unnecessarily calls dunder method __getattr__. Access attribute directly or use getattr built-in function.",
        "message-id": "C2801"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.modules.interface.typedict",
        "obj": "TypeDict.used",
        "line": 68,
        "column": 32,
        "endLine": 68,
        "endColumn": 53,
        "path": "python/grass/pygrass/modules/interface/typedict.py",
        "symbol": "unnecessary-dunder-call",
        "message": "Unnecessarily calls dunder method __getattr__. Access attribute directly or use getattr built-in function.",
        "message-id": "C2801"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster",
        "obj": "",
        "line": 2,
        "column": 0,
        "endLine": 2,
        "endColumn": 18,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "import-error",
        "message": "Unable to import 'numpy'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 10,
        "endColumn": 30,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.gis'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 10,
        "endColumn": 30,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster",
        "obj": "",
        "line": 11,
        "column": 0,
        "endLine": 11,
        "endColumn": 36,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.raster'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster",
        "obj": "",
        "line": 11,
        "column": 0,
        "endLine": 11,
        "endColumn": 36,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster",
        "obj": "",
        "line": 12,
        "column": 0,
        "endLine": 12,
        "endColumn": 34,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.rowio'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster",
        "obj": "",
        "line": 12,
        "column": 0,
        "endLine": 12,
        "endColumn": 34,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 45,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from grass.pygrass.errors import must_be_open\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 43,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from grass.pygrass.gis.region import Region\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 31,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from grass.pygrass import utils\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 60,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from grass.pygrass.raster.abstract import RasterAbstractBase\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster",
        "obj": "",
        "line": 23,
        "column": 0,
        "endLine": 23,
        "endColumn": 69,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from grass.pygrass.raster.raster_type import TYPE as RTYPE, RTYPE_STR\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster",
        "obj": "",
        "line": 24,
        "column": 0,
        "endLine": 24,
        "endColumn": 46,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from grass.pygrass.raster.buffer import Buffer\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster",
        "obj": "",
        "line": 25,
        "column": 0,
        "endLine": 25,
        "endColumn": 48,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from grass.pygrass.raster.segment import Segment\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster",
        "obj": "",
        "line": 26,
        "column": 0,
        "endLine": 26,
        "endColumn": 44,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from grass.pygrass.raster.rowio import RowIO\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 16,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"test_raster_name\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster",
        "obj": "RasterRow.__init__",
        "line": 133,
        "column": 4,
        "endLine": 133,
        "endColumn": 16,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "useless-parent-delegation",
        "message": "Useless parent or super() delegation in method '__init__'",
        "message-id": "W0246"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster",
        "obj": "RasterRow.__init__",
        "line": 133,
        "column": 4,
        "endLine": 133,
        "endColumn": 16,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "keyword-arg-before-vararg",
        "message": "Keyword argument before variable positional arguments list in the definition of __init__ function",
        "message-id": "W1113"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster",
        "obj": "RasterRow.open",
        "line": 204,
        "column": 26,
        "endLine": 204,
        "endColumn": 79,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster",
        "obj": "RasterRow.open",
        "line": 204,
        "column": 26,
        "endLine": 204,
        "endColumn": 27,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster.__init__",
        "obj": "",
        "line": 210,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster",
        "obj": "RasterRow.open",
        "line": 209,
        "column": 30,
        "endLine": 211,
        "endColumn": 21,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster",
        "obj": "RasterRow.open",
        "line": 209,
        "column": 30,
        "endLine": 209,
        "endColumn": 31,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster",
        "obj": "RasterRow.open",
        "line": 214,
        "column": 32,
        "endLine": 214,
        "endColumn": 60,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster",
        "obj": "RasterRow.open",
        "line": 214,
        "column": 32,
        "endLine": 214,
        "endColumn": 33,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster.__init__",
        "obj": "",
        "line": 217,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster",
        "obj": "RasterRow.open",
        "line": 201,
        "column": 16,
        "endLine": 201,
        "endColumn": 27,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute '_gtype' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster",
        "obj": "RasterSegment",
        "line": 289,
        "column": 0,
        "endLine": 289,
        "endColumn": 19,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (9/7)",
        "message-id": "R0902"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster",
        "obj": "RasterSegment.__init__",
        "line": 308,
        "column": 4,
        "endLine": 308,
        "endColumn": 16,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "keyword-arg-before-vararg",
        "message": "Keyword argument before variable positional arguments list in the definition of __init__ function",
        "message-id": "W1113"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster",
        "obj": "RasterSegment._set_mode",
        "line": 317,
        "column": 22,
        "endLine": 317,
        "endColumn": 71,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster",
        "obj": "RasterSegment._set_mode",
        "line": 317,
        "column": 22,
        "endLine": 317,
        "endColumn": 23,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster",
        "obj": "RasterSegment.__setitem__",
        "line": 327,
        "column": 8,
        "endLine": 340,
        "endColumn": 53,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster",
        "obj": "RasterSegment.__setitem__",
        "line": 337,
        "column": 33,
        "endLine": 337,
        "endColumn": 61,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster",
        "obj": "RasterSegment.__setitem__",
        "line": 337,
        "column": 33,
        "endLine": 337,
        "endColumn": 34,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster",
        "obj": "RasterSegment.open",
        "line": 521,
        "column": 16,
        "endLine": 521,
        "endColumn": 53,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'self.mode in ('w', 'rw')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster",
        "obj": "RasterSegment.open",
        "line": 522,
        "column": 26,
        "endLine": 522,
        "endColumn": 78,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster",
        "obj": "RasterSegment.open",
        "line": 522,
        "column": 26,
        "endLine": 522,
        "endColumn": 27,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster",
        "obj": "RasterSegment.open",
        "line": 526,
        "column": 15,
        "endLine": 526,
        "endColumn": 52,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'self.mode in ('rw', 'r')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster",
        "obj": "RasterSegment.open",
        "line": 552,
        "column": 26,
        "endLine": 552,
        "endColumn": 62,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster",
        "obj": "RasterSegment.open",
        "line": 552,
        "column": 26,
        "endLine": 552,
        "endColumn": 27,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster",
        "obj": "RasterSegment.close",
        "line": 566,
        "column": 11,
        "endLine": 566,
        "endColumn": 48,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'self.mode in ('w', 'rw')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster",
        "obj": "RasterSegment.open",
        "line": 528,
        "column": 16,
        "endLine": 528,
        "endColumn": 27,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute '_gtype' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster",
        "obj": "RasterSegment.open",
        "line": 547,
        "column": 16,
        "endLine": 547,
        "endColumn": 27,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute '_gtype' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster",
        "obj": "RasterSegment.open",
        "line": 555,
        "column": 12,
        "endLine": 555,
        "endColumn": 23,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute '_gtype' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster",
        "obj": "random_map_only_columns",
        "line": 580,
        "column": 0,
        "endLine": 580,
        "endColumn": 27,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster",
        "obj": "random_map_only_columns",
        "line": 582,
        "column": 4,
        "endLine": 582,
        "endColumn": 14,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'random_map' from outer scope (line 600)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster",
        "obj": "random_map",
        "line": 600,
        "column": 0,
        "endLine": 600,
        "endColumn": 14,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster",
        "obj": "random_map",
        "line": 602,
        "column": 4,
        "endLine": 602,
        "endColumn": 14,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'random_map' from outer scope (line 600)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster",
        "obj": "raster2numpy_img",
        "line": 666,
        "column": 4,
        "endLine": 666,
        "endColumn": 29,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (copy.deepcopy)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster",
        "obj": "",
        "line": 725,
        "column": 19,
        "endLine": 725,
        "endColumn": 46,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster",
        "obj": "",
        "line": 735,
        "column": 4,
        "endLine": 735,
        "endColumn": 8,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"cats\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster",
        "obj": "",
        "line": 755,
        "column": 4,
        "endLine": 755,
        "endColumn": 51,
        "path": "python/grass/pygrass/raster/__init__.py",
        "symbol": "pointless-string-statement",
        "message": "String statement has no effect",
        "message-id": "W0105"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.abstract",
        "obj": "",
        "line": 13,
        "column": 0,
        "endLine": 13,
        "endColumn": 30,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.gis'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.abstract",
        "obj": "",
        "line": 13,
        "column": 0,
        "endLine": 13,
        "endColumn": 30,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.abstract",
        "obj": "",
        "line": 14,
        "column": 0,
        "endLine": 14,
        "endColumn": 36,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.raster'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.abstract",
        "obj": "",
        "line": 14,
        "column": 0,
        "endLine": 14,
        "endColumn": 36,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "",
        "line": 32,
        "column": 0,
        "endLine": 32,
        "endColumn": 16,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "invalid-name",
        "message": "Constant name \"test_raster_name\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "Info",
        "line": 46,
        "column": 0,
        "endLine": 46,
        "endColumn": 10,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "Info.read",
        "line": 79,
        "column": 4,
        "endLine": 79,
        "endColumn": 12,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "Info.north",
        "line": 84,
        "column": 4,
        "endLine": 84,
        "endColumn": 13,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "Info.south",
        "line": 88,
        "column": 4,
        "endLine": 88,
        "endColumn": 13,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "Info.east",
        "line": 92,
        "column": 4,
        "endLine": 92,
        "endColumn": 12,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "Info.west",
        "line": 96,
        "column": 4,
        "endLine": 96,
        "endColumn": 12,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "Info.top",
        "line": 100,
        "column": 4,
        "endLine": 100,
        "endColumn": 11,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "Info.bottom",
        "line": 104,
        "column": 4,
        "endLine": 104,
        "endColumn": 14,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "Info.rows",
        "line": 108,
        "column": 4,
        "endLine": 108,
        "endColumn": 12,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "Info.cols",
        "line": 112,
        "column": 4,
        "endLine": 112,
        "endColumn": 12,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "Info.nsres",
        "line": 116,
        "column": 4,
        "endLine": 116,
        "endColumn": 13,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "Info.ewres",
        "line": 120,
        "column": 4,
        "endLine": 120,
        "endColumn": 13,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "Info.tbres",
        "line": 124,
        "column": 4,
        "endLine": 124,
        "endColumn": 13,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "Info.zone",
        "line": 128,
        "column": 4,
        "endLine": 128,
        "endColumn": 12,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "Info.proj",
        "line": 132,
        "column": 4,
        "endLine": 132,
        "endColumn": 12,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "Info.min",
        "line": 136,
        "column": 4,
        "endLine": 136,
        "endColumn": 11,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "Info.max",
        "line": 142,
        "column": 4,
        "endLine": 142,
        "endColumn": 11,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "Info.range",
        "line": 148,
        "column": 4,
        "endLine": 148,
        "endColumn": 13,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "Info.mtype",
        "line": 154,
        "column": 4,
        "endLine": 154,
        "endColumn": 13,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.abstract",
        "obj": "Info._set_semantic_label",
        "line": 176,
        "column": 33,
        "endLine": 176,
        "endColumn": 60,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.abstract",
        "obj": "Info._set_semantic_label",
        "line": 176,
        "column": 33,
        "endLine": 176,
        "endColumn": 34,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "Info.keys",
        "line": 228,
        "column": 4,
        "endLine": 228,
        "endColumn": 12,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "Info.items",
        "line": 249,
        "column": 4,
        "endLine": 249,
        "endColumn": 13,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "Info.items",
        "line": 250,
        "column": 20,
        "endLine": 250,
        "endColumn": 44,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "unnecessary-dunder-call",
        "message": "Unnecessarily calls dunder method __getattribute__. Access attribute directly or use getattr built-in function.",
        "message-id": "C2801"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase",
        "line": 259,
        "column": 0,
        "endLine": 259,
        "endColumn": 24,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (14/7)",
        "message-id": "R0902"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase.__init__",
        "line": 273,
        "column": 4,
        "endLine": 273,
        "endColumn": 16,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "keyword-arg-before-vararg",
        "message": "Keyword argument before variable positional arguments list in the definition of __init__ function",
        "message-id": "W1113"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase.__enter__",
        "line": 314,
        "column": 8,
        "endLine": 314,
        "endColumn": 17,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "no-member",
        "message": "Instance of 'RasterAbstractBase' has no 'open' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase._set_mtype",
        "line": 328,
        "column": 29,
        "endLine": 328,
        "endColumn": 39,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase._set_mtype",
        "line": 328,
        "column": 29,
        "endLine": 328,
        "endColumn": 30,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase._set_mode",
        "line": 339,
        "column": 22,
        "endLine": 339,
        "endColumn": 66,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase._set_mode",
        "line": 339,
        "column": 22,
        "endLine": 339,
        "endColumn": 23,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase._set_overwrite",
        "line": 350,
        "column": 22,
        "endLine": 350,
        "endColumn": 73,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase._set_overwrite",
        "line": 350,
        "column": 22,
        "endLine": 350,
        "endColumn": 23,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase._set_name",
        "line": 363,
        "column": 22,
        "endLine": 363,
        "endColumn": 49,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase._set_name",
        "line": 363,
        "column": 22,
        "endLine": 363,
        "endColumn": 23,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase.__getitem__",
        "line": 393,
        "column": 8,
        "endLine": 412,
        "endColumn": 43,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase.__getitem__",
        "line": 395,
        "column": 20,
        "endLine": 395,
        "endColumn": 32,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "no-member",
        "message": "Instance of 'RasterAbstractBase' has no 'get_row' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase.__getitem__",
        "line": 398,
        "column": 19,
        "endLine": 398,
        "endColumn": 27,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "no-member",
        "message": "Instance of 'RasterAbstractBase' has no 'get' member",
        "message-id": "E1101"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase.__getitem__",
        "line": 406,
        "column": 20,
        "endLine": 406,
        "endColumn": 65,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase.__getitem__",
        "line": 410,
        "column": 19,
        "endLine": 410,
        "endColumn": 31,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "no-member",
        "message": "Instance of 'RasterAbstractBase' has no 'get_row' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase.__getitem__",
        "line": 391,
        "column": 4,
        "endLine": 391,
        "endColumn": 19,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase.exist",
        "line": 431,
        "column": 8,
        "endLine": 438,
        "endColumn": 24,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase.exist",
        "line": 435,
        "column": 23,
        "endLine": 435,
        "endColumn": 48,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "simplifiable-if-expression",
        "message": "The if expression can be replaced with 'bool(test)'",
        "message-id": "R1719"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase.is_open",
        "line": 448,
        "column": 15,
        "endLine": 448,
        "endColumn": 72,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "simplifiable-if-expression",
        "message": "The if expression can be replaced with 'bool(test)'",
        "message-id": "R1719"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase.fullname",
        "line": 467,
        "column": 15,
        "endLine": 467,
        "endColumn": 32,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase.name_mapset",
        "line": 486,
        "column": 8,
        "endLine": 489,
        "endColumn": 23,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase.name_mapset",
        "line": 487,
        "column": 19,
        "endLine": 487,
        "endColumn": 36,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase.set_region_from_rast",
        "line": 510,
        "column": 12,
        "endLine": 510,
        "endColumn": 17,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "misplaced-bare-raise",
        "message": "The raise statement is not inside an except clause",
        "message-id": "E0704"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase.set_region",
        "line": 529,
        "column": 12,
        "endLine": 529,
        "endColumn": 17,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "misplaced-bare-raise",
        "message": "The raise statement is not inside an except clause",
        "message-id": "E0704"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase.get_value",
        "line": 554,
        "column": 15,
        "endLine": 554,
        "endColumn": 27,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "no-member",
        "message": "Instance of 'RasterAbstractBase' has no 'get_row' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase.read_cats",
        "line": 584,
        "column": 8,
        "endLine": 584,
        "endColumn": 28,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "too-many-function-args",
        "message": "Too many positional arguments for method call",
        "message-id": "E1121"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase.write_cats",
        "line": 589,
        "column": 8,
        "endLine": 589,
        "endColumn": 29,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "too-many-function-args",
        "message": "Too many positional arguments for method call",
        "message-id": "E1121"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase._set_mtype",
        "line": 330,
        "column": 8,
        "endLine": 330,
        "endColumn": 19,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute '_gtype' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster.abstract",
        "obj": "RasterAbstractBase",
        "line": 259,
        "column": 0,
        "endLine": 259,
        "endColumn": 24,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "too-many-public-methods",
        "message": "Too many public methods (22/20)",
        "message-id": "R0904"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.abstract",
        "obj": "",
        "line": 631,
        "column": 19,
        "endLine": 631,
        "endColumn": 46,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster.abstract",
        "obj": "",
        "line": 637,
        "column": 4,
        "endLine": 637,
        "endColumn": 51,
        "path": "python/grass/pygrass/raster/abstract.py",
        "symbol": "pointless-string-statement",
        "message": "String statement has no effect",
        "message-id": "W0105"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.buffer",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/raster/buffer.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.buffer",
        "obj": "",
        "line": 3,
        "column": 0,
        "endLine": 3,
        "endColumn": 18,
        "path": "python/grass/pygrass/raster/buffer.py",
        "symbol": "import-error",
        "message": "Unable to import 'numpy'",
        "message-id": "E0401"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster.buffer",
        "obj": "",
        "line": 7,
        "column": 7,
        "endLine": 7,
        "endColumn": 72,
        "path": "python/grass/pygrass/raster/buffer.py",
        "symbol": "consider-using-generator",
        "message": "Consider using a generator instead 'tuple(getattr(np, attr) for attr in _CELL if hasattr(np, attr))'",
        "message-id": "R1728"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster.buffer",
        "obj": "",
        "line": 9,
        "column": 8,
        "endLine": 9,
        "endColumn": 74,
        "path": "python/grass/pygrass/raster/buffer.py",
        "symbol": "consider-using-generator",
        "message": "Consider using a generator instead 'tuple(getattr(np, attr) for attr in _FCELL if hasattr(np, attr))'",
        "message-id": "R1728"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster.buffer",
        "obj": "",
        "line": 11,
        "column": 8,
        "endLine": 11,
        "endColumn": 74,
        "path": "python/grass/pygrass/raster/buffer.py",
        "symbol": "consider-using-generator",
        "message": "Consider using a generator instead 'tuple(getattr(np, attr) for attr in _DCELL if hasattr(np, attr))'",
        "message-id": "R1728"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.buffer",
        "obj": "Buffer.mtype",
        "line": 20,
        "column": 4,
        "endLine": 20,
        "endColumn": 13,
        "path": "python/grass/pygrass/raster/buffer.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster.buffer",
        "obj": "Buffer.mtype",
        "line": 21,
        "column": 8,
        "endLine": 29,
        "endColumn": 45,
        "path": "python/grass/pygrass/raster/buffer.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster.buffer",
        "obj": "Buffer.__new__",
        "line": 31,
        "column": 4,
        "endLine": 31,
        "endColumn": 15,
        "path": "python/grass/pygrass/raster/buffer.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster.buffer",
        "obj": "Buffer.__array_wrap__",
        "line": 47,
        "column": 4,
        "endLine": 47,
        "endColumn": 22,
        "path": "python/grass/pygrass/raster/buffer.py",
        "symbol": "arguments-renamed",
        "message": "Parameter 'obj' has been renamed to 'out_arr' in overriding 'Buffer.__array_wrap__' method",
        "message-id": "W0237"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.buffer",
        "obj": "Buffer.__array_wrap__",
        "line": 55,
        "column": 15,
        "endLine": 55,
        "endColumn": 64,
        "path": "python/grass/pygrass/raster/buffer.py",
        "symbol": "too-many-function-args",
        "message": "Too many positional arguments for unbound method call",
        "message-id": "E1121"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster.buffer",
        "obj": "Buffer.__array_finalize__",
        "line": 44,
        "column": 8,
        "endLine": 44,
        "endColumn": 25,
        "path": "python/grass/pygrass/raster/buffer.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'pointer_type' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster.buffer",
        "obj": "Buffer.__array_finalize__",
        "line": 45,
        "column": 8,
        "endLine": 45,
        "endColumn": 14,
        "path": "python/grass/pygrass/raster/buffer.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'p' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.buffer",
        "obj": "",
        "line": 2,
        "column": 0,
        "endLine": 2,
        "endColumn": 13,
        "path": "python/grass/pygrass/raster/buffer.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"ctypes\" should be placed before first party import \"grass.pygrass.raster.raster_type.TYPE\" ",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.buffer",
        "obj": "",
        "line": 3,
        "column": 0,
        "endLine": 3,
        "endColumn": 18,
        "path": "python/grass/pygrass/raster/buffer.py",
        "symbol": "wrong-import-order",
        "message": "third party import \"numpy\" should be placed before first party import \"grass.pygrass.raster.raster_type.TYPE\" ",
        "message-id": "C0411"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster.category",
        "obj": "",
        "line": 281,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "fixme",
        "message": "TODO: add",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.category",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 10,
        "endColumn": 36,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.raster'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.category",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 10,
        "endColumn": 36,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster.category",
        "obj": "Category.__init__",
        "line": 56,
        "column": 4,
        "endLine": 56,
        "endColumn": 16,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "keyword-arg-before-vararg",
        "message": "Keyword argument before variable positional arguments list in the definition of __init__ function",
        "message-id": "W1113"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.category",
        "obj": "Category._set_mtype",
        "line": 70,
        "column": 29,
        "endLine": 70,
        "endColumn": 78,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.category",
        "obj": "Category._set_mtype",
        "line": 70,
        "column": 29,
        "endLine": 70,
        "endColumn": 30,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.category",
        "obj": "Category._set_mtype",
        "line": 70,
        "column": 31,
        "endLine": 70,
        "endColumn": 63,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster.category",
        "obj": "Category.__dict__",
        "line": 96,
        "column": 14,
        "endLine": 96,
        "endColumn": 20,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "use-dict-literal",
        "message": "Consider using '{}' instead of a call to 'dict'.",
        "message-id": "R1735"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.category",
        "obj": "Category._chk_index",
        "line": 109,
        "column": 11,
        "endLine": 109,
        "endColumn": 29,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "unidiomatic-typecheck",
        "message": "Use isinstance() rather than type() for a typecheck.",
        "message-id": "C0123"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster.category",
        "obj": "Category._chk_index",
        "line": 113,
        "column": 16,
        "endLine": 113,
        "endColumn": 37,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'except ValueError as exc' and 'raise KeyError(index) from exc'",
        "message-id": "W0707"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.category",
        "obj": "Category._chk_value",
        "line": 117,
        "column": 11,
        "endLine": 117,
        "endColumn": 31,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "unidiomatic-typecheck",
        "message": "Use isinstance() rather than type() for a typecheck.",
        "message-id": "C0123"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.category",
        "obj": "Category._get_c_cat",
        "line": 159,
        "column": 29,
        "endLine": 159,
        "endColumn": 67,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.category",
        "obj": "Category._get_c_cat",
        "line": 159,
        "column": 29,
        "endLine": 159,
        "endColumn": 30,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster.category",
        "obj": "Category._set_c_cat",
        "line": 187,
        "column": 8,
        "endLine": 192,
        "endColumn": 64,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.category",
        "obj": "Category._set_c_cat",
        "line": 190,
        "column": 29,
        "endLine": 190,
        "endColumn": 53,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.category",
        "obj": "Category._set_c_cat",
        "line": 190,
        "column": 29,
        "endLine": 190,
        "endColumn": 30,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.category",
        "obj": "Category._set_c_cat",
        "line": 192,
        "column": 29,
        "endLine": 192,
        "endColumn": 63,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.category",
        "obj": "Category._set_c_cat",
        "line": 192,
        "column": 29,
        "endLine": 192,
        "endColumn": 30,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster.category",
        "obj": "Category._set_c_cat",
        "line": 166,
        "column": 4,
        "endLine": 166,
        "endColumn": 18,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.category",
        "obj": "Category.get_cat",
        "line": 197,
        "column": 4,
        "endLine": 197,
        "endColumn": 15,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.category",
        "obj": "Category.get_cat",
        "line": 198,
        "column": 15,
        "endLine": 198,
        "endColumn": 38,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "unnecessary-dunder-call",
        "message": "Unnecessarily calls dunder method __getitem__. Access item via subscript.",
        "message-id": "C2801"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.category",
        "obj": "Category.set_cat",
        "line": 200,
        "column": 4,
        "endLine": 200,
        "endColumn": 15,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.category",
        "obj": "Category.set_cat",
        "line": 203,
        "column": 21,
        "endLine": 203,
        "endColumn": 35,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "unnecessary-dunder-call",
        "message": "Unnecessarily calls dunder method __len__. Use len built-in function.",
        "message-id": "C2801"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.category",
        "obj": "Category.set_cat",
        "line": 204,
        "column": 12,
        "endLine": 204,
        "endColumn": 42,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "unnecessary-dunder-call",
        "message": "Unnecessarily calls dunder method __setitem__. Set item via subscript.",
        "message-id": "C2801"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.category",
        "obj": "Category.reset",
        "line": 208,
        "column": 4,
        "endLine": 208,
        "endColumn": 13,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.category",
        "obj": "Category._write_cats",
        "line": 223,
        "column": 19,
        "endLine": 223,
        "endColumn": 34,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "unnecessary-dunder-call",
        "message": "Unnecessarily calls dunder method __iter__. Use iter built-in function.",
        "message-id": "C2801"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.category",
        "obj": "Category.ncats",
        "line": 274,
        "column": 4,
        "endLine": 274,
        "endColumn": 13,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.category",
        "obj": "Category.ncats",
        "line": 275,
        "column": 15,
        "endLine": 275,
        "endColumn": 29,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "unnecessary-dunder-call",
        "message": "Unnecessarily calls dunder method __len__. Use len built-in function.",
        "message-id": "C2801"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster.category",
        "obj": "Category.set_cats_fmt",
        "line": 277,
        "column": 4,
        "endLine": 277,
        "endColumn": 20,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster.category",
        "obj": "Category.read_rules",
        "line": 301,
        "column": 13,
        "endLine": 301,
        "endColumn": 32,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster.category",
        "obj": "Category.write_rules",
        "line": 328,
        "column": 13,
        "endLine": 328,
        "endColumn": 32,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.category",
        "obj": "Category.write_rules",
        "line": 330,
        "column": 23,
        "endLine": 330,
        "endColumn": 38,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "unnecessary-dunder-call",
        "message": "Unnecessarily calls dunder method __iter__. Use iter built-in function.",
        "message-id": "C2801"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.category",
        "obj": "Category.labels",
        "line": 339,
        "column": 4,
        "endLine": 339,
        "endColumn": 14,
        "path": "python/grass/pygrass/raster/category.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.history",
        "obj": "",
        "line": 8,
        "column": 0,
        "endLine": 8,
        "endColumn": 36,
        "path": "python/grass/pygrass/raster/history.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.raster'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.history",
        "obj": "",
        "line": 8,
        "column": 0,
        "endLine": 8,
        "endColumn": 36,
        "path": "python/grass/pygrass/raster/history.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster.history",
        "obj": "History",
        "line": 14,
        "column": 0,
        "endLine": 14,
        "endColumn": 13,
        "path": "python/grass/pygrass/raster/history.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (12/7)",
        "message-id": "R0902"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster.history",
        "obj": "History.__init__",
        "line": 17,
        "column": 4,
        "endLine": 17,
        "endColumn": 16,
        "path": "python/grass/pygrass/raster/history.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (10/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.history",
        "obj": "History.__repr__",
        "line": 54,
        "column": 15,
        "endLine": 54,
        "endColumn": 28,
        "path": "python/grass/pygrass/raster/history.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.history",
        "obj": "History.__repr__",
        "line": 55,
        "column": 13,
        "endLine": 55,
        "endColumn": 20,
        "path": "python/grass/pygrass/raster/history.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster.history",
        "obj": "History.__del__",
        "line": 60,
        "column": 8,
        "endLine": 60,
        "endColumn": 12,
        "path": "python/grass/pygrass/raster/history.py",
        "symbol": "unnecessary-pass",
        "message": "Unnecessary pass statement",
        "message-id": "W0107"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster.history",
        "obj": "History._get_date",
        "line": 136,
        "column": 4,
        "endLine": 136,
        "endColumn": 17,
        "path": "python/grass/pygrass/raster/history.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster.history",
        "obj": "History._set_date",
        "line": 144,
        "column": 4,
        "endLine": 144,
        "endColumn": 17,
        "path": "python/grass/pygrass/raster/history.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.history",
        "obj": "",
        "line": 9,
        "column": 0,
        "endLine": 9,
        "endColumn": 15,
        "path": "python/grass/pygrass/raster/history.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"datetime\" should be placed before first party import \"grass.lib.raster\" ",
        "message-id": "C0411"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.raster_type",
        "obj": "",
        "line": 7,
        "column": 0,
        "endLine": 7,
        "endColumn": 36,
        "path": "python/grass/pygrass/raster/raster_type.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.raster'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.raster_type",
        "obj": "",
        "line": 7,
        "column": 0,
        "endLine": 7,
        "endColumn": 36,
        "path": "python/grass/pygrass/raster/raster_type.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.raster_type",
        "obj": "",
        "line": 9,
        "column": 0,
        "endLine": 9,
        "endColumn": 18,
        "path": "python/grass/pygrass/raster/raster_type.py",
        "symbol": "import-error",
        "message": "Unable to import 'numpy'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.raster_type",
        "obj": "",
        "line": 8,
        "column": 0,
        "endLine": 8,
        "endColumn": 13,
        "path": "python/grass/pygrass/raster/raster_type.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"ctypes\" should be placed before first party import \"grass.lib.raster\" ",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.raster_type",
        "obj": "",
        "line": 9,
        "column": 0,
        "endLine": 9,
        "endColumn": 18,
        "path": "python/grass/pygrass/raster/raster_type.py",
        "symbol": "wrong-import-order",
        "message": "third party import \"numpy\" should be placed before first party import \"grass.lib.raster\" ",
        "message-id": "C0411"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.rowio",
        "obj": "",
        "line": 9,
        "column": 0,
        "endLine": 9,
        "endColumn": 34,
        "path": "python/grass/pygrass/raster/rowio.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.rowio'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.rowio",
        "obj": "",
        "line": 9,
        "column": 0,
        "endLine": 9,
        "endColumn": 34,
        "path": "python/grass/pygrass/raster/rowio.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.rowio",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 10,
        "endColumn": 34,
        "path": "python/grass/pygrass/raster/rowio.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.raster'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.rowio",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 10,
        "endColumn": 34,
        "path": "python/grass/pygrass/raster/rowio.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.rowio",
        "obj": "getmaprow_CELL",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 18,
        "path": "python/grass/pygrass/raster/rowio.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.rowio",
        "obj": "getmaprow_CELL",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 18,
        "path": "python/grass/pygrass/raster/rowio.py",
        "symbol": "invalid-name",
        "message": "Function name \"getmaprow_CELL\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster.rowio",
        "obj": "getmaprow_CELL",
        "line": 21,
        "column": 33,
        "endLine": 21,
        "endColumn": 34,
        "path": "python/grass/pygrass/raster/rowio.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'l'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.rowio",
        "obj": "getmaprow_FCELL",
        "line": 26,
        "column": 0,
        "endLine": 26,
        "endColumn": 19,
        "path": "python/grass/pygrass/raster/rowio.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.rowio",
        "obj": "getmaprow_FCELL",
        "line": 26,
        "column": 0,
        "endLine": 26,
        "endColumn": 19,
        "path": "python/grass/pygrass/raster/rowio.py",
        "symbol": "invalid-name",
        "message": "Function name \"getmaprow_FCELL\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster.rowio",
        "obj": "getmaprow_FCELL",
        "line": 26,
        "column": 34,
        "endLine": 26,
        "endColumn": 35,
        "path": "python/grass/pygrass/raster/rowio.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'l'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.rowio",
        "obj": "getmaprow_DCELL",
        "line": 31,
        "column": 0,
        "endLine": 31,
        "endColumn": 19,
        "path": "python/grass/pygrass/raster/rowio.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.rowio",
        "obj": "getmaprow_DCELL",
        "line": 31,
        "column": 0,
        "endLine": 31,
        "endColumn": 19,
        "path": "python/grass/pygrass/raster/rowio.py",
        "symbol": "invalid-name",
        "message": "Function name \"getmaprow_DCELL\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster.rowio",
        "obj": "getmaprow_DCELL",
        "line": 31,
        "column": 34,
        "endLine": 31,
        "endColumn": 35,
        "path": "python/grass/pygrass/raster/rowio.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'l'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.rowio",
        "obj": "RowIO",
        "line": 43,
        "column": 0,
        "endLine": 43,
        "endColumn": 11,
        "path": "python/grass/pygrass/raster/rowio.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.rowio",
        "obj": "RowIO.open",
        "line": 52,
        "column": 4,
        "endLine": 52,
        "endColumn": 12,
        "path": "python/grass/pygrass/raster/rowio.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.rowio",
        "obj": "RowIO.release",
        "line": 71,
        "column": 4,
        "endLine": 71,
        "endColumn": 15,
        "path": "python/grass/pygrass/raster/rowio.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.rowio",
        "obj": "RowIO.get",
        "line": 78,
        "column": 4,
        "endLine": 78,
        "endColumn": 11,
        "path": "python/grass/pygrass/raster/rowio.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster.segment",
        "obj": "",
        "line": 88,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/raster/segment.py",
        "symbol": "fixme",
        "message": "TODO: why should I close and then re-open it?",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.segment",
        "obj": "",
        "line": 8,
        "column": 0,
        "endLine": 8,
        "endColumn": 30,
        "path": "python/grass/pygrass/raster/segment.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.gis'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.segment",
        "obj": "",
        "line": 8,
        "column": 0,
        "endLine": 8,
        "endColumn": 30,
        "path": "python/grass/pygrass/raster/segment.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.segment",
        "obj": "",
        "line": 9,
        "column": 0,
        "endLine": 9,
        "endColumn": 36,
        "path": "python/grass/pygrass/raster/segment.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.raster'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.segment",
        "obj": "",
        "line": 9,
        "column": 0,
        "endLine": 9,
        "endColumn": 36,
        "path": "python/grass/pygrass/raster/segment.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.segment",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 10,
        "endColumn": 34,
        "path": "python/grass/pygrass/raster/segment.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.segment'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.raster.segment",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 10,
        "endColumn": 34,
        "path": "python/grass/pygrass/raster/segment.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.segment",
        "obj": "Segment",
        "line": 14,
        "column": 0,
        "endLine": 14,
        "endColumn": 13,
        "path": "python/grass/pygrass/raster/segment.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.segment",
        "obj": "Segment.rows",
        "line": 21,
        "column": 4,
        "endLine": 21,
        "endColumn": 12,
        "path": "python/grass/pygrass/raster/segment.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.segment",
        "obj": "Segment.cols",
        "line": 24,
        "column": 4,
        "endLine": 24,
        "endColumn": 12,
        "path": "python/grass/pygrass/raster/segment.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.segment",
        "obj": "Segment.nseg",
        "line": 27,
        "column": 4,
        "endLine": 27,
        "endColumn": 12,
        "path": "python/grass/pygrass/raster/segment.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.segment",
        "obj": "Segment.segments_in_mem",
        "line": 35,
        "column": 4,
        "endLine": 35,
        "endColumn": 23,
        "path": "python/grass/pygrass/raster/segment.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster.segment",
        "obj": "Segment.format",
        "line": 68,
        "column": 27,
        "endLine": 68,
        "endColumn": 47,
        "path": "python/grass/pygrass/raster/segment.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster.segment",
        "obj": "Segment.format",
        "line": 68,
        "column": 27,
        "endLine": 68,
        "endColumn": 47,
        "path": "python/grass/pygrass/raster/segment.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.raster.segment",
        "obj": "Segment.init",
        "line": 91,
        "column": 4,
        "endLine": 91,
        "endColumn": 12,
        "path": "python/grass/pygrass/raster/segment.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster.segment",
        "obj": "Segment.init",
        "line": 94,
        "column": 27,
        "endLine": 94,
        "endColumn": 47,
        "path": "python/grass/pygrass/raster/segment.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.raster.segment",
        "obj": "Segment.init",
        "line": 94,
        "column": 27,
        "endLine": 94,
        "endColumn": 47,
        "path": "python/grass/pygrass/raster/segment.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.raster.segment",
        "obj": "Segment.open",
        "line": 46,
        "column": 8,
        "endLine": 46,
        "endColumn": 16,
        "path": "python/grass/pygrass/raster/segment.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'val' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "error",
        "module": "grass.pygrass.rpc",
        "obj": "",
        "line": 23,
        "column": 0,
        "endLine": 23,
        "endColumn": 30,
        "path": "python/grass/pygrass/rpc/__init__.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.gis'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.rpc",
        "obj": "",
        "line": 23,
        "column": 0,
        "endLine": 23,
        "endColumn": 30,
        "path": "python/grass/pygrass/rpc/__init__.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc",
        "obj": "RPCDefs",
        "line": 33,
        "column": 0,
        "endLine": 33,
        "endColumn": 13,
        "path": "python/grass/pygrass/rpc/__init__.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.rpc",
        "obj": "RPCDefs",
        "line": 33,
        "column": 0,
        "endLine": 33,
        "endColumn": 13,
        "path": "python/grass/pygrass/rpc/__init__.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc",
        "obj": "_get_raster_image_as_np",
        "line": 60,
        "column": 29,
        "endLine": 60,
        "endColumn": 61,
        "path": "python/grass/pygrass/rpc/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.rpc",
        "obj": "_get_raster_image_as_np",
        "line": 42,
        "column": 28,
        "endLine": 42,
        "endColumn": 32,
        "path": "python/grass/pygrass/rpc/__init__.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'lock'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc",
        "obj": "_get_vector_table_as_dict",
        "line": 106,
        "column": 29,
        "endLine": 106,
        "endColumn": 61,
        "path": "python/grass/pygrass/rpc/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.rpc",
        "obj": "_get_vector_table_as_dict",
        "line": 89,
        "column": 30,
        "endLine": 89,
        "endColumn": 34,
        "path": "python/grass/pygrass/rpc/__init__.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'lock'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc",
        "obj": "_get_vector_features_as_wkb_list",
        "line": 151,
        "column": 29,
        "endLine": 151,
        "endColumn": 61,
        "path": "python/grass/pygrass/rpc/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.rpc",
        "obj": "_get_vector_features_as_wkb_list",
        "line": 127,
        "column": 37,
        "endLine": 127,
        "endColumn": 41,
        "path": "python/grass/pygrass/rpc/__init__.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'lock'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.rpc",
        "obj": "_fatal_error",
        "line": 180,
        "column": 17,
        "endLine": 180,
        "endColumn": 21,
        "path": "python/grass/pygrass/rpc/__init__.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'lock'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.rpc",
        "obj": "_fatal_error",
        "line": 180,
        "column": 23,
        "endLine": 180,
        "endColumn": 27,
        "path": "python/grass/pygrass/rpc/__init__.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'conn'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.rpc",
        "obj": "_fatal_error",
        "line": 180,
        "column": 29,
        "endLine": 180,
        "endColumn": 33,
        "path": "python/grass/pygrass/rpc/__init__.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'data'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.rpc",
        "obj": "_stop",
        "line": 188,
        "column": 22,
        "endLine": 188,
        "endColumn": 26,
        "path": "python/grass/pygrass/rpc/__init__.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'data'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.rpc",
        "obj": "data_provider_server.error_handler",
        "line": 205,
        "column": 22,
        "endLine": 205,
        "endColumn": 26,
        "path": "python/grass/pygrass/rpc/__init__.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'data'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc",
        "obj": "data_provider_server",
        "line": 215,
        "column": 4,
        "endLine": 215,
        "endColumn": 12,
        "path": "python/grass/pygrass/rpc/__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"CALLBACK\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc",
        "obj": "",
        "line": 240,
        "column": 0,
        "endLine": 240,
        "endColumn": 16,
        "path": "python/grass/pygrass/rpc/__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"test_vector_name\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc",
        "obj": "",
        "line": 241,
        "column": 0,
        "endLine": 241,
        "endColumn": 16,
        "path": "python/grass/pygrass/rpc/__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"test_raster_name\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.rpc",
        "obj": "DataProvider.get_vector_features_as_wkb_list",
        "line": 352,
        "column": 4,
        "endLine": 352,
        "endColumn": 39,
        "path": "python/grass/pygrass/rpc/__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc",
        "obj": "",
        "line": 472,
        "column": 19,
        "endLine": 472,
        "endColumn": 46,
        "path": "python/grass/pygrass/rpc/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.rpc",
        "obj": "",
        "line": 479,
        "column": 4,
        "endLine": 479,
        "endColumn": 45,
        "path": "python/grass/pygrass/rpc/__init__.py",
        "symbol": "pointless-string-statement",
        "message": "String statement has no effect",
        "message-id": "W0105"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc",
        "obj": "",
        "line": 25,
        "column": 0,
        "endLine": 25,
        "endColumn": 43,
        "path": "python/grass/pygrass/rpc/__init__.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.pygrass.gis.region.Region\" should be placed before local import \"base.RPCServerBase\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc",
        "obj": "",
        "line": 26,
        "column": 0,
        "endLine": 26,
        "endColumn": 31,
        "path": "python/grass/pygrass/rpc/__init__.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.pygrass.utils\" should be placed before local import \"base.RPCServerBase\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc",
        "obj": "",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 14,
        "path": "python/grass/pygrass/rpc/__init__.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"logging\" should be placed before first party imports \"grass.exceptions.FatalError\", \"grass.pygrass.vector.VectorTopo\", \"grass.pygrass.vector.basic.Bbox\" (...) \"grass.lib.gis\", \"grass.pygrass.gis.region.Region\", \"grass.pygrass.utils\" and local import \"base.RPCServerBase\"",
        "message-id": "C0411"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.rpc.base",
        "obj": "dummy_server",
        "line": 40,
        "column": 12,
        "endLine": 40,
        "endColumn": 79,
        "path": "python/grass/pygrass/rpc/base.py",
        "symbol": "broad-exception-raised",
        "message": "Raising too general exception: Exception",
        "message-id": "W0719"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc.base",
        "obj": "RPCServerBase.__init__",
        "line": 90,
        "column": 8,
        "endLine": 90,
        "endColumn": 24,
        "path": "python/grass/pygrass/rpc/base.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"checkThread\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc.base",
        "obj": "RPCServerBase.__init__",
        "line": 91,
        "column": 8,
        "endLine": 91,
        "endColumn": 23,
        "path": "python/grass/pygrass/rpc/base.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"threadLock\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc.base",
        "obj": "RPCServerBase.__init__",
        "line": 94,
        "column": 8,
        "endLine": 94,
        "endColumn": 23,
        "path": "python/grass/pygrass/rpc/base.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"stopThread\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.rpc.base",
        "obj": "RPCServerBase",
        "line": 44,
        "column": 0,
        "endLine": 44,
        "endColumn": 19,
        "path": "python/grass/pygrass/rpc/base.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (9/7)",
        "message-id": "R0902"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc.base",
        "obj": "RPCServerBase.is_server_alive",
        "line": 98,
        "column": 4,
        "endLine": 98,
        "endColumn": 23,
        "path": "python/grass/pygrass/rpc/base.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc.base",
        "obj": "RPCServerBase.is_check_thread_alive",
        "line": 101,
        "column": 4,
        "endLine": 101,
        "endColumn": 29,
        "path": "python/grass/pygrass/rpc/base.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc.base",
        "obj": "RPCServerBase.start_checker_thread",
        "line": 104,
        "column": 4,
        "endLine": 104,
        "endColumn": 28,
        "path": "python/grass/pygrass/rpc/base.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc.base",
        "obj": "RPCServerBase.stop_checker_thread",
        "line": 113,
        "column": 4,
        "endLine": 113,
        "endColumn": 27,
        "path": "python/grass/pygrass/rpc/base.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.rpc.base",
        "obj": "RPCServerBase.stop_checker_thread",
        "line": 114,
        "column": 8,
        "endLine": 114,
        "endColumn": 33,
        "path": "python/grass/pygrass/rpc/base.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.rpc.base",
        "obj": "RPCServerBase.thread_checker",
        "line": 124,
        "column": 12,
        "endLine": 124,
        "endColumn": 37,
        "path": "python/grass/pygrass/rpc/base.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc.base",
        "obj": "RPCServerBase.check_server",
        "line": 140,
        "column": 4,
        "endLine": 140,
        "endColumn": 20,
        "path": "python/grass/pygrass/rpc/base.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.rpc.base",
        "obj": "RPCServerBase._check_restart_server",
        "line": 147,
        "column": 8,
        "endLine": 147,
        "endColumn": 33,
        "path": "python/grass/pygrass/rpc/base.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.rpc.base",
        "obj": "RPCServerBase._check_restart_server",
        "line": 156,
        "column": 12,
        "endLine": 158,
        "endColumn": 13,
        "path": "python/grass/pygrass/rpc/base.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc.base",
        "obj": "RPCServerBase._check_restart_server",
        "line": 157,
        "column": 16,
        "endLine": 157,
        "endColumn": 65,
        "path": "python/grass/pygrass/rpc/base.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.rpc.base",
        "obj": "RPCServerBase.safe_receive",
        "line": 176,
        "column": 12,
        "endLine": 176,
        "endColumn": 84,
        "path": "python/grass/pygrass/rpc/base.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise FatalError('Exception raised: ' + str(e) + ' Message: ' + message) from e'",
        "message-id": "W0707"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc.base",
        "obj": "",
        "line": 14,
        "column": 0,
        "endLine": 14,
        "endColumn": 11,
        "path": "python/grass/pygrass/rpc/base.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"time\" should be placed before first party import \"grass.exceptions.FatalError\" ",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc.base",
        "obj": "",
        "line": 15,
        "column": 0,
        "endLine": 15,
        "endColumn": 16,
        "path": "python/grass/pygrass/rpc/base.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"threading\" should be placed before first party import \"grass.exceptions.FatalError\" ",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc.base",
        "obj": "",
        "line": 16,
        "column": 0,
        "endLine": 16,
        "endColumn": 10,
        "path": "python/grass/pygrass/rpc/base.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"sys\" should be placed before first party import \"grass.exceptions.FatalError\" ",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc.base",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 47,
        "path": "python/grass/pygrass/rpc/base.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"multiprocessing.Process\" should be placed before first party import \"grass.exceptions.FatalError\" ",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.rpc.base",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 14,
        "path": "python/grass/pygrass/rpc/base.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"logging\" should be placed before first party import \"grass.exceptions.FatalError\" ",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.shell.conversion",
        "obj": "",
        "line": 7,
        "column": 0,
        "endLine": 7,
        "endColumn": 5,
        "path": "python/grass/pygrass/shell/conversion.py",
        "symbol": "invalid-name",
        "message": "Constant name \"dcont\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.shell.conversion",
        "obj": "dict2html",
        "line": 13,
        "column": 0,
        "endLine": 13,
        "endColumn": 13,
        "path": "python/grass/pygrass/shell/conversion.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.shell.conversion",
        "obj": "dict2html",
        "line": 87,
        "column": 13,
        "endLine": 87,
        "endColumn": 32,
        "path": "python/grass/pygrass/shell/conversion.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.shell.conversion",
        "obj": "dict2html",
        "line": 88,
        "column": 9,
        "endLine": 88,
        "endColumn": 22,
        "path": "python/grass/pygrass/shell/conversion.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.shell.conversion",
        "obj": "dict2html",
        "line": 89,
        "column": 9,
        "endLine": 89,
        "endColumn": 22,
        "path": "python/grass/pygrass/shell/conversion.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.shell.show",
        "obj": "raw_figure",
        "line": 8,
        "column": 0,
        "endLine": 8,
        "endColumn": 14,
        "path": "python/grass/pygrass/shell/show.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "",
        "line": 7,
        "column": 0,
        "endLine": 7,
        "endColumn": 15,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "deprecated-module",
        "message": "Deprecated module 'optparse'",
        "message-id": "W4901"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "",
        "line": 19,
        "column": 16,
        "endLine": 19,
        "endColumn": 23,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 30,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.gis'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 30,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "wrong-import-position",
        "message": "Import \"import grass.lib.gis as libgis\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 30,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 36,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.raster'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 36,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "wrong-import-position",
        "message": "Import \"import grass.lib.raster as libraster\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 36,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "",
        "line": 23,
        "column": 0,
        "endLine": 23,
        "endColumn": 27,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "wrong-import-position",
        "message": "Import \"import grass.script as core\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "",
        "line": 24,
        "column": 0,
        "endLine": 24,
        "endColumn": 13,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "wrong-import-position",
        "message": "Import \"import ctypes\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterSegment_value_access__if",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 40,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterSegment_value_access__if",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 40,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "invalid-name",
        "message": "Function name \"test__RasterSegment_value_access__if\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterSegment_value_access__if",
        "line": 28,
        "column": 13,
        "endLine": 28,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterSegment_value_access__if",
        "line": 31,
        "column": 13,
        "endLine": 31,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterSegment_value_access__if",
        "line": 34,
        "column": 13,
        "endLine": 34,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterSegment_value_access__add",
        "line": 45,
        "column": 0,
        "endLine": 45,
        "endColumn": 41,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterSegment_value_access__add",
        "line": 45,
        "column": 0,
        "endLine": 45,
        "endColumn": 41,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "invalid-name",
        "message": "Function name \"test__RasterSegment_value_access__add\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterSegment_value_access__add",
        "line": 46,
        "column": 13,
        "endLine": 46,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterSegment_value_access__add",
        "line": 49,
        "column": 13,
        "endLine": 49,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterSegment_value_access__add",
        "line": 52,
        "column": 13,
        "endLine": 52,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterSegment_value_access__add",
        "line": 55,
        "column": 13,
        "endLine": 55,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterSegment_value_access__add",
        "line": 56,
        "column": 13,
        "endLine": 56,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterSegment_row_access__if",
        "line": 69,
        "column": 0,
        "endLine": 69,
        "endColumn": 38,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterSegment_row_access__if",
        "line": 69,
        "column": 0,
        "endLine": 69,
        "endColumn": 38,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "invalid-name",
        "message": "Function name \"test__RasterSegment_row_access__if\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterSegment_row_access__if",
        "line": 70,
        "column": 13,
        "endLine": 70,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterSegment_row_access__if",
        "line": 73,
        "column": 13,
        "endLine": 73,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterSegment_row_access__if",
        "line": 76,
        "column": 13,
        "endLine": 76,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterSegment_row_access__add",
        "line": 86,
        "column": 0,
        "endLine": 86,
        "endColumn": 39,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterSegment_row_access__add",
        "line": 86,
        "column": 0,
        "endLine": 86,
        "endColumn": 39,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "invalid-name",
        "message": "Function name \"test__RasterSegment_row_access__add\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterSegment_row_access__add",
        "line": 87,
        "column": 13,
        "endLine": 87,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterSegment_row_access__add",
        "line": 90,
        "column": 13,
        "endLine": 90,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterSegment_row_access__add",
        "line": 93,
        "column": 13,
        "endLine": 93,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterSegment_row_access__add",
        "line": 96,
        "column": 13,
        "endLine": 96,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterSegment_row_access__add",
        "line": 97,
        "column": 13,
        "endLine": 97,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_value_access__add",
        "line": 109,
        "column": 0,
        "endLine": 109,
        "endColumn": 37,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_value_access__add",
        "line": 109,
        "column": 0,
        "endLine": 109,
        "endColumn": 37,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "invalid-name",
        "message": "Function name \"test__RasterRow_value_access__add\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_value_access__add",
        "line": 110,
        "column": 13,
        "endLine": 110,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_value_access__add",
        "line": 113,
        "column": 13,
        "endLine": 113,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_value_access__add",
        "line": 116,
        "column": 13,
        "endLine": 116,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_value_access__add",
        "line": 119,
        "column": 13,
        "endLine": 119,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_value_access__add",
        "line": 120,
        "column": 13,
        "endLine": 120,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_value_access__add",
        "line": 121,
        "column": 13,
        "endLine": 121,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_value_access__if",
        "line": 137,
        "column": 0,
        "endLine": 137,
        "endColumn": 36,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_value_access__if",
        "line": 137,
        "column": 0,
        "endLine": 137,
        "endColumn": 36,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "invalid-name",
        "message": "Function name \"test__RasterRow_value_access__if\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_value_access__if",
        "line": 138,
        "column": 13,
        "endLine": 138,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_value_access__if",
        "line": 141,
        "column": 13,
        "endLine": 141,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_value_access__if",
        "line": 144,
        "column": 13,
        "endLine": 144,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_value_access__if",
        "line": 145,
        "column": 13,
        "endLine": 145,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRowIO_row_access__add",
        "line": 159,
        "column": 0,
        "endLine": 159,
        "endColumn": 37,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRowIO_row_access__add",
        "line": 159,
        "column": 0,
        "endLine": 159,
        "endColumn": 37,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "invalid-name",
        "message": "Function name \"test__RasterRowIO_row_access__add\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRowIO_row_access__add",
        "line": 160,
        "column": 13,
        "endLine": 160,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRowIO_row_access__add",
        "line": 163,
        "column": 13,
        "endLine": 163,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRowIO_row_access__add",
        "line": 166,
        "column": 13,
        "endLine": 166,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRowIO_row_access__add",
        "line": 169,
        "column": 13,
        "endLine": 169,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRowIO_row_access__add",
        "line": 170,
        "column": 13,
        "endLine": 170,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRowIO_row_access__if",
        "line": 182,
        "column": 0,
        "endLine": 182,
        "endColumn": 36,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRowIO_row_access__if",
        "line": 182,
        "column": 0,
        "endLine": 182,
        "endColumn": 36,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "invalid-name",
        "message": "Function name \"test__RasterRowIO_row_access__if\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRowIO_row_access__if",
        "line": 183,
        "column": 13,
        "endLine": 183,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRowIO_row_access__if",
        "line": 186,
        "column": 13,
        "endLine": 186,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRowIO_row_access__if",
        "line": 189,
        "column": 13,
        "endLine": 189,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_row_access__add",
        "line": 199,
        "column": 0,
        "endLine": 199,
        "endColumn": 35,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_row_access__add",
        "line": 199,
        "column": 0,
        "endLine": 199,
        "endColumn": 35,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "invalid-name",
        "message": "Function name \"test__RasterRow_row_access__add\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_row_access__add",
        "line": 200,
        "column": 13,
        "endLine": 200,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_row_access__add",
        "line": 203,
        "column": 13,
        "endLine": 203,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_row_access__add",
        "line": 206,
        "column": 13,
        "endLine": 206,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_row_access__add",
        "line": 209,
        "column": 13,
        "endLine": 209,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_row_access__add",
        "line": 210,
        "column": 13,
        "endLine": 210,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_row_access__if",
        "line": 222,
        "column": 0,
        "endLine": 222,
        "endColumn": 34,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_row_access__if",
        "line": 222,
        "column": 0,
        "endLine": 222,
        "endColumn": 34,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "invalid-name",
        "message": "Function name \"test__RasterRow_row_access__if\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_row_access__if",
        "line": 223,
        "column": 13,
        "endLine": 223,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_row_access__if",
        "line": 226,
        "column": 13,
        "endLine": 226,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__RasterRow_row_access__if",
        "line": 229,
        "column": 13,
        "endLine": 229,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pygrass'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__mapcalc__add",
        "line": 239,
        "column": 0,
        "endLine": 239,
        "endColumn": 22,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "test__mapcalc__if",
        "line": 243,
        "column": 0,
        "endLine": 243,
        "endColumn": 21,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "mytimer",
        "line": 247,
        "column": 0,
        "endLine": 247,
        "endColumn": 11,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "run_benchmark",
        "line": 260,
        "column": 0,
        "endLine": 260,
        "endColumn": 17,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "run_benchmark",
        "line": 260,
        "column": 41,
        "endLine": 260,
        "endColumn": 49,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'testdict' from outer scope (line 490)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "run_benchmark",
        "line": 297,
        "column": 31,
        "endLine": 297,
        "endColumn": 44,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "run_benchmark",
        "line": 304,
        "column": 22,
        "endLine": 304,
        "endColumn": 44,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "get_testlist",
        "line": 313,
        "column": 0,
        "endLine": 313,
        "endColumn": 16,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "get_testlist",
        "line": 313,
        "column": 17,
        "endLine": 313,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'loc' from outer scope (line 488)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "get_testlist",
        "line": 314,
        "column": 4,
        "endLine": 314,
        "endColumn": 12,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'testlist' from outer scope (line 489)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "get_testdict",
        "line": 319,
        "column": 0,
        "endLine": 319,
        "endColumn": 16,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "get_testdict",
        "line": 319,
        "column": 17,
        "endLine": 319,
        "endColumn": 25,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'testlist' from outer scope (line 489)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "get_testdict",
        "line": 320,
        "column": 4,
        "endLine": 320,
        "endColumn": 12,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'testdict' from outer scope (line 490)",
        "message-id": "W0621"
    },
    {
        "type": "error",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "get_testdict",
        "line": 326,
        "column": 52,
        "endLine": 326,
        "endColumn": 55,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'loc' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "print_test",
        "line": 334,
        "column": 0,
        "endLine": 334,
        "endColumn": 14,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "print_test",
        "line": 334,
        "column": 15,
        "endLine": 334,
        "endColumn": 23,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'testdict' from outer scope (line 490)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "print_test",
        "line": 339,
        "column": 21,
        "endLine": 339,
        "endColumn": 26,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'value'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "get_txt",
        "line": 372,
        "column": 0,
        "endLine": 372,
        "endColumn": 11,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "",
        "line": 378,
        "column": 0,
        "endLine": 378,
        "endColumn": 11,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "invalid-name",
        "message": "Constant name \"strREQUIRED\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "OptionWithDefault",
        "line": 381,
        "column": 0,
        "endLine": 381,
        "endColumn": 23,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "OptionParser",
        "line": 390,
        "column": 0,
        "endLine": 390,
        "endColumn": 18,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "OptionParser.check_values",
        "line": 399,
        "column": 31,
        "endLine": 399,
        "endColumn": 54,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "main",
        "line": 403,
        "column": 9,
        "endLine": 403,
        "endColumn": 17,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'testdict' from outer scope (line 490)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "main",
        "line": 476,
        "column": 8,
        "endLine": 476,
        "endColumn": 21,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (pickle)",
        "message-id": "C0415"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "main",
        "line": 478,
        "column": 17,
        "endLine": 478,
        "endColumn": 42,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "main",
        "line": 469,
        "column": 13,
        "endLine": 469,
        "endColumn": 17,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'args'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.benchmark",
        "obj": "",
        "line": 24,
        "column": 0,
        "endLine": 24,
        "endColumn": 13,
        "path": "python/grass/pygrass/tests/benchmark.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"ctypes\" should be placed before third party import \"jinja2.Template\" and first party imports \"grass.lib.gis\", \"grass.lib.raster\", \"grass.script\" ",
        "message-id": "C0411"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.tests.set_mapset",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 10,
        "endColumn": 15,
        "path": "python/grass/pygrass/tests/set_mapset.py",
        "symbol": "deprecated-module",
        "message": "Deprecated module 'optparse'",
        "message-id": "W4901"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.set_mapset",
        "obj": "read_gisrc",
        "line": 15,
        "column": 0,
        "endLine": 15,
        "endColumn": 14,
        "path": "python/grass/pygrass/tests/set_mapset.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.tests.set_mapset",
        "obj": "read_gisrc",
        "line": 16,
        "column": 12,
        "endLine": 16,
        "endColumn": 32,
        "path": "python/grass/pygrass/tests/set_mapset.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.tests.set_mapset",
        "obj": "read_gisrc",
        "line": 16,
        "column": 12,
        "endLine": 16,
        "endColumn": 32,
        "path": "python/grass/pygrass/tests/set_mapset.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.set_mapset",
        "obj": "main",
        "line": 24,
        "column": 0,
        "endLine": 24,
        "endColumn": 8,
        "path": "python/grass/pygrass/tests/set_mapset.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.set_mapset",
        "obj": "main",
        "line": 57,
        "column": 10,
        "endLine": 57,
        "endColumn": 40,
        "path": "python/grass/pygrass/tests/set_mapset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.set_mapset",
        "obj": "main",
        "line": 61,
        "column": 8,
        "endLine": 61,
        "endColumn": 20,
        "path": "python/grass/pygrass/tests/set_mapset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.set_mapset",
        "obj": "main",
        "line": 63,
        "column": 8,
        "endLine": 63,
        "endColumn": 23,
        "path": "python/grass/pygrass/tests/set_mapset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.set_mapset",
        "obj": "main",
        "line": 68,
        "column": 24,
        "endLine": 68,
        "endColumn": 39,
        "path": "python/grass/pygrass/tests/set_mapset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.tests.set_mapset",
        "obj": "main",
        "line": 71,
        "column": 4,
        "endLine": 71,
        "endColumn": 30,
        "path": "python/grass/pygrass/tests/set_mapset.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.tests.set_mapset",
        "obj": "main",
        "line": 78,
        "column": 44,
        "endLine": 78,
        "endColumn": 70,
        "path": "python/grass/pygrass/tests/set_mapset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.tests.set_mapset",
        "obj": "main",
        "line": 53,
        "column": 11,
        "endLine": 53,
        "endColumn": 15,
        "path": "python/grass/pygrass/tests/set_mapset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'args'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.__init__",
        "obj": "",
        "line": 817,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.__init__",
        "obj": "",
        "line": 202,
        "column": 13,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "fixme",
        "message": "TODO: this does not work as expected when there are",
        "message-id": "W0511"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector",
        "obj": "",
        "line": 2,
        "column": 0,
        "endLine": 2,
        "endColumn": 30,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.gis'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector",
        "obj": "",
        "line": 2,
        "column": 0,
        "endLine": 2,
        "endColumn": 30,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": 6,
        "endColumn": 34,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.vector'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": 6,
        "endColumn": 34,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"import grass.lib.vector as libvect\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": 6,
        "endColumn": 34,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "",
        "line": 7,
        "column": 0,
        "endLine": 7,
        "endColumn": 13,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"import ctypes\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 10,
        "endColumn": 50,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from grass.pygrass.vector.vector_type import VTYPE\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "",
        "line": 11,
        "column": 0,
        "endLine": 11,
        "endColumn": 57,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from grass.pygrass.errors import GrassError, must_be_open\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "",
        "line": 12,
        "column": 0,
        "endLine": 12,
        "endColumn": 38,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from grass.pygrass.gis import Location\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "",
        "line": 14,
        "column": 0,
        "endLine": 14,
        "endColumn": 59,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from grass.pygrass.vector.geometry import GEOOBJ as _GEOOBJ\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "",
        "line": 15,
        "column": 0,
        "endLine": 15,
        "endColumn": 67,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from grass.pygrass.vector.geometry import read_line, read_next_line\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "",
        "line": 16,
        "column": 0,
        "endLine": 16,
        "endColumn": 55,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from grass.pygrass.vector.geometry import Area as _Area\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 46,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from grass.pygrass.vector.abstract import Info\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 56,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from grass.pygrass.vector.basic import Bbox, Cats, Ilist\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "",
        "line": 39,
        "column": 0,
        "endLine": 39,
        "endColumn": 16,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"test_vector_name\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector",
        "obj": "Vector.__init__",
        "line": 62,
        "column": 4,
        "endLine": 62,
        "endColumn": 16,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "keyword-arg-before-vararg",
        "message": "Keyword argument before variable positional arguments list in the definition of __init__ function",
        "message-id": "W1113"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector",
        "obj": "Vector.__repr__",
        "line": 71,
        "column": 8,
        "endLine": 74,
        "endColumn": 59,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "Vector.__repr__",
        "line": 72,
        "column": 19,
        "endLine": 72,
        "endColumn": 31,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "Vector.__repr__",
        "line": 74,
        "column": 19,
        "endLine": 74,
        "endColumn": 27,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "Vector.next",
        "line": 110,
        "column": 4,
        "endLine": 110,
        "endColumn": 12,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "Vector.next",
        "line": 111,
        "column": 15,
        "endLine": 111,
        "endColumn": 30,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "unnecessary-dunder-call",
        "message": "Unnecessarily calls dunder method __next__. Use next built-in function.",
        "message-id": "C2801"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "Vector.write",
        "line": 191,
        "column": 12,
        "endLine": 191,
        "endColumn": 27,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (warnings)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector",
        "obj": "Vector.write",
        "line": 223,
        "column": 21,
        "endLine": 223,
        "endColumn": 37,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "no-member",
        "message": "Instance of 'Vector' has no '_write_area' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector",
        "obj": "Vector.has_color_table",
        "line": 261,
        "column": 15,
        "endLine": 261,
        "endColumn": 46,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "simplifiable-if-expression",
        "message": "The if expression can be replaced with 'bool(test)'",
        "message-id": "R1719"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.__init__",
        "line": 290,
        "column": 4,
        "endLine": 290,
        "endColumn": 16,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "keyword-arg-before-vararg",
        "message": "Keyword argument before variable positional arguments list in the definition of __init__ function",
        "message-id": "W1113"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.__getitem__",
        "line": 309,
        "column": 8,
        "endLine": 321,
        "endColumn": 64,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.__getitem__",
        "line": 321,
        "column": 29,
        "endLine": 321,
        "endColumn": 57,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.number_of",
        "line": 391,
        "column": 20,
        "endLine": 391,
        "endColumn": 33,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.number_of",
        "line": 392,
        "column": 12,
        "endLine": 396,
        "endColumn": 52,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.number_of",
        "line": 399,
        "column": 29,
        "endLine": 399,
        "endColumn": 68,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.num_primitives",
        "line": 405,
        "column": 20,
        "endLine": 405,
        "endColumn": 32,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.viter",
        "line": 450,
        "column": 8,
        "endLine": 450,
        "endColumn": 12,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"is2D\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.viter",
        "line": 451,
        "column": 20,
        "endLine": 451,
        "endColumn": 34,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.viter",
        "line": 468,
        "column": 29,
        "endLine": 468,
        "endColumn": 68,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.viter",
        "line": 410,
        "column": 4,
        "endLine": 410,
        "endColumn": 13,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.cat",
        "line": 492,
        "column": 4,
        "endLine": 492,
        "endColumn": 11,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.cat",
        "line": 507,
        "column": 29,
        "endLine": 507,
        "endColumn": 68,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.cat",
        "line": 508,
        "column": 8,
        "endLine": 508,
        "endColumn": 11,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"Obj\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.cat",
        "line": 517,
        "column": 8,
        "endLine": 517,
        "endColumn": 12,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"is2D\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.cat",
        "line": 518,
        "column": 8,
        "endLine": 539,
        "endColumn": 13,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.rewrite",
        "line": 641,
        "column": 16,
        "endLine": 642,
        "endColumn": 25,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.rewrite",
        "line": 591,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'kargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.restore",
        "line": 665,
        "column": 4,
        "endLine": 665,
        "endColumn": 15,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.features_to_wkb_list",
        "line": 740,
        "column": 4,
        "endLine": 740,
        "endColumn": 28,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.features_to_wkb_list",
        "line": 827,
        "column": 16,
        "endLine": 828,
        "endColumn": 36,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.features_to_wkb_list",
        "line": 858,
        "column": 28,
        "endLine": 858,
        "endColumn": 75,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.features_to_wkb_list",
        "line": 858,
        "column": 28,
        "endLine": 858,
        "endColumn": 29,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.features_to_wkb_list",
        "line": 858,
        "column": 30,
        "endLine": 858,
        "endColumn": 65,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.features_to_wkb_list",
        "line": 861,
        "column": 30,
        "endLine": 861,
        "endColumn": 48,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.areas_to_wkb_list",
        "line": 950,
        "column": 37,
        "endLine": 950,
        "endColumn": 81,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.areas_to_wkb_list",
        "line": 950,
        "column": 37,
        "endLine": 950,
        "endColumn": 38,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "VectorTopo.areas_to_wkb_list",
        "line": 950,
        "column": 39,
        "endLine": 950,
        "endColumn": 71,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector",
        "obj": "",
        "line": 977,
        "column": 4,
        "endLine": 977,
        "endColumn": 51,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "pointless-string-statement",
        "message": "String statement has no effect",
        "message-id": "W0105"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector",
        "obj": "",
        "line": 7,
        "column": 0,
        "endLine": 7,
        "endColumn": 13,
        "path": "python/grass/pygrass/vector/__init__.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"ctypes\" should be placed before first party imports \"grass.lib.gis\", \"grass.lib.vector\" ",
        "message-id": "C0411"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.abstract",
        "obj": "",
        "line": 9,
        "column": 0,
        "endLine": 9,
        "endColumn": 34,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.vector'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.abstract",
        "obj": "",
        "line": 9,
        "column": 0,
        "endLine": 9,
        "endColumn": 34,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.abstract",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 16,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "invalid-name",
        "message": "Constant name \"test_vector_name\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.abstract",
        "obj": "is_open",
        "line": 24,
        "column": 8,
        "endLine": 25,
        "endColumn": 63,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'c_mapinfo.contents.open not in (0, libvect.VECT_CLOSED_CODE)'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info",
        "line": 34,
        "column": 0,
        "endLine": 34,
        "endColumn": 10,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (22/7)",
        "message-id": "R0902"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.__init__",
        "line": 74,
        "column": 4,
        "endLine": 74,
        "endColumn": 16,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "keyword-arg-before-vararg",
        "message": "Keyword argument before variable positional arguments list in the definition of __init__ function",
        "message-id": "W1113"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info._set_mode",
        "line": 101,
        "column": 22,
        "endLine": 101,
        "endColumn": 66,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info._set_mode",
        "line": 101,
        "column": 22,
        "endLine": 101,
        "endColumn": 23,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info._set_name",
        "line": 114,
        "column": 22,
        "endLine": 114,
        "endColumn": 49,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info._set_name",
        "line": 114,
        "column": 22,
        "endLine": 114,
        "endColumn": 23,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.is_3D",
        "line": 293,
        "column": 4,
        "endLine": 293,
        "endColumn": 13,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "invalid-name",
        "message": "Method name \"is_3D\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.exist",
        "line": 299,
        "column": 8,
        "endLine": 306,
        "endColumn": 24,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.exist",
        "line": 303,
        "column": 23,
        "endLine": 303,
        "endColumn": 48,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "simplifiable-if-expression",
        "message": "The if expression can be replaced with 'bool(test)'",
        "message-id": "R1719"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.open",
        "line": 312,
        "column": 4,
        "endLine": 312,
        "endColumn": 12,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (11/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.open",
        "line": 312,
        "column": 4,
        "endLine": 312,
        "endColumn": 12,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (17/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.open",
        "line": 365,
        "column": 28,
        "endLine": 365,
        "endColumn": 49,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.open",
        "line": 413,
        "column": 11,
        "endLine": 413,
        "endColumn": 19,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'openvect' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.open",
        "line": 426,
        "column": 20,
        "endLine": 426,
        "endColumn": 80,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.open",
        "line": 431,
        "column": 20,
        "endLine": 431,
        "endColumn": 81,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.open",
        "line": 439,
        "column": 20,
        "endLine": 439,
        "endColumn": 78,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.open",
        "line": 312,
        "column": 4,
        "endLine": 312,
        "endColumn": 12,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (14/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.close",
        "line": 468,
        "column": 16,
        "endLine": 469,
        "endColumn": 72,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'self.c_mapinfo.contents.mode in (libvect.GV_MODE_RW, libvect.GV_MODE_WRITE)'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.open",
        "line": 388,
        "column": 12,
        "endLine": 388,
        "endColumn": 24,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'dblinks' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.open",
        "line": 393,
        "column": 12,
        "endLine": 393,
        "endColumn": 24,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'dblinks' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.open",
        "line": 419,
        "column": 12,
        "endLine": 419,
        "endColumn": 22,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'layer' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.open",
        "line": 434,
        "column": 12,
        "endLine": 434,
        "endColumn": 22,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'layer' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.open",
        "line": 420,
        "column": 12,
        "endLine": 420,
        "endColumn": 22,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'table' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.open",
        "line": 436,
        "column": 16,
        "endLine": 436,
        "endColumn": 26,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'table' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.open",
        "line": 421,
        "column": 12,
        "endLine": 421,
        "endColumn": 24,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'n_lines' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.open",
        "line": 442,
        "column": 12,
        "endLine": 442,
        "endColumn": 24,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'n_lines' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.open",
        "line": 444,
        "column": 8,
        "endLine": 444,
        "endColumn": 22,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'writeable' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.open",
        "line": 446,
        "column": 8,
        "endLine": 446,
        "endColumn": 17,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'find' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.open",
        "line": 451,
        "column": 8,
        "endLine": 451,
        "endColumn": 26,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'find_by_point' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.open",
        "line": 452,
        "column": 8,
        "endLine": 452,
        "endColumn": 25,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'find_by_bbox' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.abstract",
        "obj": "Info.open",
        "line": 453,
        "column": 8,
        "endLine": 453,
        "endColumn": 28,
        "path": "python/grass/pygrass/vector/abstract.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'find_by_polygon' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.basic",
        "obj": "",
        "line": 248,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "fixme",
        "message": "# FIXME: doesn't work",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.basic",
        "obj": "",
        "line": 342,
        "column": 20,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "fixme",
        "message": "TODO",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.basic",
        "obj": "",
        "line": 568,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "fixme",
        "message": "TODO: it's not working",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.basic",
        "obj": "",
        "line": 8,
        "column": 0,
        "endLine": 8,
        "endColumn": 34,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.vector'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.basic",
        "obj": "",
        "line": 8,
        "column": 0,
        "endLine": 8,
        "endColumn": 34,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.basic",
        "obj": "Bbox.__init__",
        "line": 42,
        "column": 4,
        "endLine": 42,
        "endColumn": 16,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.basic",
        "obj": "Bbox.__repr__",
        "line": 112,
        "column": 15,
        "endLine": 112,
        "endColumn": 41,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.basic",
        "obj": "Bbox.keys",
        "line": 119,
        "column": 4,
        "endLine": 119,
        "endColumn": 12,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.basic",
        "obj": "Bbox.items",
        "line": 141,
        "column": 4,
        "endLine": 141,
        "endColumn": 13,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.basic",
        "obj": "Bbox.items",
        "line": 142,
        "column": 20,
        "endLine": 142,
        "endColumn": 44,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "unnecessary-dunder-call",
        "message": "Unnecessarily calls dunder method __getattribute__. Access attribute directly or use getattr built-in function.",
        "message-id": "C2801"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.basic",
        "obj": "Bbox.nsewtb",
        "line": 152,
        "column": 8,
        "endLine": 155,
        "endColumn": 65,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.basic",
        "obj": "BoxList.ids",
        "line": 170,
        "column": 4,
        "endLine": 170,
        "endColumn": 11,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.basic",
        "obj": "BoxList.n_values",
        "line": 174,
        "column": 4,
        "endLine": 174,
        "endColumn": 16,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.basic",
        "obj": "BoxList.have_boxes",
        "line": 177,
        "column": 4,
        "endLine": 177,
        "endColumn": 18,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.basic",
        "obj": "BoxList.__repr__",
        "line": 184,
        "column": 15,
        "endLine": 184,
        "endColumn": 30,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.basic",
        "obj": "BoxList.append",
        "line": 220,
        "column": 15,
        "endLine": 220,
        "endColumn": 29,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "unnecessary-dunder-call",
        "message": "Unnecessarily calls dunder method __len__. Use len built-in function.",
        "message-id": "C2801"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.basic",
        "obj": "Ilist.__getitem__",
        "line": 306,
        "column": 8,
        "endLine": 320,
        "endColumn": 64,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.basic",
        "obj": "Ilist.__getitem__",
        "line": 320,
        "column": 29,
        "endLine": 320,
        "endColumn": 57,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.basic",
        "obj": "Ilist.__repr__",
        "line": 334,
        "column": 15,
        "endLine": 334,
        "endColumn": 26,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.basic",
        "obj": "Ilist.__repr__",
        "line": 334,
        "column": 29,
        "endLine": 334,
        "endColumn": 57,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "unnecessary-comprehension",
        "message": "Unnecessary use of a comprehension, use list(self.__iter__()) instead.",
        "message-id": "R1721"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.basic",
        "obj": "Ilist.append",
        "line": 342,
        "column": 12,
        "endLine": 342,
        "endColumn": 17,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "misplaced-bare-raise",
        "message": "The raise statement is not inside an except clause",
        "message-id": "E0704"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.basic",
        "obj": "Ilist.remove",
        "line": 371,
        "column": 29,
        "endLine": 371,
        "endColumn": 58,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.basic",
        "obj": "Cats.layer",
        "line": 412,
        "column": 4,
        "endLine": 412,
        "endColumn": 13,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.basic",
        "obj": "Cats.cat",
        "line": 417,
        "column": 4,
        "endLine": 417,
        "endColumn": 11,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.basic",
        "obj": "Cats.delete",
        "line": 470,
        "column": 22,
        "endLine": 470,
        "endColumn": 48,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.basic",
        "obj": "Cats.get_list",
        "line": 494,
        "column": 29,
        "endLine": 494,
        "endColumn": 55,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.basic",
        "obj": "Cats.delete",
        "line": 465,
        "column": 12,
        "endLine": 465,
        "endColumn": 22,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'n_del' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.basic",
        "obj": "Cats.delete",
        "line": 469,
        "column": 12,
        "endLine": 469,
        "endColumn": 22,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'n_del' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.basic",
        "obj": "CatsList.from_string",
        "line": 557,
        "column": 12,
        "endLine": 557,
        "endColumn": 55,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (grass.pygrass.errors.GrassError)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.basic",
        "obj": "CatsList.from_string",
        "line": 559,
        "column": 29,
        "endLine": 559,
        "endColumn": 60,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.basic",
        "obj": "",
        "line": 9,
        "column": 0,
        "endLine": 9,
        "endColumn": 36,
        "path": "python/grass/pygrass/vector/basic.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"collections.abc.Iterable\" should be placed before first party import \"grass.lib.vector\" ",
        "message-id": "C0411"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.find",
        "obj": "",
        "line": 7,
        "column": 0,
        "endLine": 7,
        "endColumn": 34,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.vector'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.find",
        "obj": "",
        "line": 7,
        "column": 0,
        "endLine": 7,
        "endColumn": 34,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.find",
        "obj": "",
        "line": 15,
        "column": 0,
        "endLine": 15,
        "endColumn": 16,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "invalid-name",
        "message": "Constant name \"test_vector_name\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.find",
        "obj": "AbstractFinder",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 20,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.find",
        "obj": "AbstractFinder.is_open",
        "line": 38,
        "column": 8,
        "endLine": 38,
        "endColumn": 30,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (.abstract)",
        "message-id": "C0415"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.find",
        "obj": "AbstractFinder",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 20,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.find",
        "obj": "PointFinder.__init__",
        "line": 51,
        "column": 4,
        "endLine": 51,
        "endColumn": 16,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "useless-parent-delegation",
        "message": "Useless parent or super() delegation in method '__init__'",
        "message-id": "W0246"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.find",
        "obj": "PointFinder.node",
        "line": 66,
        "column": 4,
        "endLine": 66,
        "endColumn": 12,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.find",
        "obj": "PointFinder.geo",
        "line": 117,
        "column": 34,
        "endLine": 117,
        "endColumn": 38,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.find",
        "obj": "PointFinder.geo",
        "line": 117,
        "column": 4,
        "endLine": 117,
        "endColumn": 11,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.find",
        "obj": "PointFinder.geos",
        "line": 179,
        "column": 35,
        "endLine": 179,
        "endColumn": 39,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.find",
        "obj": "PointFinder.geos",
        "line": 179,
        "column": 4,
        "endLine": 179,
        "endColumn": 12,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.find",
        "obj": "PointFinder.area",
        "line": 273,
        "column": 4,
        "endLine": 273,
        "endColumn": 12,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.find",
        "obj": "PointFinder.island",
        "line": 344,
        "column": 4,
        "endLine": 344,
        "endColumn": 14,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.find",
        "obj": "BboxFinder.__init__",
        "line": 400,
        "column": 4,
        "endLine": 400,
        "endColumn": 16,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "useless-parent-delegation",
        "message": "Useless parent or super() delegation in method '__init__'",
        "message-id": "W0246"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.find",
        "obj": "BboxFinder.geos",
        "line": 416,
        "column": 25,
        "endLine": 416,
        "endColumn": 29,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.find",
        "obj": "BboxFinder.geos",
        "line": 491,
        "column": 12,
        "endLine": 497,
        "endColumn": 17,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.find",
        "obj": "BboxFinder.geos",
        "line": 416,
        "column": 4,
        "endLine": 416,
        "endColumn": 12,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.find",
        "obj": "BboxFinder.nodes",
        "line": 500,
        "column": 4,
        "endLine": 500,
        "endColumn": 13,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.find",
        "obj": "BboxFinder.areas",
        "line": 593,
        "column": 12,
        "endLine": 604,
        "endColumn": 17,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.find",
        "obj": "BboxFinder.areas",
        "line": 542,
        "column": 4,
        "endLine": 542,
        "endColumn": 13,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.find",
        "obj": "BboxFinder.islands",
        "line": 653,
        "column": 12,
        "endLine": 664,
        "endColumn": 17,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.find",
        "obj": "BboxFinder.islands",
        "line": 607,
        "column": 4,
        "endLine": 607,
        "endColumn": 15,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.find",
        "obj": "PolygonFinder",
        "line": 667,
        "column": 0,
        "endLine": 667,
        "endColumn": 19,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.find",
        "obj": "PolygonFinder.__init__",
        "line": 668,
        "column": 4,
        "endLine": 668,
        "endColumn": 16,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "useless-parent-delegation",
        "message": "Useless parent or super() delegation in method '__init__'",
        "message-id": "W0246"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.find",
        "obj": "PolygonFinder.lines",
        "line": 671,
        "column": 4,
        "endLine": 671,
        "endColumn": 13,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.find",
        "obj": "PolygonFinder.areas",
        "line": 674,
        "column": 4,
        "endLine": 674,
        "endColumn": 13,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.find",
        "obj": "",
        "line": 685,
        "column": 4,
        "endLine": 685,
        "endColumn": 51,
        "path": "python/grass/pygrass/vector/find.py",
        "symbol": "pointless-string-statement",
        "message": "String statement has no effect",
        "message-id": "W0105"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1980/1000)",
        "message-id": "C0302"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.geometry",
        "obj": "",
        "line": 664,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "fixme",
        "message": "TODO:",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.geometry",
        "obj": "",
        "line": 942,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "fixme",
        "message": "TODO: add this method.",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.geometry",
        "obj": "",
        "line": 11,
        "column": 0,
        "endLine": 11,
        "endColumn": 18,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "import-error",
        "message": "Unable to import 'numpy'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.geometry",
        "obj": "",
        "line": 13,
        "column": 0,
        "endLine": 13,
        "endColumn": 30,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.gis'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.geometry",
        "obj": "",
        "line": 13,
        "column": 0,
        "endLine": 13,
        "endColumn": 30,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.geometry",
        "obj": "",
        "line": 14,
        "column": 0,
        "endLine": 14,
        "endColumn": 34,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.vector'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.geometry",
        "obj": "",
        "line": 14,
        "column": 0,
        "endLine": 14,
        "endColumn": 34,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "",
        "line": 23,
        "column": 0,
        "endLine": 23,
        "endColumn": 16,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "invalid-name",
        "message": "Constant name \"test_vector_name\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "read_WKT",
        "line": 33,
        "column": 0,
        "endLine": 33,
        "endColumn": 12,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "invalid-name",
        "message": "Function name \"read_WKT\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.geometry",
        "obj": "read_WKT",
        "line": 77,
        "column": 19,
        "endLine": 77,
        "endColumn": 27,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "not-callable",
        "message": "obj is not callable",
        "message-id": "E1102"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "read_WKT",
        "line": 33,
        "column": 0,
        "endLine": 33,
        "endColumn": 12,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "read_WKB",
        "line": 80,
        "column": 0,
        "endLine": 80,
        "endColumn": 12,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "invalid-name",
        "message": "Function name \"read_WKB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.geometry",
        "obj": "read_WKB",
        "line": 82,
        "column": 4,
        "endLine": 82,
        "endColumn": 8,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "unnecessary-pass",
        "message": "Unnecessary pass statement",
        "message-id": "W0107"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.geometry",
        "obj": "read_WKB",
        "line": 80,
        "column": 13,
        "endLine": 80,
        "endColumn": 17,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'buff'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "intersects",
        "line": 85,
        "column": 15,
        "endLine": 85,
        "endColumn": 20,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "invalid-name",
        "message": "Argument name \"lineA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "intersects",
        "line": 85,
        "column": 22,
        "endLine": 85,
        "endColumn": 27,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "invalid-name",
        "message": "Argument name \"lineB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "intersects",
        "line": 94,
        "column": 4,
        "endLine": 99,
        "endColumn": 17,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Attrs",
        "line": 141,
        "column": 0,
        "endLine": 141,
        "endColumn": 11,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Attrs._set_cat",
        "line": 156,
        "column": 24,
        "endLine": 156,
        "endColumn": 31,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Attrs.__getitem__",
        "line": 160,
        "column": 4,
        "endLine": 160,
        "endColumn": 19,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Attrs.__setitem__",
        "line": 212,
        "column": 35,
        "endLine": 212,
        "endColumn": 60,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Attrs.__setitem__",
        "line": 214,
        "column": 29,
        "endLine": 214,
        "endColumn": 35,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Geo.__init__",
        "line": 317,
        "column": 8,
        "endLine": 317,
        "endColumn": 17,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"is2D\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Geo",
        "line": 271,
        "column": 0,
        "endLine": 271,
        "endColumn": 9,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (8/7)",
        "message-id": "R0902"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Geo.__init__",
        "line": 286,
        "column": 8,
        "endLine": 286,
        "endColumn": 12,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "invalid-name",
        "message": "Argument name \"is2D\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Geo.__init__",
        "line": 278,
        "column": 4,
        "endLine": 278,
        "endColumn": 16,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (10/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Geo.cat",
        "line": 368,
        "column": 4,
        "endLine": 368,
        "endColumn": 11,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Geo.cat",
        "line": 368,
        "column": 4,
        "endLine": 368,
        "endColumn": 11,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Geo.has_topology",
        "line": 372,
        "column": 4,
        "endLine": 372,
        "endColumn": 20,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Geo.has_topology",
        "line": 373,
        "column": 8,
        "endLine": 376,
        "endColumn": 24,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Geo.read",
        "line": 382,
        "column": 17,
        "endLine": 382,
        "endColumn": 22,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'ftype'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Geo.read",
        "line": 382,
        "column": 24,
        "endLine": 382,
        "endColumn": 32,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'c_points'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Geo.read",
        "line": 382,
        "column": 34,
        "endLine": 382,
        "endColumn": 40,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'c_cats'",
        "message-id": "W0612"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Point.__init__",
        "line": 462,
        "column": 24,
        "endLine": 462,
        "endColumn": 52,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "simplifiable-if-expression",
        "message": "The if expression can be replaced with 'test'",
        "message-id": "R1719"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Point.__repr__",
        "line": 501,
        "column": 15,
        "endLine": 501,
        "endColumn": 26,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Point.__repr__",
        "line": 501,
        "column": 40,
        "endLine": 501,
        "endColumn": 44,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Point.coords",
        "line": 542,
        "column": 8,
        "endLine": 545,
        "endColumn": 41,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Point.to_wkt_p",
        "line": 559,
        "column": 15,
        "endLine": 559,
        "endColumn": 26,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Point.to_wkt_p",
        "line": 559,
        "column": 39,
        "endLine": 559,
        "endColumn": 43,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Point.distance",
        "line": 580,
        "column": 8,
        "endLine": 585,
        "endColumn": 13,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Point.buffer",
        "line": 587,
        "column": 4,
        "endLine": 587,
        "endColumn": 14,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Line.__getitem__",
        "line": 669,
        "column": 8,
        "endLine": 691,
        "endColumn": 64,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Line.__getitem__",
        "line": 691,
        "column": 29,
        "endLine": 691,
        "endColumn": 57,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Line.__repr__",
        "line": 720,
        "column": 15,
        "endLine": 720,
        "endColumn": 27,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Line.first_cat",
        "line": 944,
        "column": 8,
        "endLine": 944,
        "endColumn": 12,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "unnecessary-pass",
        "message": "Unnecessary pass statement",
        "message-id": "W0107"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Line.pop",
        "line": 964,
        "column": 14,
        "endLine": 964,
        "endColumn": 36,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "unnecessary-dunder-call",
        "message": "Unnecessarily calls dunder method __getitem__. Access item via subscript.",
        "message-id": "C2801"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Line.remove",
        "line": 1034,
        "column": 37,
        "endLine": 1034,
        "endColumn": 52,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "unnecessary-dunder-call",
        "message": "Unnecessarily calls dunder method __iter__. Use iter built-in function.",
        "message-id": "C2801"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Line.to_list",
        "line": 1092,
        "column": 40,
        "endLine": 1092,
        "endColumn": 55,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "unnecessary-dunder-call",
        "message": "Unnecessarily calls dunder method __iter__. Use iter built-in function.",
        "message-id": "C2801"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Line.to_wkt_p",
        "line": 1117,
        "column": 15,
        "endLine": 1117,
        "endColumn": 31,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Line.to_wkt_p",
        "line": 1119,
        "column": 26,
        "endLine": 1119,
        "endColumn": 30,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Line.to_wkt_p",
        "line": 1120,
        "column": 27,
        "endLine": 1120,
        "endColumn": 42,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "unnecessary-dunder-call",
        "message": "Unnecessarily calls dunder method __iter__. Use iter built-in function.",
        "message-id": "C2801"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Line.from_wkt",
        "line": 1143,
        "column": 28,
        "endLine": 1143,
        "endColumn": 71,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "consider-using-generator",
        "message": "Consider using a generator instead 'tuple(float(e) for e in coord.split(' '))'",
        "message-id": "R1728"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Line.from_wkt",
        "line": 1124,
        "column": 4,
        "endLine": 1124,
        "endColumn": 16,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Line.from_wkt",
        "line": 1124,
        "column": 4,
        "endLine": 1124,
        "endColumn": 16,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "useless-return",
        "message": "Useless return at end of function or method",
        "message-id": "R1711"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Line.buffer",
        "line": 1147,
        "column": 4,
        "endLine": 1147,
        "endColumn": 14,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Line.nodes",
        "line": 1231,
        "column": 4,
        "endLine": 1231,
        "endColumn": 13,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Line",
        "line": 629,
        "column": 0,
        "endLine": 629,
        "endColumn": 10,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "too-many-public-methods",
        "message": "Too many public methods (24/20)",
        "message-id": "R0904"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Node._setup",
        "line": 1274,
        "column": 8,
        "endLine": 1274,
        "endColumn": 17,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"is2D\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Node.__init__",
        "line": 1261,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwords'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Node.__repr__",
        "line": 1284,
        "column": 15,
        "endLine": 1284,
        "endColumn": 25,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Node.to_wkt",
        "line": 1306,
        "column": 15,
        "endLine": 1306,
        "endColumn": 26,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Node.to_wkt",
        "line": 1306,
        "column": 39,
        "endLine": 1306,
        "endColumn": 43,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Node.to_wkb",
        "line": 1313,
        "column": 8,
        "endLine": 1313,
        "endColumn": 42,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "broad-exception-raised",
        "message": "Raising too general exception: Exception",
        "message-id": "W0719"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Boundary",
        "line": 1349,
        "column": 0,
        "endLine": 1349,
        "endColumn": 14,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Boundary.__repr__",
        "line": 1373,
        "column": 15,
        "endLine": 1373,
        "endColumn": 31,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Boundary._centroid",
        "line": 1380,
        "column": 12,
        "endLine": 1384,
        "endColumn": 27,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Boundary._centroid",
        "line": 1376,
        "column": 4,
        "endLine": 1376,
        "endColumn": 17,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Centroid.__repr__",
        "line": 1461,
        "column": 15,
        "endLine": 1461,
        "endColumn": 29,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Centroid.__repr__",
        "line": 1461,
        "column": 43,
        "endLine": 1461,
        "endColumn": 47,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Isle.__repr__",
        "line": 1488,
        "column": 15,
        "endLine": 1488,
        "endColumn": 25,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Isle.to_wkt",
        "line": 1520,
        "column": 15,
        "endLine": 1520,
        "endColumn": 30,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Isle.to_wkt",
        "line": 1521,
        "column": 23,
        "endLine": 1521,
        "endColumn": 27,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Isle.to_wkb",
        "line": 1526,
        "column": 8,
        "endLine": 1526,
        "endColumn": 42,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "broad-exception-raised",
        "message": "Raising too general exception: Exception",
        "message-id": "W0719"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Isles",
        "line": 1572,
        "column": 0,
        "endLine": 1572,
        "endColumn": 11,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Isles.__repr__",
        "line": 1587,
        "column": 15,
        "endLine": 1587,
        "endColumn": 26,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Isles.isles_ids",
        "line": 1599,
        "column": 27,
        "endLine": 1599,
        "endColumn": 41,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "unnecessary-dunder-call",
        "message": "Unnecessarily calls dunder method __len__. Use len built-in function.",
        "message-id": "C2801"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Area.__repr__",
        "line": 1643,
        "column": 15,
        "endLine": 1643,
        "endColumn": 25,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Area.centroid",
        "line": 1662,
        "column": 4,
        "endLine": 1662,
        "endColumn": 16,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Area.num_isles",
        "line": 1673,
        "column": 4,
        "endLine": 1673,
        "endColumn": 17,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Area.buffer",
        "line": 1708,
        "column": 4,
        "endLine": 1708,
        "endColumn": 14,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.geometry",
        "obj": "Area.get_first_cat",
        "line": 1812,
        "column": 8,
        "endLine": 1812,
        "endColumn": 12,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "unnecessary-pass",
        "message": "Unnecessary pass statement",
        "message-id": "W0107"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "c_read_next_line",
        "line": 1875,
        "column": 0,
        "endLine": 1875,
        "endColumn": 20,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.geometry",
        "obj": "c_read_next_line",
        "line": 1882,
        "column": 8,
        "endLine": 1882,
        "endColumn": 13,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "misplaced-bare-raise",
        "message": "The raise statement is not inside an except clause",
        "message-id": "E0704"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "read_next_line",
        "line": 1887,
        "column": 72,
        "endLine": 1887,
        "endColumn": 76,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "invalid-name",
        "message": "Argument name \"is2D\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "read_next_line",
        "line": 1886,
        "column": 0,
        "endLine": 1886,
        "endColumn": 18,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "c_read_line",
        "line": 1916,
        "column": 0,
        "endLine": 1916,
        "endColumn": 15,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "c_read_line",
        "line": 1922,
        "column": 4,
        "endLine": 1926,
        "endColumn": 72,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "c_read_line",
        "line": 1926,
        "column": 25,
        "endLine": 1926,
        "endColumn": 58,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.geometry",
        "obj": "read_line",
        "line": 1936,
        "column": 4,
        "endLine": 1936,
        "endColumn": 8,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "invalid-name",
        "message": "Argument name \"is2D\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "read_line",
        "line": 1929,
        "column": 0,
        "endLine": 1929,
        "endColumn": 13,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.geometry",
        "obj": "read_line",
        "line": 1929,
        "column": 0,
        "endLine": 1929,
        "endColumn": 13,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.geometry",
        "obj": "",
        "line": 1974,
        "column": 4,
        "endLine": 1974,
        "endColumn": 51,
        "path": "python/grass/pygrass/vector/geometry.py",
        "symbol": "pointless-string-statement",
        "message": "String statement has no effect",
        "message-id": "W0105"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1304/1000)",
        "message-id": "C0302"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.table",
        "obj": "",
        "line": 1015,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "fixme",
        "message": "TODO: check if open in write mode or not.",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.table",
        "obj": "",
        "line": 11,
        "column": 0,
        "endLine": 11,
        "endColumn": 18,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "import-error",
        "message": "Unable to import 'numpy'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.table",
        "obj": "",
        "line": 14,
        "column": 0,
        "endLine": 14,
        "endColumn": 34,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.vector'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.table",
        "obj": "",
        "line": 14,
        "column": 0,
        "endLine": 14,
        "endColumn": 34,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.table",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 50,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.ctypes_preamble'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.table",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 50,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "",
        "line": 26,
        "column": 0,
        "endLine": 26,
        "endColumn": 16,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "invalid-name",
        "message": "Constant name \"test_vector_name\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.table",
        "obj": "get_path",
        "line": 66,
        "column": 4,
        "endLine": 75,
        "endColumn": 19,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "Filters.__repr__",
        "line": 102,
        "column": 15,
        "endLine": 102,
        "endColumn": 28,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "Filters.where",
        "line": 118,
        "column": 22,
        "endLine": 118,
        "endColumn": 41,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "Filters.order_by",
        "line": 127,
        "column": 24,
        "endLine": 127,
        "endColumn": 44,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.table",
        "obj": "Filters.limit",
        "line": 136,
        "column": 8,
        "endLine": 139,
        "endColumn": 64,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1720"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "Filters.limit",
        "line": 139,
        "column": 26,
        "endLine": 139,
        "endColumn": 42,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "Filters.group_by",
        "line": 148,
        "column": 24,
        "endLine": 148,
        "endColumn": 44,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.table",
        "obj": "Filters.get_sql",
        "line": 153,
        "column": 19,
        "endLine": 153,
        "endColumn": 25,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "use-list-literal",
        "message": "Consider using [] instead of list()",
        "message-id": "R1734"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "Filters.get_sql",
        "line": 166,
        "column": 15,
        "endLine": 166,
        "endColumn": 20,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "Columns.__repr__",
        "line": 213,
        "column": 15,
        "endLine": 213,
        "endColumn": 28,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.table",
        "obj": "Columns.__setitem__",
        "line": 220,
        "column": 8,
        "endLine": 220,
        "endColumn": 31,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "too-many-function-args",
        "message": "Too many positional arguments for method call",
        "message-id": "E1121"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "Columns.update_odict",
        "line": 275,
        "column": 12,
        "endLine": 275,
        "endColumn": 33,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (psycopg2)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.table",
        "obj": "Columns.update_odict",
        "line": 275,
        "column": 12,
        "endLine": 275,
        "endColumn": 33,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "import-error",
        "message": "Unable to import 'psycopg2'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "Columns.update_odict",
        "line": 300,
        "column": 14,
        "endLine": 300,
        "endColumn": 28,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "unnecessary-dunder-call",
        "message": "Unnecessarily calls dunder method __len__. Use len built-in function.",
        "message-id": "C2801"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "Columns.update_odict",
        "line": 302,
        "column": 23,
        "endLine": 302,
        "endColumn": 29,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "Columns.update_odict",
        "line": 303,
        "column": 16,
        "endLine": 303,
        "endColumn": 22,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.table",
        "obj": "Columns.sql_descr",
        "line": 325,
        "column": 8,
        "endLine": 330,
        "endColumn": 81,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "Columns.sql_descr",
        "line": 327,
        "column": 17,
        "endLine": 327,
        "endColumn": 24,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "Columns.sql_descr",
        "line": 330,
        "column": 30,
        "endLine": 330,
        "endColumn": 37,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.table",
        "obj": "Columns.names",
        "line": 373,
        "column": 8,
        "endLine": 376,
        "endColumn": 47,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.table",
        "obj": "",
        "line": 440,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in assignment",
        "message-id": "W1404"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "Link._set_driver",
        "line": 721,
        "column": 16,
        "endLine": 722,
        "endColumn": 26,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "Link._set_driver",
        "line": 726,
        "column": 16,
        "endLine": 727,
        "endColumn": 26,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.table",
        "obj": "Link.__init__",
        "line": 737,
        "column": 4,
        "endLine": 737,
        "endColumn": 16,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "Link.__repr__",
        "line": 759,
        "column": 15,
        "endLine": 759,
        "endColumn": 33,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.table",
        "obj": "Link.connection",
        "line": 831,
        "column": 8,
        "endLine": 865,
        "endColumn": 36,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "Link.connection",
        "line": 832,
        "column": 12,
        "endLine": 832,
        "endColumn": 26,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (sqlite3)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "Link.connection",
        "line": 855,
        "column": 16,
        "endLine": 855,
        "endColumn": 31,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (psycopg2)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.table",
        "obj": "Link.connection",
        "line": 862,
        "column": 16,
        "endLine": 862,
        "endColumn": 37,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'except ImportError as exc' and 'raise ImportError(er) from exc'",
        "message-id": "W0707"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.table",
        "obj": "DBlinks.__getitem__",
        "line": 944,
        "column": 8,
        "endLine": 947,
        "endColumn": 37,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "DBlinks.__repr__",
        "line": 950,
        "column": 15,
        "endLine": 950,
        "endColumn": 28,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.pygrass.vector.table",
        "obj": "DBlinks.__repr__",
        "line": 950,
        "column": 31,
        "endLine": 950,
        "endColumn": 65,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "unnecessary-comprehension",
        "message": "Unnecessary use of a comprehension, use list(self.__iter__()) instead.",
        "message-id": "R1721"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "Table.__repr__",
        "line": 1117,
        "column": 15,
        "endLine": 1117,
        "endColumn": 26,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.table",
        "obj": "",
        "line": 1143,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.table",
        "obj": "Table.drop",
        "line": 1143,
        "column": 20,
        "endLine": 1143,
        "endColumn": 21,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "Table.drop",
        "line": 1147,
        "column": 28,
        "endLine": 1147,
        "endColumn": 32,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.table",
        "obj": "",
        "line": 1149,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.table",
        "obj": "Table.drop",
        "line": 1149,
        "column": 20,
        "endLine": 1149,
        "endColumn": 21,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.table",
        "obj": "Table.execute",
        "line": 1205,
        "column": 12,
        "endLine": 1209,
        "endColumn": 13,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise ValueError('The SQL statement is not correct:\\n%r,\\nvalues: %r,\\nSQL error: %s' % (sqlc, values, str(exc))) from exc'",
        "message-id": "W0707"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "Table.execute",
        "line": 1206,
        "column": 16,
        "endLine": 1208,
        "endColumn": 31,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "Table.create",
        "line": 1272,
        "column": 29,
        "endLine": 1272,
        "endColumn": 36,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "Table.create",
        "line": 1286,
        "column": 22,
        "endLine": 1286,
        "endColumn": 52,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.pygrass.vector.table",
        "obj": "",
        "line": 1298,
        "column": 4,
        "endLine": 1298,
        "endColumn": 51,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "pointless-string-statement",
        "message": "String statement has no effect",
        "message-id": "W0105"
    },
    {
        "type": "convention",
        "module": "grass.pygrass.vector.table",
        "obj": "",
        "line": 12,
        "column": 0,
        "endLine": 12,
        "endColumn": 36,
        "path": "python/grass/pygrass/vector/table.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"sqlite3.OperationalError\" should be placed before third party import \"numpy\"",
        "message-id": "C0411"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.vector_type",
        "obj": "",
        "line": 7,
        "column": 0,
        "endLine": 7,
        "endColumn": 34,
        "path": "python/grass/pygrass/vector/vector_type.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.vector'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.pygrass.vector.vector_type",
        "obj": "",
        "line": 7,
        "column": 0,
        "endLine": 7,
        "endColumn": 34,
        "path": "python/grass/pygrass/vector/vector_type.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "grass.script.array",
        "obj": "",
        "line": 112,
        "column": 0,
        "endLine": 112,
        "endColumn": 12,
        "path": "python/grass/script/array.py",
        "symbol": "import-error",
        "message": "Unable to import 'numpy'",
        "message-id": "E0401"
    },
    {
        "type": "refactor",
        "module": "grass.script.array",
        "obj": "_tempfile",
        "line": 122,
        "column": 0,
        "endLine": 122,
        "endColumn": 15,
        "path": "python/grass/script/array.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "grass.script.array",
        "obj": "array",
        "line": 133,
        "column": 0,
        "endLine": 133,
        "endColumn": 11,
        "path": "python/grass/script/array.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.script.array",
        "obj": "array",
        "line": 133,
        "column": 0,
        "endLine": 133,
        "endColumn": 11,
        "path": "python/grass/script/array.py",
        "symbol": "invalid-name",
        "message": "Class name \"array\" doesn't conform to PascalCase naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.script.array",
        "obj": "array.__new__",
        "line": 156,
        "column": 33,
        "endLine": 156,
        "endColumn": 55,
        "path": "python/grass/script/array.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.array",
        "obj": "array.__new__",
        "line": 156,
        "column": 33,
        "endLine": 156,
        "endColumn": 34,
        "path": "python/grass/script/array.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.script.array",
        "obj": "array.__new__",
        "line": 159,
        "column": 33,
        "endLine": 159,
        "endColumn": 55,
        "path": "python/grass/script/array.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.array",
        "obj": "array.__new__",
        "line": 159,
        "column": 33,
        "endLine": 159,
        "endColumn": 34,
        "path": "python/grass/script/array.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.script.array",
        "obj": "array.write",
        "line": 182,
        "column": 4,
        "endLine": 182,
        "endColumn": 13,
        "path": "python/grass/script/array.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "error",
        "module": "grass.script.array",
        "obj": "array.write",
        "line": 202,
        "column": 33,
        "endLine": 202,
        "endColumn": 58,
        "path": "python/grass/script/array.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.array",
        "obj": "array.write",
        "line": 202,
        "column": 33,
        "endLine": 202,
        "endColumn": 34,
        "path": "python/grass/script/array.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.script.array",
        "obj": "array.write",
        "line": 206,
        "column": 33,
        "endLine": 206,
        "endColumn": 63,
        "path": "python/grass/script/array.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.array",
        "obj": "array.write",
        "line": 206,
        "column": 33,
        "endLine": 206,
        "endColumn": 34,
        "path": "python/grass/script/array.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.script.array",
        "obj": "array.write",
        "line": 209,
        "column": 29,
        "endLine": 209,
        "endColumn": 51,
        "path": "python/grass/script/array.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.array",
        "obj": "array.write",
        "line": 209,
        "column": 29,
        "endLine": 209,
        "endColumn": 30,
        "path": "python/grass/script/array.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.script.array",
        "obj": "array.write",
        "line": 216,
        "column": 8,
        "endLine": 238,
        "endColumn": 20,
        "path": "python/grass/script/array.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.script.array",
        "obj": "array3d",
        "line": 244,
        "column": 0,
        "endLine": 244,
        "endColumn": 13,
        "path": "python/grass/script/array.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.script.array",
        "obj": "array3d",
        "line": 244,
        "column": 0,
        "endLine": 244,
        "endColumn": 13,
        "path": "python/grass/script/array.py",
        "symbol": "invalid-name",
        "message": "Class name \"array3d\" doesn't conform to PascalCase naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.script.array",
        "obj": "array3d.__new__",
        "line": 268,
        "column": 33,
        "endLine": 268,
        "endColumn": 55,
        "path": "python/grass/script/array.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.array",
        "obj": "array3d.__new__",
        "line": 268,
        "column": 33,
        "endLine": 268,
        "endColumn": 34,
        "path": "python/grass/script/array.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.script.array",
        "obj": "array3d.__new__",
        "line": 271,
        "column": 33,
        "endLine": 271,
        "endColumn": 55,
        "path": "python/grass/script/array.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.array",
        "obj": "array3d.__new__",
        "line": 271,
        "column": 33,
        "endLine": 271,
        "endColumn": 34,
        "path": "python/grass/script/array.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.script.array",
        "obj": "array3d.write",
        "line": 310,
        "column": 15,
        "endLine": 310,
        "endColumn": 38,
        "path": "python/grass/script/array.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'size not in (4, 8)'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "error",
        "module": "grass.script.array",
        "obj": "array3d.write",
        "line": 311,
        "column": 33,
        "endLine": 311,
        "endColumn": 58,
        "path": "python/grass/script/array.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.array",
        "obj": "array3d.write",
        "line": 311,
        "column": 33,
        "endLine": 311,
        "endColumn": 34,
        "path": "python/grass/script/array.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.script.array",
        "obj": "array3d.write",
        "line": 314,
        "column": 33,
        "endLine": 314,
        "endColumn": 63,
        "path": "python/grass/script/array.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.array",
        "obj": "array3d.write",
        "line": 314,
        "column": 33,
        "endLine": 314,
        "endColumn": 34,
        "path": "python/grass/script/array.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.script.array",
        "obj": "array3d.write",
        "line": 317,
        "column": 29,
        "endLine": 317,
        "endColumn": 51,
        "path": "python/grass/script/array.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.array",
        "obj": "array3d.write",
        "line": 317,
        "column": 29,
        "endLine": 317,
        "endColumn": 30,
        "path": "python/grass/script/array.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.script.array",
        "obj": "array3d.write",
        "line": 324,
        "column": 8,
        "endLine": 349,
        "endColumn": 20,
        "path": "python/grass/script/array.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.script.array",
        "obj": "",
        "line": 116,
        "column": 0,
        "endLine": 116,
        "endColumn": 46,
        "path": "python/grass/script/array.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.exceptions.CalledModuleError\" should be placed before local imports \"utils.try_remove\", \".core\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/script/core.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (2060/1000)",
        "message-id": "C0302"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "",
        "line": 47,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/script/core.py",
        "symbol": "fixme",
        "message": "TODO: what are cmd.exe's parsing rules?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "",
        "line": 336,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/script/core.py",
        "symbol": "fixme",
        "message": "TODO: construction of the whole command is far from perfect",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "",
        "line": 638,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/script/core.py",
        "symbol": "fixme",
        "message": "TODO: should we delete it from kwargs?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "",
        "line": 714,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/script/core.py",
        "symbol": "fixme",
        "message": "TODO: quite a random hack here, do we need it somewhere else too?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "",
        "line": 820,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/script/core.py",
        "symbol": "fixme",
        "message": "TODO: solve also warnings (not printed now)",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "",
        "line": 1693,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/script/core.py",
        "symbol": "fixme",
        "message": "TODO: the doc or impl is not correct, any return code is accepted",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "",
        "line": 1997,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/script/core.py",
        "symbol": "fixme",
        "message": "TODO: Move legal_name() to utils or a new dedicated \"name\" module.",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "",
        "line": 1998,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/script/core.py",
        "symbol": "fixme",
        "message": "TODO: Remove the pygrass backwards compatibility version of it?",
        "message-id": "W0511"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "Popen",
        "line": 42,
        "column": 0,
        "endLine": 42,
        "endColumn": 11,
        "path": "python/grass/script/core.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "Popen.__init__",
        "line": 59,
        "column": 30,
        "endLine": 59,
        "endColumn": 65,
        "path": "python/grass/script/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "Popen.__init__",
        "line": 59,
        "column": 30,
        "endLine": 59,
        "endColumn": 31,
        "path": "python/grass/script/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "Popen.__init__",
        "line": 61,
        "column": 12,
        "endLine": 61,
        "endColumn": 16,
        "path": "python/grass/script/core.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'name'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "",
        "line": 79,
        "column": 0,
        "endLine": 79,
        "endColumn": 14,
        "path": "python/grass/script/core.py",
        "symbol": "invalid-name",
        "message": "Constant name \"raise_on_error\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "",
        "line": 80,
        "column": 0,
        "endLine": 80,
        "endColumn": 15,
        "path": "python/grass/script/core.py",
        "symbol": "invalid-name",
        "message": "Constant name \"_capture_stderr\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "call",
        "line": 83,
        "column": 0,
        "endLine": 83,
        "endColumn": 8,
        "path": "python/grass/script/core.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "_make_unicode",
        "line": 125,
        "column": 4,
        "endLine": 131,
        "endColumn": 44,
        "path": "python/grass/script/core.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "_make_unicode",
        "line": 128,
        "column": 8,
        "endLine": 131,
        "endColumn": 44,
        "path": "python/grass/script/core.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "get_commands",
        "line": 158,
        "column": 10,
        "endLine": 158,
        "endColumn": 16,
        "path": "python/grass/script/core.py",
        "symbol": "use-list-literal",
        "message": "Consider using [] instead of list()",
        "message-id": "R1734"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "get_commands",
        "line": 159,
        "column": 22,
        "endLine": 159,
        "endColumn": 28,
        "path": "python/grass/script/core.py",
        "symbol": "use-list-literal",
        "message": "Consider using [] instead of list()",
        "message-id": "R1734"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "get_commands.scan",
        "line": 169,
        "column": 30,
        "endLine": 169,
        "endColumn": 44,
        "path": "python/grass/script/core.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "make_command",
        "line": 234,
        "column": 0,
        "endLine": 234,
        "endColumn": 16,
        "path": "python/grass/script/core.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "make_command",
        "line": 237,
        "column": 4,
        "endLine": 237,
        "endColumn": 13,
        "path": "python/grass/script/core.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'overwrite' from outer scope (line 1636)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "make_command",
        "line": 239,
        "column": 4,
        "endLine": 239,
        "endColumn": 11,
        "path": "python/grass/script/core.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'verbose' from outer scope (line 721)",
        "message-id": "W0621"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "make_command",
        "line": 284,
        "column": 20,
        "endLine": 290,
        "endColumn": 21,
        "path": "python/grass/script/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "make_command",
        "line": 284,
        "column": 20,
        "endLine": 284,
        "endColumn": 21,
        "path": "python/grass/script/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "make_command",
        "line": 241,
        "column": 4,
        "endLine": 241,
        "endColumn": 10,
        "path": "python/grass/script/core.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'errors'",
        "message-id": "W0613"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "handle_errors",
        "line": 352,
        "column": 4,
        "endLine": 366,
        "endColumn": 80,
        "path": "python/grass/script/core.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "handle_errors",
        "line": 357,
        "column": 12,
        "endLine": 360,
        "endColumn": 13,
        "path": "python/grass/script/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "handle_errors",
        "line": 357,
        "column": 12,
        "endLine": 357,
        "endColumn": 13,
        "path": "python/grass/script/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "start_command",
        "line": 369,
        "column": 0,
        "endLine": 369,
        "endColumn": 17,
        "path": "python/grass/script/core.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "start_command",
        "line": 372,
        "column": 4,
        "endLine": 372,
        "endColumn": 13,
        "path": "python/grass/script/core.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'overwrite' from outer scope (line 1636)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "start_command",
        "line": 374,
        "column": 4,
        "endLine": 374,
        "endColumn": 11,
        "path": "python/grass/script/core.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'verbose' from outer scope (line 721)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "start_command",
        "line": 426,
        "column": 12,
        "endLine": 426,
        "endColumn": 45,
        "path": "python/grass/script/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "run_command",
        "line": 471,
        "column": 4,
        "endLine": 472,
        "endColumn": 37,
        "path": "python/grass/script/core.py",
        "symbol": "consider-using-get",
        "message": "Consider using dict.get for getting values from a dict if a key is present or a default if not",
        "message-id": "R1715"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "run_command",
        "line": 474,
        "column": 43,
        "endLine": 474,
        "endColumn": 56,
        "path": "python/grass/script/core.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "read_command",
        "line": 539,
        "column": 4,
        "endLine": 540,
        "endColumn": 37,
        "path": "python/grass/script/core.py",
        "symbol": "consider-using-get",
        "message": "Consider using dict.get for getting values from a dict if a key is present or a default if not",
        "message-id": "R1715"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "read_command",
        "line": 542,
        "column": 43,
        "endLine": 542,
        "endColumn": 56,
        "path": "python/grass/script/core.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "write_command",
        "line": 636,
        "column": 4,
        "endLine": 637,
        "endColumn": 37,
        "path": "python/grass/script/core.py",
        "symbol": "consider-using-get",
        "message": "Consider using dict.get for getting values from a dict if a key is present or a default if not",
        "message-id": "R1715"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "write_command",
        "line": 644,
        "column": 43,
        "endLine": 644,
        "endColumn": 56,
        "path": "python/grass/script/core.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "exec_command",
        "line": 657,
        "column": 0,
        "endLine": 657,
        "endColumn": 16,
        "path": "python/grass/script/core.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "exec_command",
        "line": 660,
        "column": 4,
        "endLine": 660,
        "endColumn": 13,
        "path": "python/grass/script/core.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'overwrite' from outer scope (line 1636)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "exec_command",
        "line": 662,
        "column": 4,
        "endLine": 662,
        "endColumn": 11,
        "path": "python/grass/script/core.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'verbose' from outer scope (line 721)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "debug",
        "line": 699,
        "column": 15,
        "endLine": 699,
        "endColumn": 20,
        "path": "python/grass/script/core.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'debug' from outer scope (line 699)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "percent",
        "line": 755,
        "column": 12,
        "endLine": 755,
        "endColumn": 22,
        "path": "python/grass/script/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "fatal",
        "line": 790,
        "column": 4,
        "endLine": 790,
        "endColumn": 25,
        "path": "python/grass/script/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'raise_on_error' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "set_raise_on_error",
        "line": 806,
        "column": 4,
        "endLine": 806,
        "endColumn": 25,
        "path": "python/grass/script/core.py",
        "symbol": "global-statement",
        "message": "Using the global statement",
        "message-id": "W0603"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "get_raise_on_error",
        "line": 816,
        "column": 4,
        "endLine": 816,
        "endColumn": 25,
        "path": "python/grass/script/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'raise_on_error' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "set_capture_stderr",
        "line": 846,
        "column": 4,
        "endLine": 846,
        "endColumn": 26,
        "path": "python/grass/script/core.py",
        "symbol": "global-statement",
        "message": "Using the global statement",
        "message-id": "W0603"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "get_capture_stderr",
        "line": 857,
        "column": 4,
        "endLine": 857,
        "endColumn": 26,
        "path": "python/grass/script/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for '_capture_stderr' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "_parse_opts",
        "line": 877,
        "column": 8,
        "endLine": 882,
        "endColumn": 13,
        "path": "python/grass/script/core.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'error' from outer scope (line 767)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "_parse_opts",
        "line": 873,
        "column": 12,
        "endLine": 873,
        "endColumn": 78,
        "path": "python/grass/script/core.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'except ValueError as exc' and 'raise SyntaxError('invalid output from g.parser: {}'.format(line)) from exc'",
        "message-id": "W0707"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "_parse_opts",
        "line": 873,
        "column": 30,
        "endLine": 873,
        "endColumn": 64,
        "path": "python/grass/script/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "_parse_opts",
        "line": 878,
        "column": 12,
        "endLine": 882,
        "endColumn": 13,
        "path": "python/grass/script/core.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise SyntaxError('invalid output from g.parser ({error}): {line}'.format(error=error, line=line)) from error'",
        "message-id": "W0707"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "_parse_opts",
        "line": 879,
        "column": 16,
        "endLine": 879,
        "endColumn": 64,
        "path": "python/grass/script/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "_parse_opts",
        "line": 891,
        "column": 16,
        "endLine": 891,
        "endColumn": 62,
        "path": "python/grass/script/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "parser",
        "line": 930,
        "column": 8,
        "endLine": 930,
        "endColumn": 69,
        "path": "python/grass/script/core.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "_text_to_key_value_dict",
        "line": 1073,
        "column": 11,
        "endLine": 1073,
        "endColumn": 30,
        "path": "python/grass/script/core.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "_text_to_key_value_dict",
        "line": 1073,
        "column": 11,
        "endLine": 1073,
        "endColumn": 30,
        "path": "python/grass/script/core.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "compare_key_value_text_files",
        "line": 1116,
        "column": 0,
        "endLine": 1116,
        "endColumn": 32,
        "path": "python/grass/script/core.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "",
        "line": 1166,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/script/core.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "compare_key_value_text_files",
        "line": 1166,
        "column": 16,
        "endLine": 1166,
        "endColumn": 88,
        "path": "python/grass/script/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "compare_key_value_text_files",
        "line": 1166,
        "column": 16,
        "endLine": 1166,
        "endColumn": 17,
        "path": "python/grass/script/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "compare_key_value_text_files",
        "line": 1120,
        "column": 4,
        "endLine": 1120,
        "endColumn": 11,
        "path": "python/grass/script/core.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'val_sep'",
        "message-id": "W0613"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "locn_is_latlong",
        "line": 1208,
        "column": 4,
        "endLine": 1211,
        "endColumn": 20,
        "path": "python/grass/script/core.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'return bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "locn_is_latlong",
        "line": 1208,
        "column": 4,
        "endLine": 1211,
        "endColumn": 20,
        "path": "python/grass/script/core.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "region_env",
        "line": 1258,
        "column": 0,
        "endLine": 1258,
        "endColumn": 14,
        "path": "python/grass/script/core.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (17/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "region_env",
        "line": 1287,
        "column": 9,
        "endLine": 1287,
        "endColumn": 28,
        "path": "python/grass/script/core.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "region_env",
        "line": 1310,
        "column": 28,
        "endLine": 1310,
        "endColumn": 37,
        "path": "python/grass/script/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "region_env",
        "line": 1350,
        "column": 24,
        "endLine": 1350,
        "endColumn": 33,
        "path": "python/grass/script/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "use_temp_region",
        "line": 1360,
        "column": 11,
        "endLine": 1360,
        "endColumn": 22,
        "path": "python/grass/script/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "find_file",
        "line": 1422,
        "column": 4,
        "endLine": 1423,
        "endColumn": 46,
        "path": "python/grass/script/core.py",
        "symbol": "consider-using-get",
        "message": "Consider using dict.get for getting values from a dict if a key is present or a default if not",
        "message-id": "R1715"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "list_strings",
        "line": 1443,
        "column": 0,
        "endLine": 1443,
        "endColumn": 16,
        "path": "python/grass/script/core.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "list_strings",
        "line": 1443,
        "column": 17,
        "endLine": 1443,
        "endColumn": 21,
        "path": "python/grass/script/core.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "list_strings",
        "line": 1460,
        "column": 16,
        "endLine": 1460,
        "endColumn": 65,
        "path": "python/grass/script/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "list_strings",
        "line": 1460,
        "column": 16,
        "endLine": 1460,
        "endColumn": 17,
        "path": "python/grass/script/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "list_strings",
        "line": 1462,
        "column": 13,
        "endLine": 1462,
        "endColumn": 19,
        "path": "python/grass/script/core.py",
        "symbol": "use-list-literal",
        "message": "Consider using [] instead of list()",
        "message-id": "R1734"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "list_pairs",
        "line": 1478,
        "column": 0,
        "endLine": 1478,
        "endColumn": 14,
        "path": "python/grass/script/core.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "list_pairs",
        "line": 1478,
        "column": 15,
        "endLine": 1478,
        "endColumn": 19,
        "path": "python/grass/script/core.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "list_grouped",
        "line": 1500,
        "column": 0,
        "endLine": 1500,
        "endColumn": 16,
        "path": "python/grass/script/core.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "list_grouped",
        "line": 1501,
        "column": 4,
        "endLine": 1501,
        "endColumn": 8,
        "path": "python/grass/script/core.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "list_grouped",
        "line": 1531,
        "column": 4,
        "endLine": 1534,
        "endColumn": 31,
        "path": "python/grass/script/core.py",
        "symbol": "consider-using-enumerate",
        "message": "Consider using enumerate instead of iterating with range and len",
        "message-id": "C0200"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "list_grouped",
        "line": 1533,
        "column": 20,
        "endLine": 1533,
        "endColumn": 69,
        "path": "python/grass/script/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "list_grouped",
        "line": 1533,
        "column": 20,
        "endLine": 1533,
        "endColumn": 21,
        "path": "python/grass/script/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "list_grouped",
        "line": 1556,
        "column": 20,
        "endLine": 1556,
        "endColumn": 45,
        "path": "python/grass/script/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "list_grouped",
        "line": 1556,
        "column": 20,
        "endLine": 1556,
        "endColumn": 21,
        "path": "python/grass/script/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "list_grouped",
        "line": 1500,
        "column": 0,
        "endLine": 1500,
        "endColumn": 16,
        "path": "python/grass/script/core.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (17/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "verbosity",
        "line": 1660,
        "column": 4,
        "endLine": 1663,
        "endColumn": 16,
        "path": "python/grass/script/core.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "find_program",
        "line": 1691,
        "column": 13,
        "endLine": 1691,
        "endColumn": 35,
        "path": "python/grass/script/core.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "find_program",
        "line": 1696,
        "column": 11,
        "endLine": 1696,
        "endColumn": 20,
        "path": "python/grass/script/core.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "find_program",
        "line": 1691,
        "column": 13,
        "endLine": 1691,
        "endColumn": 35,
        "path": "python/grass/script/core.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "mapsets",
        "line": 1717,
        "column": 4,
        "endLine": 1717,
        "endColumn": 11,
        "path": "python/grass/script/core.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'mapsets' from outer scope (line 1706)",
        "message-id": "W0621"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "mapsets",
        "line": 1719,
        "column": 14,
        "endLine": 1719,
        "endColumn": 41,
        "path": "python/grass/script/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "mapsets",
        "line": 1719,
        "column": 14,
        "endLine": 1719,
        "endColumn": 15,
        "path": "python/grass/script/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "create_location",
        "line": 1727,
        "column": 0,
        "endLine": 1727,
        "endColumn": 19,
        "path": "python/grass/script/core.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "create_project",
        "line": 1737,
        "column": 0,
        "endLine": 1737,
        "endColumn": 18,
        "path": "python/grass/script/core.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (10/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "create_project",
        "line": 1737,
        "column": 0,
        "endLine": 1737,
        "endColumn": 18,
        "path": "python/grass/script/core.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (18/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "create_project",
        "line": 1747,
        "column": 4,
        "endLine": 1747,
        "endColumn": 13,
        "path": "python/grass/script/core.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'overwrite' from outer scope (line 1636)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "create_project",
        "line": 1872,
        "column": 8,
        "endLine": 1872,
        "endColumn": 13,
        "path": "python/grass/script/core.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'error' from outer scope (line 767)",
        "message-id": "W0621"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "create_project",
        "line": 1798,
        "column": 16,
        "endLine": 1798,
        "endColumn": 70,
        "path": "python/grass/script/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "create_project",
        "line": 1798,
        "column": 16,
        "endLine": 1798,
        "endColumn": 17,
        "path": "python/grass/script/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "create_project",
        "line": 1803,
        "column": 12,
        "endLine": 1803,
        "endColumn": 69,
        "path": "python/grass/script/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "create_project",
        "line": 1803,
        "column": 12,
        "endLine": 1803,
        "endColumn": 13,
        "path": "python/grass/script/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "create_project",
        "line": 1810,
        "column": 13,
        "endLine": 1810,
        "endColumn": 19,
        "path": "python/grass/script/core.py",
        "symbol": "use-dict-literal",
        "message": "Consider using '{}' instead of a call to 'dict'.",
        "message-id": "R1735"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "create_project",
        "line": 1872,
        "column": 16,
        "endLine": 1872,
        "endColumn": 18,
        "path": "python/grass/script/core.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'ps' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "create_project",
        "line": 1737,
        "column": 0,
        "endLine": 1737,
        "endColumn": 18,
        "path": "python/grass/script/core.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (17/12)",
        "message-id": "R0912"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "_set_location_description",
        "line": 1895,
        "column": 8,
        "endLine": 1895,
        "endColumn": 34,
        "path": "python/grass/script/core.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise ScriptError(repr(e)) from e'",
        "message-id": "W0707"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "_set_location_description",
        "line": 1884,
        "column": 13,
        "endLine": 1888,
        "endColumn": 9,
        "path": "python/grass/script/core.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "_create_location_xy",
        "line": 1934,
        "column": 18,
        "endLine": 1934,
        "endColumn": 80,
        "path": "python/grass/script/core.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "_create_location_xy",
        "line": 1936,
        "column": 34,
        "endLine": 1936,
        "endColumn": 38,
        "path": "python/grass/script/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "_create_location_xy",
        "line": 1946,
        "column": 8,
        "endLine": 1946,
        "endColumn": 34,
        "path": "python/grass/script/core.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise ScriptError(repr(e)) from e'",
        "message-id": "W0707"
    },
    {
        "type": "refactor",
        "module": "grass.script.core",
        "obj": "_create_location_xy",
        "line": 1934,
        "column": 18,
        "endLine": 1934,
        "endColumn": 80,
        "path": "python/grass/script/core.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "",
        "line": 1972,
        "column": 0,
        "endLine": 1972,
        "endColumn": 12,
        "path": "python/grass/script/core.py",
        "symbol": "invalid-name",
        "message": "Constant name \"_debug_level\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "debug_level",
        "line": 1975,
        "column": 0,
        "endLine": 1975,
        "endColumn": 15,
        "path": "python/grass/script/core.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "debug_level",
        "line": 1976,
        "column": 4,
        "endLine": 1976,
        "endColumn": 23,
        "path": "python/grass/script/core.py",
        "symbol": "global-statement",
        "message": "Using the global statement",
        "message-id": "W0603"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "debug_level",
        "line": 1984,
        "column": 33,
        "endLine": 1984,
        "endColumn": 53,
        "path": "python/grass/script/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "debug_level",
        "line": 1984,
        "column": 33,
        "endLine": 1984,
        "endColumn": 34,
        "path": "python/grass/script/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "debug_level",
        "line": 1988,
        "column": 16,
        "endLine": 1991,
        "endColumn": 17,
        "path": "python/grass/script/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "debug_level",
        "line": 1988,
        "column": 16,
        "endLine": 1988,
        "endColumn": 17,
        "path": "python/grass/script/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.script.core",
        "obj": "",
        "line": 2012,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/script/core.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "legal_name",
        "line": 2012,
        "column": 16,
        "endLine": 2012,
        "endColumn": 82,
        "path": "python/grass/script/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "legal_name",
        "line": 2012,
        "column": 16,
        "endLine": 2012,
        "endColumn": 17,
        "path": "python/grass/script/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "legal_name",
        "line": 2019,
        "column": 12,
        "endLine": 2019,
        "endColumn": 66,
        "path": "python/grass/script/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.core",
        "obj": "legal_name",
        "line": 2019,
        "column": 12,
        "endLine": 2019,
        "endColumn": 13,
        "path": "python/grass/script/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "create_environment",
        "line": 2043,
        "column": 16,
        "endLine": 2043,
        "endColumn": 36,
        "path": "python/grass/script/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "create_environment",
        "line": 2044,
        "column": 16,
        "endLine": 2044,
        "endColumn": 33,
        "path": "python/grass/script/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "create_environment",
        "line": 2045,
        "column": 16,
        "endLine": 2045,
        "endColumn": 38,
        "path": "python/grass/script/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "",
        "line": 37,
        "column": 0,
        "endLine": 37,
        "endColumn": 59,
        "path": "python/grass/script/core.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.exceptions.ScriptError\" should be placed before local import \"utils.KeyValue\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.script.core",
        "obj": "",
        "line": 38,
        "column": 0,
        "endLine": 38,
        "endColumn": 52,
        "path": "python/grass/script/core.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.grassdb.manage.resolve_mapset_path\" should be placed before local import \"utils.KeyValue\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.script.db",
        "obj": "",
        "line": 122,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/script/db.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "error",
        "module": "grass.script.db",
        "obj": "db_describe",
        "line": 58,
        "column": 14,
        "endLine": 58,
        "endColumn": 48,
        "path": "python/grass/script/db.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.db",
        "obj": "db_describe",
        "line": 58,
        "column": 14,
        "endLine": 58,
        "endColumn": 15,
        "path": "python/grass/script/db.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.script.db",
        "obj": "db_table_exist",
        "line": 97,
        "column": 13,
        "endLine": 97,
        "endColumn": 35,
        "path": "python/grass/script/db.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.script.db",
        "obj": "db_table_exist",
        "line": 97,
        "column": 13,
        "endLine": 97,
        "endColumn": 35,
        "path": "python/grass/script/db.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.script.db",
        "obj": "db_connection",
        "line": 130,
        "column": 17,
        "endLine": 130,
        "endColumn": 38,
        "path": "python/grass/script/db.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.script.db",
        "obj": "db_connection",
        "line": 130,
        "column": 17,
        "endLine": 130,
        "endColumn": 38,
        "path": "python/grass/script/db.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "error",
        "module": "grass.script.db",
        "obj": "db_select",
        "line": 178,
        "column": 12,
        "endLine": 181,
        "endColumn": 13,
        "path": "python/grass/script/db.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.db",
        "obj": "db_select",
        "line": 178,
        "column": 12,
        "endLine": 178,
        "endColumn": 13,
        "path": "python/grass/script/db.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.script.db",
        "obj": "db_select",
        "line": 191,
        "column": 14,
        "endLine": 191,
        "endColumn": 39,
        "path": "python/grass/script/db.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.db",
        "obj": "db_select",
        "line": 191,
        "column": 14,
        "endLine": 191,
        "endColumn": 15,
        "path": "python/grass/script/db.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.script.db",
        "obj": "db_select",
        "line": 193,
        "column": 12,
        "endLine": 193,
        "endColumn": 23,
        "path": "python/grass/script/db.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.script.db",
        "obj": "db_select",
        "line": 193,
        "column": 12,
        "endLine": 193,
        "endColumn": 23,
        "path": "python/grass/script/db.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "grass.script.db",
        "obj": "db_table_in_vector",
        "line": 218,
        "column": 4,
        "endLine": 218,
        "endColumn": 33,
        "path": "python/grass/script/db.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (vector.vector_db)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "grass.script.db",
        "obj": "db_table_in_vector",
        "line": 220,
        "column": 13,
        "endLine": 220,
        "endColumn": 34,
        "path": "python/grass/script/db.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.script.db",
        "obj": "db_table_in_vector",
        "line": 230,
        "column": 4,
        "endLine": 233,
        "endColumn": 19,
        "path": "python/grass/script/db.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.script.db",
        "obj": "db_table_in_vector",
        "line": 220,
        "column": 13,
        "endLine": 220,
        "endColumn": 34,
        "path": "python/grass/script/db.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "grass.script.db",
        "obj": "",
        "line": 32,
        "column": 0,
        "endLine": 32,
        "endColumn": 46,
        "path": "python/grass/script/db.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.exceptions.CalledModuleError\" should be placed before local imports \"core.run_command\", \"utils.try_remove\"",
        "message-id": "C0411"
    },
    {
        "type": "warning",
        "module": "grass.script.raster",
        "obj": "raster_history",
        "line": 40,
        "column": 19,
        "endLine": 40,
        "endColumn": 22,
        "path": "python/grass/script/raster.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.script.raster",
        "obj": "raster_history",
        "line": 55,
        "column": 16,
        "endLine": 55,
        "endColumn": 38,
        "path": "python/grass/script/raster.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "error",
        "module": "grass.script.raster",
        "obj": "raster_history",
        "line": 65,
        "column": 8,
        "endLine": 69,
        "endColumn": 9,
        "path": "python/grass/script/raster.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.raster",
        "obj": "raster_history",
        "line": 65,
        "column": 8,
        "endLine": 65,
        "endColumn": 9,
        "path": "python/grass/script/raster.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.script.raster",
        "obj": "raster_history",
        "line": 68,
        "column": 14,
        "endLine": 68,
        "endColumn": 38,
        "path": "python/grass/script/raster.py",
        "symbol": "duplicate-key",
        "message": "Duplicate key 'map' in dictionary",
        "message-id": "W0109"
    },
    {
        "type": "refactor",
        "module": "grass.script.raster",
        "obj": "raster_history",
        "line": 55,
        "column": 16,
        "endLine": 55,
        "endColumn": 38,
        "path": "python/grass/script/raster.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.script.raster",
        "obj": "raster_info",
        "line": 74,
        "column": 16,
        "endLine": 74,
        "endColumn": 19,
        "path": "python/grass/script/raster.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.script.raster",
        "obj": "raster_info.float_or_null",
        "line": 89,
        "column": 8,
        "endLine": 92,
        "endColumn": 27,
        "path": "python/grass/script/raster.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.script.raster",
        "obj": "mapcalc",
        "line": 105,
        "column": 0,
        "endLine": 105,
        "endColumn": 11,
        "path": "python/grass/script/raster.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.script.raster",
        "obj": "",
        "line": 147,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/script/raster.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.script.raster",
        "obj": "mapcalc",
        "line": 147,
        "column": 14,
        "endLine": 147,
        "endColumn": 83,
        "path": "python/grass/script/raster.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.raster",
        "obj": "mapcalc",
        "line": 147,
        "column": 14,
        "endLine": 147,
        "endColumn": 15,
        "path": "python/grass/script/raster.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.script.raster",
        "obj": "mapcalc_start",
        "line": 150,
        "column": 0,
        "endLine": 150,
        "endColumn": 17,
        "path": "python/grass/script/raster.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.script.raster",
        "obj": "raster_what",
        "line": 211,
        "column": 0,
        "endLine": 211,
        "endColumn": 15,
        "path": "python/grass/script/raster.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (18/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.script.raster",
        "obj": "raster_what",
        "line": 211,
        "column": 16,
        "endLine": 211,
        "endColumn": 19,
        "path": "python/grass/script/raster.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.script.raster",
        "obj": "raster_what",
        "line": 227,
        "column": 17,
        "endLine": 227,
        "endColumn": 23,
        "path": "python/grass/script/raster.py",
        "symbol": "use-list-literal",
        "message": "Consider using [] instead of list()",
        "message-id": "R1734"
    },
    {
        "type": "convention",
        "module": "grass.script.raster",
        "obj": "raster_what",
        "line": 229,
        "column": 26,
        "endLine": 229,
        "endColumn": 33,
        "path": "python/grass/script/raster.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.script.raster",
        "obj": "raster_what",
        "line": 232,
        "column": 30,
        "endLine": 232,
        "endColumn": 37,
        "path": "python/grass/script/raster.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.script.raster",
        "obj": "raster_what",
        "line": 243,
        "column": 13,
        "endLine": 243,
        "endColumn": 25,
        "path": "python/grass/script/raster.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.raster",
        "obj": "raster_what",
        "line": 243,
        "column": 13,
        "endLine": 243,
        "endColumn": 14,
        "path": "python/grass/script/raster.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.script.raster",
        "obj": "raster_what",
        "line": 247,
        "column": 11,
        "endLine": 247,
        "endColumn": 17,
        "path": "python/grass/script/raster.py",
        "symbol": "use-list-literal",
        "message": "Consider using [] instead of list()",
        "message-id": "R1734"
    },
    {
        "type": "error",
        "module": "grass.script.raster",
        "obj": "raster_what",
        "line": 252,
        "column": 18,
        "endLine": 252,
        "endColumn": 28,
        "path": "python/grass/script/raster.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.raster",
        "obj": "raster_what",
        "line": 252,
        "column": 18,
        "endLine": 252,
        "endColumn": 19,
        "path": "python/grass/script/raster.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.script.raster",
        "obj": "raster_what",
        "line": 252,
        "column": 30,
        "endLine": 252,
        "endColumn": 40,
        "path": "python/grass/script/raster.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.raster",
        "obj": "raster_what",
        "line": 252,
        "column": 30,
        "endLine": 252,
        "endColumn": 31,
        "path": "python/grass/script/raster.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.script.raster",
        "obj": "raster_what",
        "line": 252,
        "column": 42,
        "endLine": 252,
        "endColumn": 52,
        "path": "python/grass/script/raster.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.raster",
        "obj": "raster_what",
        "line": 252,
        "column": 42,
        "endLine": 252,
        "endColumn": 43,
        "path": "python/grass/script/raster.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.script.raster",
        "obj": "raster_what",
        "line": 260,
        "column": 12,
        "endLine": 261,
        "endColumn": 73,
        "path": "python/grass/script/raster.py",
        "symbol": "consider-using-enumerate",
        "message": "Consider using enumerate instead of iterating with range and len",
        "message-id": "C0200"
    },
    {
        "type": "convention",
        "module": "grass.script.raster",
        "obj": "",
        "line": 36,
        "column": 0,
        "endLine": 36,
        "endColumn": 46,
        "path": "python/grass/script/raster.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.exceptions.CalledModuleError\" should be placed before local import \"core.gisenv\"",
        "message-id": "C0411"
    },
    {
        "type": "warning",
        "module": "grass.script.raster3d",
        "obj": "raster3d_info",
        "line": 31,
        "column": 18,
        "endLine": 31,
        "endColumn": 21,
        "path": "python/grass/script/raster3d.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.script.raster3d",
        "obj": "raster3d_info.float_or_null",
        "line": 48,
        "column": 8,
        "endLine": 51,
        "endColumn": 27,
        "path": "python/grass/script/raster3d.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.script.raster3d",
        "obj": "mapcalc3d",
        "line": 70,
        "column": 0,
        "endLine": 70,
        "endColumn": 13,
        "path": "python/grass/script/raster3d.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.script.raster3d",
        "obj": "",
        "line": 113,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/script/raster3d.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.script.raster3d",
        "obj": "mapcalc3d",
        "line": 113,
        "column": 12,
        "endLine": 113,
        "endColumn": 82,
        "path": "python/grass/script/raster3d.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.raster3d",
        "obj": "mapcalc3d",
        "line": 113,
        "column": 12,
        "endLine": 113,
        "endColumn": 13,
        "path": "python/grass/script/raster3d.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.script.raster3d",
        "obj": "",
        "line": 28,
        "column": 0,
        "endLine": 28,
        "endColumn": 46,
        "path": "python/grass/script/raster3d.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.exceptions.CalledModuleError\" should be placed before local imports \"core.read_command\", \"utils.float_or_dms\"",
        "message-id": "C0411"
    },
    {
        "type": "warning",
        "module": "grass.script.setup",
        "obj": "",
        "line": 78,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/script/setup.py",
        "symbol": "fixme",
        "message": "TODO: this should share code from lib/init/grass.py",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.script.setup",
        "obj": "",
        "line": 329,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/script/setup.py",
        "symbol": "fixme",
        "message": "TODO: lock the mapset?",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.script.setup",
        "obj": "",
        "line": 522,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/script/setup.py",
        "symbol": "fixme",
        "message": "TODO: unlock the mapset?",
        "message-id": "W0511"
    },
    {
        "type": "convention",
        "module": "grass.script.setup",
        "obj": "write_gisrc",
        "line": 102,
        "column": 17,
        "endLine": 102,
        "endColumn": 33,
        "path": "python/grass/script/setup.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.script.setup",
        "obj": "write_gisrc",
        "line": 103,
        "column": 17,
        "endLine": 103,
        "endColumn": 38,
        "path": "python/grass/script/setup.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.script.setup",
        "obj": "write_gisrc",
        "line": 104,
        "column": 17,
        "endLine": 104,
        "endColumn": 31,
        "path": "python/grass/script/setup.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.script.setup",
        "obj": "get_install_path",
        "line": 115,
        "column": 0,
        "endLine": 115,
        "endColumn": 20,
        "path": "python/grass/script/setup.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (7/6)",
        "message-id": "R0911"
    },
    {
        "type": "convention",
        "module": "grass.script.setup",
        "obj": "setup_runtime_env",
        "line": 218,
        "column": 4,
        "endLine": 224,
        "endColumn": 5,
        "path": "python/grass/script/setup.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (grass.app.runtime.get_grass_config_dir, grass.app.runtime.set_dynamic_library_path, grass.app.runtime.set_executable_paths, grass.app.runtime.set_path_to_python_executable, grass.app.runtime.set_python_path_variable)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "grass.script.setup",
        "obj": "init",
        "line": 296,
        "column": 12,
        "endLine": 296,
        "endColumn": 83,
        "path": "python/grass/script/setup.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.setup",
        "obj": "init",
        "line": 296,
        "column": 12,
        "endLine": 296,
        "endColumn": 13,
        "path": "python/grass/script/setup.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.script.setup",
        "obj": "init",
        "line": 307,
        "column": 25,
        "endLine": 307,
        "endColumn": 58,
        "path": "python/grass/script/setup.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.setup",
        "obj": "init",
        "line": 307,
        "column": 25,
        "endLine": 307,
        "endColumn": 26,
        "path": "python/grass/script/setup.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.script.setup",
        "obj": "init",
        "line": 311,
        "column": 12,
        "endLine": 311,
        "endColumn": 67,
        "path": "python/grass/script/setup.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.setup",
        "obj": "init",
        "line": 311,
        "column": 12,
        "endLine": 311,
        "endColumn": 13,
        "path": "python/grass/script/setup.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.script.setup",
        "obj": "init",
        "line": 316,
        "column": 12,
        "endLine": 316,
        "endColumn": 53,
        "path": "python/grass/script/setup.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.setup",
        "obj": "init",
        "line": 316,
        "column": 12,
        "endLine": 316,
        "endColumn": 13,
        "path": "python/grass/script/setup.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.script.setup",
        "obj": "SessionHandle.env",
        "line": 396,
        "column": 4,
        "endLine": 396,
        "endColumn": 11,
        "path": "python/grass/script/setup.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.script.setup",
        "obj": "SessionHandle.__exit__",
        "line": 412,
        "column": 23,
        "endLine": 412,
        "endColumn": 27,
        "path": "python/grass/script/setup.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.script.setup",
        "obj": "clean_default_db",
        "line": 472,
        "column": 15,
        "endLine": 472,
        "endColumn": 60,
        "path": "python/grass/script/setup.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.setup",
        "obj": "clean_default_db",
        "line": 472,
        "column": 15,
        "endLine": 472,
        "endColumn": 16,
        "path": "python/grass/script/setup.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.script.setup",
        "obj": "clean_temp",
        "line": 492,
        "column": 15,
        "endLine": 492,
        "endColumn": 50,
        "path": "python/grass/script/setup.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.setup",
        "obj": "clean_temp",
        "line": 492,
        "column": 15,
        "endLine": 492,
        "endColumn": 16,
        "path": "python/grass/script/setup.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.script.setup",
        "obj": "finish",
        "line": 524,
        "column": 4,
        "endLine": 524,
        "endColumn": 44,
        "path": "python/grass/script/setup.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (grass.script.utils)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "grass.script.task",
        "obj": "",
        "line": 475,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/script/task.py",
        "symbol": "fixme",
        "message": "TODO: do it better (?)",
        "message-id": "W0511"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "grassTask",
        "line": 34,
        "column": 0,
        "endLine": 34,
        "endColumn": 15,
        "path": "python/grass/script/task.py",
        "symbol": "invalid-name",
        "message": "Class name \"grassTask\" doesn't conform to PascalCase naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "grassTask.__init__",
        "line": 56,
        "column": 8,
        "endLine": 56,
        "endColumn": 21,
        "path": "python/grass/script/task.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"errorMsg\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "grassTask.__init__",
        "line": 57,
        "column": 8,
        "endLine": 57,
        "endColumn": 23,
        "path": "python/grass/script/task.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"firstParam\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "grassTask.__init__",
        "line": 59,
        "column": 12,
        "endLine": 59,
        "endColumn": 26,
        "path": "python/grass/script/task.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"blackList\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.script.task",
        "obj": "grassTask",
        "line": 34,
        "column": 0,
        "endLine": 34,
        "endColumn": 15,
        "path": "python/grass/script/task.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (10/7)",
        "message-id": "R0902"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "grassTask.__init__",
        "line": 48,
        "column": 34,
        "endLine": 48,
        "endColumn": 43,
        "path": "python/grass/script/task.py",
        "symbol": "invalid-name",
        "message": "Argument name \"blackList\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.script.task",
        "obj": "grassTask.__init__",
        "line": 50,
        "column": 20,
        "endLine": 50,
        "endColumn": 32,
        "path": "python/grass/script/task.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.task",
        "obj": "grassTask.__init__",
        "line": 50,
        "column": 20,
        "endLine": 50,
        "endColumn": 21,
        "path": "python/grass/script/task.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.script.task",
        "obj": "grassTask.__init__",
        "line": 51,
        "column": 22,
        "endLine": 51,
        "endColumn": 28,
        "path": "python/grass/script/task.py",
        "symbol": "use-list-literal",
        "message": "Consider using [] instead of list()",
        "message-id": "R1734"
    },
    {
        "type": "refactor",
        "module": "grass.script.task",
        "obj": "grassTask.__init__",
        "line": 54,
        "column": 21,
        "endLine": 54,
        "endColumn": 27,
        "path": "python/grass/script/task.py",
        "symbol": "use-list-literal",
        "message": "Consider using [] instead of list()",
        "message-id": "R1734"
    },
    {
        "type": "refactor",
        "module": "grass.script.task",
        "obj": "grassTask.__init__",
        "line": 55,
        "column": 24,
        "endLine": 55,
        "endColumn": 30,
        "path": "python/grass/script/task.py",
        "symbol": "use-list-literal",
        "message": "Consider using [] instead of list()",
        "message-id": "R1734"
    },
    {
        "type": "refactor",
        "module": "grass.script.task",
        "obj": "grassTask.get_name",
        "line": 91,
        "column": 12,
        "endLine": 94,
        "endColumn": 32,
        "path": "python/grass/script/task.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.script.task",
        "obj": "grassTask.get_description",
        "line": 104,
        "column": 12,
        "endLine": 107,
        "endColumn": 33,
        "path": "python/grass/script/task.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "grassTask.get_param",
        "line": 137,
        "column": 47,
        "endLine": 137,
        "endColumn": 57,
        "path": "python/grass/script/task.py",
        "symbol": "invalid-name",
        "message": "Argument name \"raiseError\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.script.task",
        "obj": "grassTask.get_param",
        "line": 155,
        "column": 8,
        "endLine": 161,
        "endColumn": 23,
        "path": "python/grass/script/task.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1720"
    },
    {
        "type": "error",
        "module": "grass.script.task",
        "obj": "grassTask.get_param",
        "line": 157,
        "column": 16,
        "endLine": 157,
        "endColumn": 75,
        "path": "python/grass/script/task.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.task",
        "obj": "grassTask.get_param",
        "line": 157,
        "column": 16,
        "endLine": 157,
        "endColumn": 17,
        "path": "python/grass/script/task.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "grassTask.get_flag",
        "line": 163,
        "column": 23,
        "endLine": 163,
        "endColumn": 28,
        "path": "python/grass/script/task.py",
        "symbol": "invalid-name",
        "message": "Argument name \"aFlag\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.script.task",
        "obj": "grassTask.get_flag",
        "line": 173,
        "column": 25,
        "endLine": 173,
        "endColumn": 48,
        "path": "python/grass/script/task.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.task",
        "obj": "grassTask.get_flag",
        "line": 173,
        "column": 25,
        "endLine": 173,
        "endColumn": 26,
        "path": "python/grass/script/task.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "grassTask.get_cmd_error",
        "line": 180,
        "column": 8,
        "endLine": 180,
        "endColumn": 17,
        "path": "python/grass/script/task.py",
        "symbol": "invalid-name",
        "message": "Variable name \"errorList\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.script.task",
        "obj": "grassTask.get_cmd_error",
        "line": 180,
        "column": 20,
        "endLine": 180,
        "endColumn": 26,
        "path": "python/grass/script/task.py",
        "symbol": "use-list-literal",
        "message": "Consider using [] instead of list()",
        "message-id": "R1734"
    },
    {
        "type": "error",
        "module": "grass.script.task",
        "obj": "grassTask.get_cmd_error",
        "line": 193,
        "column": 24,
        "endLine": 193,
        "endColumn": 72,
        "path": "python/grass/script/task.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.task",
        "obj": "grassTask.get_cmd_error",
        "line": 193,
        "column": 24,
        "endLine": 193,
        "endColumn": 25,
        "path": "python/grass/script/task.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "grassTask.get_cmd",
        "line": 199,
        "column": 22,
        "endLine": 199,
        "endColumn": 34,
        "path": "python/grass/script/task.py",
        "symbol": "invalid-name",
        "message": "Argument name \"ignoreErrors\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "grassTask.get_cmd",
        "line": 199,
        "column": 42,
        "endLine": 199,
        "endColumn": 56,
        "path": "python/grass/script/task.py",
        "symbol": "invalid-name",
        "message": "Argument name \"ignoreRequired\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "grassTask.get_cmd",
        "line": 199,
        "column": 64,
        "endLine": 199,
        "endColumn": 77,
        "path": "python/grass/script/task.py",
        "symbol": "invalid-name",
        "message": "Argument name \"ignoreDefault\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "grassTask.get_cmd",
        "line": 224,
        "column": 28,
        "endLine": 224,
        "endColumn": 35,
        "path": "python/grass/script/task.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "grassTask.get_cmd",
        "line": 226,
        "column": 28,
        "endLine": 226,
        "endColumn": 35,
        "path": "python/grass/script/task.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.script.task",
        "obj": "grassTask.get_cmd",
        "line": 226,
        "column": 50,
        "endLine": 226,
        "endColumn": 65,
        "path": "python/grass/script/task.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.task",
        "obj": "grassTask.get_cmd",
        "line": 226,
        "column": 50,
        "endLine": 226,
        "endColumn": 51,
        "path": "python/grass/script/task.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "grassTask.get_cmd",
        "line": 232,
        "column": 24,
        "endLine": 232,
        "endColumn": 31,
        "path": "python/grass/script/task.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "grassTask.get_cmd",
        "line": 237,
        "column": 24,
        "endLine": 237,
        "endColumn": 31,
        "path": "python/grass/script/task.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "grassTask.get_cmd",
        "line": 239,
        "column": 8,
        "endLine": 239,
        "endColumn": 15,
        "path": "python/grass/script/task.py",
        "symbol": "invalid-name",
        "message": "Variable name \"errList\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "grassTask.set_param",
        "line": 257,
        "column": 24,
        "endLine": 257,
        "endColumn": 30,
        "path": "python/grass/script/task.py",
        "symbol": "invalid-name",
        "message": "Argument name \"aParam\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "grassTask.set_param",
        "line": 257,
        "column": 32,
        "endLine": 257,
        "endColumn": 38,
        "path": "python/grass/script/task.py",
        "symbol": "invalid-name",
        "message": "Argument name \"aValue\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "grassTask.set_flag",
        "line": 266,
        "column": 23,
        "endLine": 266,
        "endColumn": 28,
        "path": "python/grass/script/task.py",
        "symbol": "invalid-name",
        "message": "Argument name \"aFlag\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "grassTask.set_flag",
        "line": 266,
        "column": 30,
        "endLine": 266,
        "endColumn": 36,
        "path": "python/grass/script/task.py",
        "symbol": "invalid-name",
        "message": "Argument name \"aValue\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "processTask",
        "line": 287,
        "column": 0,
        "endLine": 287,
        "endColumn": 17,
        "path": "python/grass/script/task.py",
        "symbol": "invalid-name",
        "message": "Class name \"processTask\" doesn't conform to PascalCase naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "processTask.__init__",
        "line": 299,
        "column": 40,
        "endLine": 299,
        "endColumn": 49,
        "path": "python/grass/script/task.py",
        "symbol": "invalid-name",
        "message": "Argument name \"blackList\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.script.task",
        "obj": "processTask._process_params",
        "line": 325,
        "column": 4,
        "endLine": 325,
        "endColumn": 23,
        "path": "python/grass/script/task.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (18/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "grass.script.task",
        "obj": "processTask._process_params",
        "line": 356,
        "column": 12,
        "endLine": 359,
        "endColumn": 32,
        "path": "python/grass/script/task.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'var = bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.script.task",
        "obj": "processTask._process_params",
        "line": 360,
        "column": 12,
        "endLine": 363,
        "endColumn": 32,
        "path": "python/grass/script/task.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'var = bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.script.task",
        "obj": "processTask._process_params",
        "line": 365,
        "column": 12,
        "endLine": 373,
        "endColumn": 30,
        "path": "python/grass/script/task.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'var = bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.script.task",
        "obj": "processTask._process_params",
        "line": 325,
        "column": 4,
        "endLine": 325,
        "endColumn": 23,
        "path": "python/grass/script/task.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (13/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.script.task",
        "obj": "processTask._process_flags",
        "line": 401,
        "column": 12,
        "endLine": 409,
        "endColumn": 30,
        "path": "python/grass/script/task.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'var = bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.script.task",
        "obj": "processTask._process_flags",
        "line": 411,
        "column": 12,
        "endLine": 414,
        "endColumn": 41,
        "path": "python/grass/script/task.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'var = bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.script.task",
        "obj": "processTask",
        "line": 287,
        "column": 0,
        "endLine": 287,
        "endColumn": 17,
        "path": "python/grass/script/task.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "convert_xml_to_utf8",
        "line": 442,
        "column": 0,
        "endLine": 442,
        "endColumn": 23,
        "path": "python/grass/script/task.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "error",
        "module": "grass.script.task",
        "obj": "get_interface_description",
        "line": 497,
        "column": 16,
        "endLine": 500,
        "endColumn": 17,
        "path": "python/grass/script/task.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.task",
        "obj": "get_interface_description",
        "line": 497,
        "column": 16,
        "endLine": 497,
        "endColumn": 17,
        "path": "python/grass/script/task.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.script.task",
        "obj": "get_interface_description",
        "line": 504,
        "column": 8,
        "endLine": 509,
        "endColumn": 9,
        "path": "python/grass/script/task.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise ScriptError(_(\"Unable to fetch interface description for command '<{cmd}>'.\\n\\nDetails: <{det}>\").format(cmd=cmd, det=e)) from e'",
        "message-id": "W0707"
    },
    {
        "type": "error",
        "module": "grass.script.task",
        "obj": "get_interface_description",
        "line": 505,
        "column": 12,
        "endLine": 508,
        "endColumn": 13,
        "path": "python/grass/script/task.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.task",
        "obj": "get_interface_description",
        "line": 505,
        "column": 12,
        "endLine": 505,
        "endColumn": 13,
        "path": "python/grass/script/task.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "parse_interface",
        "line": 521,
        "column": 46,
        "endLine": 521,
        "endColumn": 55,
        "path": "python/grass/script/task.py",
        "symbol": "invalid-name",
        "message": "Argument name \"blackList\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.script.task",
        "obj": "parse_interface",
        "line": 534,
        "column": 8,
        "endLine": 538,
        "endColumn": 9,
        "path": "python/grass/script/task.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise ScriptError(_('Cannot parse interface description of<{name}> module: {error}').format(name=name, error=error)) from error'",
        "message-id": "W0707"
    },
    {
        "type": "warning",
        "module": "grass.script.task",
        "obj": "",
        "line": 536,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/script/task.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.script.task",
        "obj": "parse_interface",
        "line": 535,
        "column": 12,
        "endLine": 537,
        "endColumn": 13,
        "path": "python/grass/script/task.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.task",
        "obj": "parse_interface",
        "line": 535,
        "column": 12,
        "endLine": 535,
        "endColumn": 13,
        "path": "python/grass/script/task.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.script.task",
        "obj": "command_info",
        "line": 588,
        "column": 18,
        "endLine": 588,
        "endColumn": 24,
        "path": "python/grass/script/task.py",
        "symbol": "use-list-literal",
        "message": "Consider using [] instead of list()",
        "message-id": "R1734"
    },
    {
        "type": "refactor",
        "module": "grass.script.task",
        "obj": "command_info",
        "line": 589,
        "column": 17,
        "endLine": 589,
        "endColumn": 23,
        "path": "python/grass/script/task.py",
        "symbol": "use-list-literal",
        "message": "Consider using [] instead of list()",
        "message-id": "R1734"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "cmdtuple_to_list",
        "line": 630,
        "column": 4,
        "endLine": 630,
        "endColumn": 11,
        "path": "python/grass/script/task.py",
        "symbol": "invalid-name",
        "message": "Variable name \"cmdList\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "cmdtuple_to_list",
        "line": 647,
        "column": 16,
        "endLine": 647,
        "endColumn": 22,
        "path": "python/grass/script/task.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.script.task",
        "obj": "cmdtuple_to_list",
        "line": 648,
        "column": 23,
        "endLine": 648,
        "endColumn": 30,
        "path": "python/grass/script/task.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.script.utils",
        "obj": "",
        "line": 466,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/script/utils.py",
        "symbol": "fixme",
        "message": "TODO: why dirname is checked first - the logic should be revised",
        "message-id": "W0511"
    },
    {
        "type": "refactor",
        "module": "grass.script.utils",
        "obj": "separator",
        "line": 68,
        "column": 4,
        "endLine": 77,
        "endColumn": 19,
        "path": "python/grass/script/utils.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.script.utils",
        "obj": "separator",
        "line": 74,
        "column": 9,
        "endLine": 74,
        "endColumn": 37,
        "path": "python/grass/script/utils.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'sep in ('tab', '\\\\t')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.script.utils",
        "obj": "separator",
        "line": 76,
        "column": 9,
        "endLine": 76,
        "endColumn": 41,
        "path": "python/grass/script/utils.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'sep in ('newline', '\\\\n')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "convention",
        "module": "grass.script.utils",
        "obj": "diff_files",
        "line": 89,
        "column": 4,
        "endLine": 89,
        "endColumn": 18,
        "path": "python/grass/script/utils.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (difflib)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "grass.script.utils",
        "obj": "diff_files",
        "line": 92,
        "column": 11,
        "endLine": 92,
        "endColumn": 32,
        "path": "python/grass/script/utils.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "grass.script.utils",
        "obj": "diff_files",
        "line": 93,
        "column": 11,
        "endLine": 93,
        "endColumn": 32,
        "path": "python/grass/script/utils.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.script.utils",
        "obj": "diff_files",
        "line": 92,
        "column": 11,
        "endLine": 92,
        "endColumn": 32,
        "path": "python/grass/script/utils.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "refactor",
        "module": "grass.script.utils",
        "obj": "diff_files",
        "line": 93,
        "column": 11,
        "endLine": 93,
        "endColumn": 32,
        "path": "python/grass/script/utils.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.script.utils",
        "obj": "try_remove",
        "line": 106,
        "column": 11,
        "endLine": 106,
        "endColumn": 20,
        "path": "python/grass/script/utils.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "grass.script.utils",
        "obj": "try_rmdir",
        "line": 118,
        "column": 11,
        "endLine": 118,
        "endColumn": 20,
        "path": "python/grass/script/utils.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "grass.script.utils",
        "obj": "_get_encoding",
        "line": 165,
        "column": 19,
        "endLine": 165,
        "endColumn": 44,
        "path": "python/grass/script/utils.py",
        "symbol": "deprecated-method",
        "message": "Using deprecated method getdefaultlocale()",
        "message-id": "W4902"
    },
    {
        "type": "warning",
        "module": "grass.script.utils",
        "obj": "encode",
        "line": 201,
        "column": 11,
        "endLine": 201,
        "endColumn": 17,
        "path": "python/grass/script/utils.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'string' from outer scope (line 29)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "grass.script.utils",
        "obj": "get_num_suffix",
        "line": 304,
        "column": 11,
        "endLine": 304,
        "endColumn": 31,
        "path": "python/grass/script/utils.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.script.utils",
        "obj": "get_lib_path",
        "line": 366,
        "column": 4,
        "endLine": 366,
        "endColumn": 40,
        "path": "python/grass/script/utils.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (os.path.isdir, os.path.join, os.path.sep)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "grass.script.utils",
        "obj": "get_lib_path",
        "line": 367,
        "column": 4,
        "endLine": 367,
        "endColumn": 25,
        "path": "python/grass/script/utils.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (os.getenv)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "grass.script.utils",
        "obj": "set_path",
        "line": 464,
        "column": 4,
        "endLine": 464,
        "endColumn": 14,
        "path": "python/grass/script/utils.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (sys)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "grass.script.utils",
        "obj": "set_path",
        "line": 480,
        "column": 16,
        "endLine": 481,
        "endColumn": 37,
        "path": "python/grass/script/utils.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.script.utils",
        "obj": "legalize_vector_name",
        "line": 523,
        "column": 15,
        "endLine": 523,
        "endColumn": 40,
        "path": "python/grass/script/utils.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.script.utils",
        "obj": "legalize_vector_name",
        "line": 527,
        "column": 15,
        "endLine": 527,
        "endColumn": 24,
        "path": "python/grass/script/utils.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.script.utils",
        "obj": "append_node_pid",
        "line": 559,
        "column": 11,
        "endLine": 559,
        "endColumn": 32,
        "path": "python/grass/script/utils.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.script.utils",
        "obj": "append_node_pid",
        "line": 531,
        "column": 20,
        "endLine": 531,
        "endColumn": 24,
        "path": "python/grass/script/utils.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'name'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.script.utils",
        "obj": "append_node_pid",
        "line": 557,
        "column": 4,
        "endLine": 557,
        "endColumn": 8,
        "path": "python/grass/script/utils.py",
        "symbol": "possibly-unused-variable",
        "message": "Possibly unused variable 'node'",
        "message-id": "W0641"
    },
    {
        "type": "warning",
        "module": "grass.script.utils",
        "obj": "append_node_pid",
        "line": 558,
        "column": 4,
        "endLine": 558,
        "endColumn": 7,
        "path": "python/grass/script/utils.py",
        "symbol": "possibly-unused-variable",
        "message": "Possibly unused variable 'pid'",
        "message-id": "W0641"
    },
    {
        "type": "convention",
        "module": "grass.script.utils",
        "obj": "append_uuid",
        "line": 582,
        "column": 11,
        "endLine": 582,
        "endColumn": 28,
        "path": "python/grass/script/utils.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.script.utils",
        "obj": "append_uuid",
        "line": 562,
        "column": 16,
        "endLine": 562,
        "endColumn": 20,
        "path": "python/grass/script/utils.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'name'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.script.utils",
        "obj": "append_uuid",
        "line": 581,
        "column": 4,
        "endLine": 581,
        "endColumn": 10,
        "path": "python/grass/script/utils.py",
        "symbol": "possibly-unused-variable",
        "message": "Possibly unused variable 'suffix'",
        "message-id": "W0641"
    },
    {
        "type": "convention",
        "module": "grass.script.utils",
        "obj": "append_random",
        "line": 613,
        "column": 16,
        "endLine": 615,
        "endColumn": 63,
        "path": "python/grass/script/utils.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.script.utils",
        "obj": "append_random",
        "line": 623,
        "column": 11,
        "endLine": 623,
        "endColumn": 28,
        "path": "python/grass/script/utils.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.script.utils",
        "obj": "append_random",
        "line": 622,
        "column": 4,
        "endLine": 622,
        "endColumn": 10,
        "path": "python/grass/script/utils.py",
        "symbol": "possibly-unused-variable",
        "message": "Possibly unused variable 'suffix'",
        "message-id": "W0641"
    },
    {
        "type": "convention",
        "module": "grass.script.vector",
        "obj": "",
        "line": 238,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/script/vector.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "grass.script.vector",
        "obj": "vector_db",
        "line": 34,
        "column": 14,
        "endLine": 34,
        "endColumn": 17,
        "path": "python/grass/script/vector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.script.vector",
        "obj": "vector_layer_db",
        "line": 77,
        "column": 20,
        "endLine": 77,
        "endColumn": 23,
        "path": "python/grass/script/vector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.script.vector",
        "obj": "vector_layer_db",
        "line": 90,
        "column": 14,
        "endLine": 90,
        "endColumn": 63,
        "path": "python/grass/script/vector.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.vector",
        "obj": "vector_layer_db",
        "line": 90,
        "column": 14,
        "endLine": 90,
        "endColumn": 15,
        "path": "python/grass/script/vector.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.script.vector",
        "obj": "vector_columns",
        "line": 98,
        "column": 36,
        "endLine": 98,
        "endColumn": 43,
        "path": "python/grass/script/vector.py",
        "symbol": "invalid-name",
        "message": "Argument name \"getDict\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.script.vector",
        "obj": "vector_columns",
        "line": 98,
        "column": 19,
        "endLine": 98,
        "endColumn": 22,
        "path": "python/grass/script/vector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.script.vector",
        "obj": "vector_columns",
        "line": 133,
        "column": 17,
        "endLine": 133,
        "endColumn": 23,
        "path": "python/grass/script/vector.py",
        "symbol": "use-dict-literal",
        "message": "Consider using '{}' instead of a call to 'dict'.",
        "message-id": "R1735"
    },
    {
        "type": "refactor",
        "module": "grass.script.vector",
        "obj": "vector_columns",
        "line": 135,
        "column": 17,
        "endLine": 135,
        "endColumn": 23,
        "path": "python/grass/script/vector.py",
        "symbol": "use-list-literal",
        "message": "Consider using [] instead of list()",
        "message-id": "R1734"
    },
    {
        "type": "warning",
        "module": "grass.script.vector",
        "obj": "vector_history",
        "line": 148,
        "column": 19,
        "endLine": 148,
        "endColumn": 22,
        "path": "python/grass/script/vector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.script.vector",
        "obj": "vector_info_topo",
        "line": 167,
        "column": 21,
        "endLine": 167,
        "endColumn": 24,
        "path": "python/grass/script/vector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.script.vector",
        "obj": "vector_info",
        "line": 190,
        "column": 16,
        "endLine": 190,
        "endColumn": 19,
        "path": "python/grass/script/vector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.script.vector",
        "obj": "vector_db_select",
        "line": 231,
        "column": 21,
        "endLine": 231,
        "endColumn": 24,
        "path": "python/grass/script/vector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.script.vector",
        "obj": "vector_db_select",
        "line": 255,
        "column": 12,
        "endLine": 255,
        "endColumn": 64,
        "path": "python/grass/script/vector.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.vector",
        "obj": "vector_db_select",
        "line": 255,
        "column": 12,
        "endLine": 255,
        "endColumn": 13,
        "path": "python/grass/script/vector.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.script.vector",
        "obj": "vector_db_select",
        "line": 271,
        "column": 14,
        "endLine": 271,
        "endColumn": 44,
        "path": "python/grass/script/vector.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.vector",
        "obj": "vector_db_select",
        "line": 271,
        "column": 14,
        "endLine": 271,
        "endColumn": 15,
        "path": "python/grass/script/vector.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.script.vector",
        "obj": "vector_db_select",
        "line": 286,
        "column": 30,
        "endLine": 286,
        "endColumn": 39,
        "path": "python/grass/script/vector.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'key_index' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "convention",
        "module": "grass.script.vector",
        "obj": "",
        "line": 296,
        "column": 0,
        "endLine": 296,
        "endColumn": 4,
        "path": "python/grass/script/vector.py",
        "symbol": "invalid-name",
        "message": "Constant name \"json\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.script.vector",
        "obj": "",
        "line": 297,
        "column": 0,
        "endLine": 297,
        "endColumn": 11,
        "path": "python/grass/script/vector.py",
        "symbol": "invalid-name",
        "message": "Constant name \"orderedDict\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.script.vector",
        "obj": "vector_what",
        "line": 300,
        "column": 0,
        "endLine": 300,
        "endColumn": 15,
        "path": "python/grass/script/vector.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.script.vector",
        "obj": "vector_what",
        "line": 300,
        "column": 0,
        "endLine": 300,
        "endColumn": 15,
        "path": "python/grass/script/vector.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (29/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.script.vector",
        "obj": "vector_what",
        "line": 301,
        "column": 4,
        "endLine": 301,
        "endColumn": 7,
        "path": "python/grass/script/vector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.script.vector",
        "obj": "vector_what",
        "line": 436,
        "column": 8,
        "endLine": 436,
        "endColumn": 19,
        "path": "python/grass/script/vector.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'json' from outer scope (line 296)",
        "message-id": "W0621"
    },
    {
        "type": "error",
        "module": "grass.script.vector",
        "obj": "vector_what",
        "line": 392,
        "column": 16,
        "endLine": 395,
        "endColumn": 17,
        "path": "python/grass/script/vector.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.vector",
        "obj": "vector_what",
        "line": 392,
        "column": 16,
        "endLine": 392,
        "endColumn": 17,
        "path": "python/grass/script/vector.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.script.vector",
        "obj": "vector_what",
        "line": 400,
        "column": 17,
        "endLine": 400,
        "endColumn": 23,
        "path": "python/grass/script/vector.py",
        "symbol": "use-list-literal",
        "message": "Consider using [] instead of list()",
        "message-id": "R1734"
    },
    {
        "type": "convention",
        "module": "grass.script.vector",
        "obj": "vector_what",
        "line": 402,
        "column": 26,
        "endLine": 402,
        "endColumn": 33,
        "path": "python/grass/script/vector.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.script.vector",
        "obj": "vector_what",
        "line": 405,
        "column": 30,
        "endLine": 405,
        "endColumn": 37,
        "path": "python/grass/script/vector.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.script.vector",
        "obj": "vector_what",
        "line": 412,
        "column": 4,
        "endLine": 412,
        "endColumn": 13,
        "path": "python/grass/script/vector.py",
        "symbol": "invalid-name",
        "message": "Variable name \"cmdParams\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.script.vector",
        "obj": "vector_what",
        "line": 412,
        "column": 16,
        "endLine": 419,
        "endColumn": 5,
        "path": "python/grass/script/vector.py",
        "symbol": "use-dict-literal",
        "message": "Consider using '{\"quiet\": True, \"flags\": flags, \"map\": ','.join(map_list), \"layer\": ','.join(layer_list), ... }' instead of a call to 'dict'.",
        "message-id": "R1735"
    },
    {
        "type": "warning",
        "module": "grass.script.vector",
        "obj": "vector_what",
        "line": 426,
        "column": 8,
        "endLine": 426,
        "endColumn": 32,
        "path": "python/grass/script/vector.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise ScriptError(e.msg) from e'",
        "message-id": "W0707"
    },
    {
        "type": "refactor",
        "module": "grass.script.vector",
        "obj": "vector_what",
        "line": 428,
        "column": 11,
        "endLine": 428,
        "endColumn": 17,
        "path": "python/grass/script/vector.py",
        "symbol": "use-list-literal",
        "message": "Consider using [] instead of list()",
        "message-id": "R1734"
    },
    {
        "type": "warning",
        "module": "grass.script.vector",
        "obj": "vector_what",
        "line": 433,
        "column": 4,
        "endLine": 433,
        "endColumn": 15,
        "path": "python/grass/script/vector.py",
        "symbol": "global-statement",
        "message": "Using the global statement",
        "message-id": "W0603"
    },
    {
        "type": "warning",
        "module": "grass.script.vector",
        "obj": "vector_what",
        "line": 434,
        "column": 4,
        "endLine": 434,
        "endColumn": 22,
        "path": "python/grass/script/vector.py",
        "symbol": "global-statement",
        "message": "Using the global statement",
        "message-id": "W0603"
    },
    {
        "type": "convention",
        "module": "grass.script.vector",
        "obj": "vector_what",
        "line": 436,
        "column": 8,
        "endLine": 436,
        "endColumn": 19,
        "path": "python/grass/script/vector.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (json)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "grass.script.vector",
        "obj": "vector_what",
        "line": 439,
        "column": 12,
        "endLine": 439,
        "endColumn": 47,
        "path": "python/grass/script/vector.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (collections.OrderedDict)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "grass.script.vector",
        "obj": "vector_what",
        "line": 454,
        "column": 8,
        "endLine": 456,
        "endColumn": 9,
        "path": "python/grass/script/vector.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'except ValueError as exc' and 'raise ScriptError(_('v.what output is not valid JSON format:\\n {ret}').format(ret=ret)) from exc'",
        "message-id": "W0707"
    },
    {
        "type": "error",
        "module": "grass.script.vector",
        "obj": "vector_what",
        "line": 455,
        "column": 12,
        "endLine": 455,
        "endColumn": 64,
        "path": "python/grass/script/vector.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.script.vector",
        "obj": "vector_what",
        "line": 455,
        "column": 12,
        "endLine": 455,
        "endColumn": 13,
        "path": "python/grass/script/vector.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.script.vector",
        "obj": "vector_what",
        "line": 458,
        "column": 4,
        "endLine": 480,
        "endColumn": 33,
        "path": "python/grass/script/vector.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "grass.script.vector",
        "obj": "vector_what",
        "line": 300,
        "column": 0,
        "endLine": 300,
        "endColumn": 15,
        "path": "python/grass/script/vector.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (33/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.script.vector",
        "obj": "vector_what",
        "line": 300,
        "column": 0,
        "endLine": 300,
        "endColumn": 15,
        "path": "python/grass/script/vector.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (73/50)",
        "message-id": "R0915"
    },
    {
        "type": "convention",
        "module": "grass.script.vector",
        "obj": "",
        "line": 31,
        "column": 0,
        "endLine": 31,
        "endColumn": 59,
        "path": "python/grass/script/vector.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.exceptions.CalledModuleError\" should be placed before local imports \"utils.parse_key_val\", \"core.run_command\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.semantic_label",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/semantic_label/__init__.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "grass.semantic_label.reader",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/semantic_label/reader.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "grass.semantic_label.reader",
        "obj": "SemanticLabelReaderError",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 30,
        "path": "python/grass/semantic_label/reader.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "grass.semantic_label.reader",
        "obj": "SemanticLabelReader._read_config",
        "line": 35,
        "column": 22,
        "endLine": 35,
        "endColumn": 28,
        "path": "python/grass/semantic_label/reader.py",
        "symbol": "use-dict-literal",
        "message": "Consider using '{}' instead of a call to 'dict'.",
        "message-id": "R1735"
    },
    {
        "type": "warning",
        "module": "grass.semantic_label.reader",
        "obj": "SemanticLabelReader._read_config",
        "line": 38,
        "column": 21,
        "endLine": 38,
        "endColumn": 36,
        "path": "python/grass/semantic_label/reader.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "grass.semantic_label.reader",
        "obj": "SemanticLabelReader._read_config",
        "line": 41,
        "column": 16,
        "endLine": 43,
        "endColumn": 17,
        "path": "python/grass/semantic_label/reader.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise SemanticLabelReaderError(\"Unable to parse '{}': {}\".format(json_file, e)) from e'",
        "message-id": "W0707"
    },
    {
        "type": "convention",
        "module": "grass.semantic_label.reader",
        "obj": "SemanticLabelReader._read_config",
        "line": 42,
        "column": 20,
        "endLine": 42,
        "endColumn": 46,
        "path": "python/grass/semantic_label/reader.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.semantic_label.reader",
        "obj": "SemanticLabelReader._check_config",
        "line": 62,
        "column": 24,
        "endLine": 62,
        "endColumn": 66,
        "path": "python/grass/semantic_label/reader.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.semantic_label.reader",
        "obj": "SemanticLabelReader._print_label_extended.print_kv",
        "line": 79,
        "column": 22,
        "endLine": 79,
        "endColumn": 29,
        "path": "python/grass/semantic_label/reader.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.semantic_label.reader",
        "obj": "SemanticLabelReader._print_label_extended.print_kv",
        "line": 83,
        "column": 22,
        "endLine": 83,
        "endColumn": 32,
        "path": "python/grass/semantic_label/reader.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.semantic_label.reader",
        "obj": "SemanticLabelReader._print_label_extended",
        "line": 86,
        "column": 14,
        "endLine": 86,
        "endColumn": 27,
        "path": "python/grass/semantic_label/reader.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.semantic_label.reader",
        "obj": "SemanticLabelReader._print_label",
        "line": 93,
        "column": 29,
        "endLine": 93,
        "endColumn": 34,
        "path": "python/grass/semantic_label/reader.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.semantic_label.reader",
        "obj": "SemanticLabelReader.print_info",
        "line": 119,
        "column": 20,
        "endLine": 119,
        "endColumn": 83,
        "path": "python/grass/semantic_label/reader.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise SemanticLabelReaderError('Invalid pattern: {}'.format(e)) from e'",
        "message-id": "W0707"
    },
    {
        "type": "convention",
        "module": "grass.semantic_label.reader",
        "obj": "SemanticLabelReader.print_info",
        "line": 119,
        "column": 51,
        "endLine": 119,
        "endColumn": 72,
        "path": "python/grass/semantic_label/reader.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.semantic_label.reader",
        "obj": "SemanticLabelReader.print_info",
        "line": 124,
        "column": 24,
        "endLine": 124,
        "endColumn": 53,
        "path": "python/grass/semantic_label/reader.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.semantic_label.reader",
        "obj": "SemanticLabelReader.print_info",
        "line": 133,
        "column": 30,
        "endLine": 133,
        "endColumn": 38,
        "path": "python/grass/semantic_label/reader.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.semantic_label.reader",
        "obj": "SemanticLabelReader.print_info",
        "line": 158,
        "column": 16,
        "endLine": 158,
        "endColumn": 60,
        "path": "python/grass/semantic_label/reader.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.semantic_label.reader",
        "obj": "SemanticLabelReader.print_info",
        "line": 96,
        "column": 4,
        "endLine": 96,
        "endColumn": 18,
        "path": "python/grass/semantic_label/reader.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (17/12)",
        "message-id": "R0912"
    },
    {
        "type": "convention",
        "module": "grass.semantic_label.reader",
        "obj": "SemanticLabelReader.get_bands",
        "line": 199,
        "column": 33,
        "endLine": 199,
        "endColumn": 40,
        "path": "python/grass/semantic_label/reader.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/__init__.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.get_number_of_relations",
        "line": 80,
        "column": 8,
        "endLine": 88,
        "endColumn": 13,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.print_topology_info",
        "line": 114,
        "column": 4,
        "endLine": 114,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.print_topology_shell_info",
        "line": 120,
        "column": 4,
        "endLine": 120,
        "endColumn": 33,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.set_id",
        "line": 229,
        "column": 8,
        "endLine": 229,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.set_id",
        "line": 231,
        "column": 8,
        "endLine": 231,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.set_id",
        "line": 232,
        "column": 8,
        "endLine": 232,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.set_id",
        "line": 234,
        "column": 12,
        "endLine": 234,
        "endColumn": 30,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'stds_register' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.get_id",
        "line": 240,
        "column": 15,
        "endLine": 240,
        "endColumn": 24,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.get_name",
        "line": 246,
        "column": 15,
        "endLine": 246,
        "endColumn": 24,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.get_mapset",
        "line": 252,
        "column": 15,
        "endLine": 252,
        "endColumn": 24,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.get_absolute_time",
        "line": 278,
        "column": 16,
        "endLine": 278,
        "endColumn": 34,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'absolute_time' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.get_absolute_time",
        "line": 279,
        "column": 14,
        "endLine": 279,
        "endColumn": 32,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'absolute_time' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.get_relative_time",
        "line": 295,
        "column": 16,
        "endLine": 295,
        "endColumn": 34,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'relative_time' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.get_relative_time",
        "line": 296,
        "column": 14,
        "endLine": 296,
        "endColumn": 32,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'relative_time' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.get_relative_time",
        "line": 297,
        "column": 15,
        "endLine": 297,
        "endColumn": 33,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'relative_time' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.get_relative_time_unit",
        "line": 305,
        "column": 15,
        "endLine": 305,
        "endColumn": 33,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'relative_time' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.get_temporal_type",
        "line": 340,
        "column": 15,
        "endLine": 340,
        "endColumn": 24,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.get_spatial_extent_as_tuple",
        "line": 351,
        "column": 15,
        "endLine": 351,
        "endColumn": 34,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.get_spatial_extent",
        "line": 355,
        "column": 15,
        "endLine": 355,
        "endColumn": 34,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.select",
        "line": 375,
        "column": 8,
        "endLine": 375,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.select",
        "line": 377,
        "column": 8,
        "endLine": 377,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.select",
        "line": 378,
        "column": 8,
        "endLine": 378,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.select",
        "line": 380,
        "column": 12,
        "endLine": 380,
        "endColumn": 30,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'stds_register' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.is_in_db",
        "line": 392,
        "column": 15,
        "endLine": 392,
        "endColumn": 24,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.insert",
        "line": 421,
        "column": 20,
        "endLine": 421,
        "endColumn": 29,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.insert",
        "line": 423,
        "column": 21,
        "endLine": 423,
        "endColumn": 40,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.insert",
        "line": 424,
        "column": 21,
        "endLine": 424,
        "endColumn": 34,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.insert",
        "line": 426,
        "column": 25,
        "endLine": 426,
        "endColumn": 43,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'stds_register' member",
        "message-id": "E1101"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.insert",
        "line": 428,
        "column": 27,
        "endLine": 428,
        "endColumn": 43,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.update",
        "line": 456,
        "column": 20,
        "endLine": 456,
        "endColumn": 29,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.update",
        "line": 458,
        "column": 21,
        "endLine": 458,
        "endColumn": 40,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.update",
        "line": 459,
        "column": 21,
        "endLine": 459,
        "endColumn": 34,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.update",
        "line": 462,
        "column": 25,
        "endLine": 462,
        "endColumn": 43,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'stds_register' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.update_all",
        "line": 490,
        "column": 20,
        "endLine": 490,
        "endColumn": 29,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.update_all",
        "line": 494,
        "column": 21,
        "endLine": 494,
        "endColumn": 40,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.update_all",
        "line": 495,
        "column": 21,
        "endLine": 495,
        "endColumn": 34,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.update_all",
        "line": 498,
        "column": 25,
        "endLine": 498,
        "endColumn": 43,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'stds_register' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.is_time_absolute",
        "line": 517,
        "column": 8,
        "endLine": 520,
        "endColumn": 23,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.is_time_absolute",
        "line": 517,
        "column": 30,
        "endLine": 517,
        "endColumn": 39,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.is_time_absolute",
        "line": 518,
        "column": 19,
        "endLine": 518,
        "endColumn": 28,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.is_time_relative",
        "line": 527,
        "column": 8,
        "endLine": 530,
        "endColumn": 23,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.is_time_relative",
        "line": 527,
        "column": 30,
        "endLine": 527,
        "endColumn": 39,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.is_time_relative",
        "line": 528,
        "column": 19,
        "endLine": 528,
        "endColumn": 28,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.get_temporal_extent",
        "line": 535,
        "column": 19,
        "endLine": 535,
        "endColumn": 37,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'absolute_time' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset.get_temporal_extent",
        "line": 537,
        "column": 19,
        "endLine": 537,
        "endColumn": 37,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractDataset' has no 'relative_time' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDataset",
        "line": 25,
        "column": 0,
        "endLine": 25,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "too-many-public-methods",
        "message": "Too many public methods (44/20)",
        "message-id": "R0904"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__init__",
        "line": 597,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__lt__",
        "line": 601,
        "column": 8,
        "endLine": 601,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__lt__",
        "line": 601,
        "column": 16,
        "endLine": 601,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"endA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__lt__",
        "line": 602,
        "column": 8,
        "endLine": 602,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__lt__",
        "line": 602,
        "column": 16,
        "endLine": 602,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"endB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__lt__",
        "line": 601,
        "column": 16,
        "endLine": 601,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'endA'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__lt__",
        "line": 602,
        "column": 16,
        "endLine": 602,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'endB'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__gt__",
        "line": 606,
        "column": 8,
        "endLine": 606,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__gt__",
        "line": 606,
        "column": 16,
        "endLine": 606,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"endA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__gt__",
        "line": 607,
        "column": 8,
        "endLine": 607,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__gt__",
        "line": 607,
        "column": 16,
        "endLine": 607,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"endB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__gt__",
        "line": 606,
        "column": 16,
        "endLine": 606,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'endA'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__gt__",
        "line": 607,
        "column": 16,
        "endLine": 607,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'endB'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__eq__",
        "line": 611,
        "column": 8,
        "endLine": 611,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__eq__",
        "line": 611,
        "column": 16,
        "endLine": 611,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"endA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__eq__",
        "line": 612,
        "column": 8,
        "endLine": 612,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__eq__",
        "line": 612,
        "column": 16,
        "endLine": 612,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"endB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__eq__",
        "line": 611,
        "column": 16,
        "endLine": 611,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'endA'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__eq__",
        "line": 612,
        "column": 16,
        "endLine": 612,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'endB'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__le__",
        "line": 616,
        "column": 8,
        "endLine": 616,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__le__",
        "line": 616,
        "column": 16,
        "endLine": 616,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"endA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__le__",
        "line": 617,
        "column": 8,
        "endLine": 617,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__le__",
        "line": 617,
        "column": 16,
        "endLine": 617,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"endB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__le__",
        "line": 616,
        "column": 16,
        "endLine": 616,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'endA'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__le__",
        "line": 617,
        "column": 16,
        "endLine": 617,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'endB'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__ge__",
        "line": 621,
        "column": 8,
        "endLine": 621,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__ge__",
        "line": 621,
        "column": 16,
        "endLine": 621,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"endA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__ge__",
        "line": 622,
        "column": 8,
        "endLine": 622,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__ge__",
        "line": 622,
        "column": 16,
        "endLine": 622,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"endB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__ge__",
        "line": 621,
        "column": 16,
        "endLine": 621,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'endA'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__ge__",
        "line": 622,
        "column": 16,
        "endLine": 622,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'endB'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__ne__",
        "line": 626,
        "column": 8,
        "endLine": 626,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__ne__",
        "line": 626,
        "column": 16,
        "endLine": 626,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"endA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__ne__",
        "line": 627,
        "column": 8,
        "endLine": 627,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__ne__",
        "line": 627,
        "column": 16,
        "endLine": 627,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"endB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__ne__",
        "line": 626,
        "column": 16,
        "endLine": 626,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'endA'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyStartTime.__ne__",
        "line": 627,
        "column": 16,
        "endLine": 627,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'endB'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__init__",
        "line": 649,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__lt__",
        "line": 653,
        "column": 8,
        "endLine": 653,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__lt__",
        "line": 653,
        "column": 16,
        "endLine": 653,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"endA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__lt__",
        "line": 654,
        "column": 8,
        "endLine": 654,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__lt__",
        "line": 654,
        "column": 16,
        "endLine": 654,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"endB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__lt__",
        "line": 653,
        "column": 8,
        "endLine": 653,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'startA'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__lt__",
        "line": 654,
        "column": 8,
        "endLine": 654,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'startB'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__gt__",
        "line": 658,
        "column": 8,
        "endLine": 658,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__gt__",
        "line": 658,
        "column": 16,
        "endLine": 658,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"endA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__gt__",
        "line": 659,
        "column": 8,
        "endLine": 659,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__gt__",
        "line": 659,
        "column": 16,
        "endLine": 659,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"endB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__gt__",
        "line": 658,
        "column": 8,
        "endLine": 658,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'startA'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__gt__",
        "line": 659,
        "column": 8,
        "endLine": 659,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'startB'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__eq__",
        "line": 663,
        "column": 8,
        "endLine": 663,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__eq__",
        "line": 663,
        "column": 16,
        "endLine": 663,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"endA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__eq__",
        "line": 664,
        "column": 8,
        "endLine": 664,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__eq__",
        "line": 664,
        "column": 16,
        "endLine": 664,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"endB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__eq__",
        "line": 663,
        "column": 8,
        "endLine": 663,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'startA'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__eq__",
        "line": 664,
        "column": 8,
        "endLine": 664,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'startB'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__le__",
        "line": 668,
        "column": 8,
        "endLine": 668,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__le__",
        "line": 668,
        "column": 16,
        "endLine": 668,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"endA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__le__",
        "line": 669,
        "column": 8,
        "endLine": 669,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__le__",
        "line": 669,
        "column": 16,
        "endLine": 669,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"endB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__le__",
        "line": 668,
        "column": 8,
        "endLine": 668,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'startA'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__le__",
        "line": 669,
        "column": 8,
        "endLine": 669,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'startB'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__ge__",
        "line": 673,
        "column": 8,
        "endLine": 673,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__ge__",
        "line": 673,
        "column": 16,
        "endLine": 673,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"endA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__ge__",
        "line": 674,
        "column": 8,
        "endLine": 674,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__ge__",
        "line": 674,
        "column": 16,
        "endLine": 674,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"endB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__ge__",
        "line": 673,
        "column": 8,
        "endLine": 673,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'startA'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__ge__",
        "line": 674,
        "column": 8,
        "endLine": 674,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'startB'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__ne__",
        "line": 678,
        "column": 8,
        "endLine": 678,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__ne__",
        "line": 678,
        "column": 16,
        "endLine": 678,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"endA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__ne__",
        "line": 679,
        "column": 8,
        "endLine": 679,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"startB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__ne__",
        "line": 679,
        "column": 16,
        "endLine": 679,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"endB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__ne__",
        "line": 678,
        "column": 8,
        "endLine": 678,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'startA'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_dataset",
        "obj": "AbstractDatasetComparisonKeyEndTime.__ne__",
        "line": 679,
        "column": 8,
        "endLine": 679,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'startB'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "",
        "line": 281,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "",
        "line": 282,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "",
        "line": 284,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "",
        "line": 287,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "",
        "line": 288,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "",
        "line": 290,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "",
        "line": 293,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "",
        "line": 294,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "",
        "line": 296,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "",
        "line": 299,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "",
        "line": 322,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1261/1000)",
        "message-id": "C0302"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "",
        "line": 1009,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "fixme",
        "message": "TODO: it must be possible to delete a map from a temporal",
        "message-id": "W0511"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset._convert_timestamp",
        "line": 142,
        "column": 25,
        "endLine": 142,
        "endColumn": 32,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset._convert_timestamp",
        "line": 145,
        "column": 20,
        "endLine": 145,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset._convert_timestamp",
        "line": 147,
        "column": 22,
        "endLine": 147,
        "endColumn": 29,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset._convert_timestamp",
        "line": 148,
        "column": 25,
        "endLine": 148,
        "endColumn": 32,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.get_map_id",
        "line": 165,
        "column": 15,
        "endLine": 165,
        "endColumn": 24,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.build_id_from_search_path",
        "line": 225,
        "column": 20,
        "endLine": 228,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.build_id_from_search_path",
        "line": 225,
        "column": 20,
        "endLine": 225,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.build_id_from_search_path",
        "line": 231,
        "column": 8,
        "endLine": 234,
        "endColumn": 37,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.build_id",
        "line": 257,
        "column": 8,
        "endLine": 260,
        "endColumn": 37,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.get_layer",
        "line": 267,
        "column": 15,
        "endLine": 267,
        "endColumn": 24,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.print_self",
        "line": 271,
        "column": 8,
        "endLine": 271,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.print_self",
        "line": 273,
        "column": 8,
        "endLine": 273,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.print_self",
        "line": 274,
        "column": 8,
        "endLine": 274,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.print_self",
        "line": 275,
        "column": 8,
        "endLine": 275,
        "endColumn": 26,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'stds_register' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.print_info",
        "line": 301,
        "column": 8,
        "endLine": 301,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.print_info",
        "line": 305,
        "column": 8,
        "endLine": 305,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.print_info",
        "line": 306,
        "column": 8,
        "endLine": 306,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.print_info",
        "line": 318,
        "column": 30,
        "endLine": 318,
        "endColumn": 35,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.print_shell_info",
        "line": 327,
        "column": 8,
        "endLine": 327,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.print_shell_info",
        "line": 329,
        "column": 8,
        "endLine": 329,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.print_shell_info",
        "line": 330,
        "column": 8,
        "endLine": 330,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.print_shell_info",
        "line": 339,
        "column": 30,
        "endLine": 339,
        "endColumn": 35,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.update",
        "line": 367,
        "column": 4,
        "endLine": 367,
        "endColumn": 14,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "arguments-differ",
        "message": "Number of parameters was 4 in 'AbstractDataset.update' and is now 3 in overriding 'AbstractMapDataset.update' method",
        "message-id": "W0221"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.update_all",
        "line": 386,
        "column": 4,
        "endLine": 386,
        "endColumn": 18,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "arguments-differ",
        "message": "Number of parameters was 4 in 'AbstractDataset.update_all' and is now 3 in overriding 'AbstractMapDataset.update_all' method",
        "message-id": "W0221"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_time_to_absolute",
        "line": 408,
        "column": 8,
        "endLine": 408,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_time_to_relative",
        "line": 412,
        "column": 8,
        "endLine": 412,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_absolute_time",
        "line": 431,
        "column": 12,
        "endLine": 452,
        "endColumn": 28,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_absolute_time",
        "line": 433,
        "column": 20,
        "endLine": 436,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_absolute_time",
        "line": 433,
        "column": 20,
        "endLine": 433,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_absolute_time",
        "line": 446,
        "column": 20,
        "endLine": 449,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_absolute_time",
        "line": 446,
        "column": 20,
        "endLine": 446,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_absolute_time",
        "line": 455,
        "column": 12,
        "endLine": 473,
        "endColumn": 28,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_absolute_time",
        "line": 457,
        "column": 20,
        "endLine": 460,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_absolute_time",
        "line": 457,
        "column": 20,
        "endLine": 457,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "",
        "line": 470,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_absolute_time",
        "line": 470,
        "column": 20,
        "endLine": 470,
        "endColumn": 87,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_absolute_time",
        "line": 470,
        "column": 20,
        "endLine": 470,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_absolute_time",
        "line": 477,
        "column": 16,
        "endLine": 499,
        "endColumn": 32,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_absolute_time",
        "line": 479,
        "column": 24,
        "endLine": 483,
        "endColumn": 25,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_absolute_time",
        "line": 479,
        "column": 24,
        "endLine": 479,
        "endColumn": 25,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_absolute_time",
        "line": 493,
        "column": 24,
        "endLine": 496,
        "endColumn": 25,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_absolute_time",
        "line": 493,
        "column": 24,
        "endLine": 493,
        "endColumn": 25,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_absolute_time",
        "line": 506,
        "column": 8,
        "endLine": 506,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_absolute_time",
        "line": 507,
        "column": 8,
        "endLine": 507,
        "endColumn": 26,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'absolute_time' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_absolute_time",
        "line": 508,
        "column": 8,
        "endLine": 508,
        "endColumn": 26,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'absolute_time' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_absolute_time",
        "line": 414,
        "column": 4,
        "endLine": 414,
        "endColumn": 25,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (7/6)",
        "message-id": "R0911"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.update_absolute_time",
        "line": 534,
        "column": 16,
        "endLine": 539,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.update_absolute_time",
        "line": 534,
        "column": 16,
        "endLine": 534,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_relative_time",
        "line": 574,
        "column": 20,
        "endLine": 578,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_relative_time",
        "line": 574,
        "column": 20,
        "endLine": 574,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_relative_time",
        "line": 588,
        "column": 20,
        "endLine": 591,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_relative_time",
        "line": 588,
        "column": 20,
        "endLine": 588,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_relative_time",
        "line": 597,
        "column": 12,
        "endLine": 624,
        "endColumn": 35,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_relative_time",
        "line": 600,
        "column": 24,
        "endLine": 604,
        "endColumn": 25,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_relative_time",
        "line": 600,
        "column": 24,
        "endLine": 600,
        "endColumn": 25,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_relative_time",
        "line": 613,
        "column": 24,
        "endLine": 616,
        "endColumn": 25,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_relative_time",
        "line": 613,
        "column": 24,
        "endLine": 613,
        "endColumn": 25,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_relative_time",
        "line": 626,
        "column": 8,
        "endLine": 626,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_relative_time",
        "line": 628,
        "column": 8,
        "endLine": 628,
        "endColumn": 26,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'relative_time' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_relative_time",
        "line": 629,
        "column": 8,
        "endLine": 629,
        "endColumn": 26,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'relative_time' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_relative_time",
        "line": 631,
        "column": 12,
        "endLine": 631,
        "endColumn": 30,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'relative_time' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_relative_time",
        "line": 633,
        "column": 12,
        "endLine": 633,
        "endColumn": 30,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'relative_time' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.update_relative_time",
        "line": 657,
        "column": 16,
        "endLine": 662,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.update_relative_time",
        "line": 657,
        "column": 16,
        "endLine": 657,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_spatial_extent_from_values",
        "line": 843,
        "column": 4,
        "endLine": 843,
        "endColumn": 38,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_spatial_extent_from_values",
        "line": 856,
        "column": 8,
        "endLine": 856,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_spatial_extent",
        "line": 882,
        "column": 8,
        "endLine": 882,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.spatial_buffer",
        "line": 906,
        "column": 8,
        "endLine": 906,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.spatial_buffer",
        "line": 907,
        "column": 8,
        "endLine": 907,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.spatial_buffer",
        "line": 908,
        "column": 8,
        "endLine": 908,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.spatial_buffer",
        "line": 909,
        "column": 8,
        "endLine": 909,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.spatial_buffer",
        "line": 910,
        "column": 8,
        "endLine": 910,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.spatial_buffer",
        "line": 911,
        "column": 8,
        "endLine": 911,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.spatial_buffer",
        "line": 914,
        "column": 12,
        "endLine": 914,
        "endColumn": 31,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.spatial_buffer_2d",
        "line": 938,
        "column": 8,
        "endLine": 938,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.spatial_buffer_2d",
        "line": 939,
        "column": 8,
        "endLine": 939,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.spatial_buffer_2d",
        "line": 940,
        "column": 8,
        "endLine": 940,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.spatial_buffer_2d",
        "line": 941,
        "column": 8,
        "endLine": 941,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.spatial_buffer_2d",
        "line": 944,
        "column": 12,
        "endLine": 944,
        "endColumn": 31,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.check_for_correct_time",
        "line": 961,
        "column": 28,
        "endLine": 965,
        "endColumn": 29,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.check_for_correct_time",
        "line": 961,
        "column": 28,
        "endLine": 961,
        "endColumn": 29,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.check_for_correct_time",
        "line": 970,
        "column": 28,
        "endLine": 974,
        "endColumn": 29,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.check_for_correct_time",
        "line": 970,
        "column": 28,
        "endLine": 970,
        "endColumn": 29,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.check_for_correct_time",
        "line": 980,
        "column": 16,
        "endLine": 980,
        "endColumn": 54,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.check_for_correct_time",
        "line": 980,
        "column": 16,
        "endLine": 980,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.check_for_correct_time",
        "line": 954,
        "column": 24,
        "endLine": 954,
        "endColumn": 28,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'unit'",
        "message-id": "W0612"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.delete",
        "line": 1020,
        "column": 12,
        "endLine": 1020,
        "endColumn": 25,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "",
        "line": 1026,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.delete",
        "line": 1026,
        "column": 16,
        "endLine": 1026,
        "endColumn": 69,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.delete",
        "line": 1026,
        "column": 16,
        "endLine": 1026,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.delete",
        "line": 1032,
        "column": 25,
        "endLine": 1032,
        "endColumn": 34,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.get_registered_stds",
        "line": 1124,
        "column": 8,
        "endLine": 1124,
        "endColumn": 26,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'stds_register' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.get_registered_stds",
        "line": 1125,
        "column": 19,
        "endLine": 1125,
        "endColumn": 37,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'stds_register' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.get_registered_stds",
        "line": 1133,
        "column": 12,
        "endLine": 1133,
        "endColumn": 22,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "pointless-statement",
        "message": "Statement seems to have no effect",
        "message-id": "W0104"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.add_stds_to_register",
        "line": 1169,
        "column": 16,
        "endLine": 1169,
        "endColumn": 26,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "pointless-statement",
        "message": "Statement seems to have no effect",
        "message-id": "W0104"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.add_stds_to_register",
        "line": 1174,
        "column": 8,
        "endLine": 1174,
        "endColumn": 26,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'stds_register' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.add_stds_to_register",
        "line": 1179,
        "column": 12,
        "endLine": 1179,
        "endColumn": 30,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'stds_register' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.add_stds_to_register",
        "line": 1181,
        "column": 24,
        "endLine": 1181,
        "endColumn": 42,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'stds_register' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.add_stds_to_register",
        "line": 1184,
        "column": 12,
        "endLine": 1184,
        "endColumn": 22,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "pointless-statement",
        "message": "Statement seems to have no effect",
        "message-id": "W0104"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.remove_stds_from_register",
        "line": 1211,
        "column": 16,
        "endLine": 1211,
        "endColumn": 26,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "pointless-statement",
        "message": "Statement seems to have no effect",
        "message-id": "W0104"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.remove_stds_from_register",
        "line": 1217,
        "column": 16,
        "endLine": 1217,
        "endColumn": 26,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "pointless-statement",
        "message": "Statement seems to have no effect",
        "message-id": "W0104"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.remove_stds_from_register",
        "line": 1222,
        "column": 8,
        "endLine": 1222,
        "endColumn": 26,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'stds_register' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.remove_stds_from_register",
        "line": 1227,
        "column": 12,
        "endLine": 1227,
        "endColumn": 30,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'stds_register' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.remove_stds_from_register",
        "line": 1229,
        "column": 24,
        "endLine": 1229,
        "endColumn": 42,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractMapDataset' has no 'stds_register' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.remove_stds_from_register",
        "line": 1232,
        "column": 12,
        "endLine": 1232,
        "endColumn": 22,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "pointless-statement",
        "message": "Statement seems to have no effect",
        "message-id": "W0104"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.read_semantic_label_from_grass",
        "line": 1245,
        "column": 8,
        "endLine": 1245,
        "endColumn": 12,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "unnecessary-pass",
        "message": "Unnecessary pass statement",
        "message-id": "W0107"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_semantic_label",
        "line": 1253,
        "column": 26,
        "endLine": 1253,
        "endColumn": 82,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_semantic_label",
        "line": 1253,
        "column": 26,
        "endLine": 1253,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset.set_semantic_label",
        "line": 1247,
        "column": 33,
        "endLine": 1247,
        "endColumn": 47,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'semantic_label'",
        "message-id": "W0613"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "AbstractMapDataset",
        "line": 33,
        "column": 0,
        "endLine": 33,
        "endColumn": 24,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "too-many-public-methods",
        "message": "Too many public methods (39/20)",
        "message-id": "R0904"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "",
        "line": 15,
        "column": 0,
        "endLine": 15,
        "endColumn": 29,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"datetime.datetime\" should be placed before first party imports \"grass.script\", \"grass.exceptions.ImplementationError\" ",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_map_dataset",
        "obj": "",
        "line": 16,
        "column": 0,
        "endLine": 16,
        "endColumn": 39,
        "path": "python/grass/temporal/abstract_map_dataset.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"abc.ABCMeta\" should be placed before first party imports \"grass.script\", \"grass.exceptions.ImplementationError\" ",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 146,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 147,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 149,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 152,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 153,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 155,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 158,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 159,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 161,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 164,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 171,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 1302,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 1303,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 1306,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 1307,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 1308,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 1309,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (3001/1000)",
        "message-id": "C0302"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 2451,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "fixme",
        "message": "TODO: use mapset of the corresponding stds",
        "message-id": "W0511"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.get_name",
        "line": 85,
        "column": 19,
        "endLine": 85,
        "endColumn": 26,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.print_self",
        "line": 137,
        "column": 8,
        "endLine": 137,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.print_self",
        "line": 139,
        "column": 8,
        "endLine": 139,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.print_self",
        "line": 140,
        "column": 8,
        "endLine": 140,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.print_info",
        "line": 166,
        "column": 8,
        "endLine": 166,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.print_info",
        "line": 168,
        "column": 8,
        "endLine": 168,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.print_info",
        "line": 169,
        "column": 8,
        "endLine": 169,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.print_shell_info",
        "line": 176,
        "column": 8,
        "endLine": 176,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.print_shell_info",
        "line": 178,
        "column": 8,
        "endLine": 178,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'spatial_extent' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.print_shell_info",
        "line": 179,
        "column": 8,
        "endLine": 179,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.print_history",
        "line": 185,
        "column": 8,
        "endLine": 185,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.set_initial_values",
        "line": 209,
        "column": 12,
        "endLine": 209,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.set_initial_values",
        "line": 211,
        "column": 12,
        "endLine": 211,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.set_initial_values",
        "line": 213,
        "column": 28,
        "endLine": 213,
        "endColumn": 59,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.set_initial_values",
        "line": 213,
        "column": 28,
        "endLine": 213,
        "endColumn": 29,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.set_initial_values",
        "line": 215,
        "column": 8,
        "endLine": 215,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.set_initial_values",
        "line": 216,
        "column": 8,
        "endLine": 216,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.set_initial_values",
        "line": 217,
        "column": 8,
        "endLine": 217,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.set_initial_values",
        "line": 218,
        "column": 8,
        "endLine": 218,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.set_aggregation_type",
        "line": 226,
        "column": 8,
        "endLine": 226,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_command_string",
        "line": 235,
        "column": 8,
        "endLine": 235,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_command_string",
        "line": 236,
        "column": 18,
        "endLine": 236,
        "endColumn": 31,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_command_string",
        "line": 240,
        "column": 8,
        "endLine": 240,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_command_string",
        "line": 241,
        "column": 8,
        "endLine": 241,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.create_command_string",
        "line": 253,
        "column": 18,
        "endLine": 253,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.create_command_string",
        "line": 276,
        "column": 24,
        "endLine": 276,
        "endColumn": 33,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.create_command_string",
        "line": 279,
        "column": 27,
        "endLine": 279,
        "endColumn": 37,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.create_command_string",
        "line": 282,
        "column": 27,
        "endLine": 282,
        "endColumn": 32,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.get_semantic_type",
        "line": 292,
        "column": 15,
        "endLine": 292,
        "endColumn": 24,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.get_initial_values",
        "line": 299,
        "column": 24,
        "endLine": 299,
        "endColumn": 33,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.get_initial_values",
        "line": 300,
        "column": 16,
        "endLine": 300,
        "endColumn": 29,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.get_initial_values",
        "line": 301,
        "column": 22,
        "endLine": 301,
        "endColumn": 35,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.set_granularity",
        "line": 339,
        "column": 28,
        "endLine": 339,
        "endColumn": 56,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.set_granularity",
        "line": 339,
        "column": 28,
        "endLine": 339,
        "endColumn": 29,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.set_granularity",
        "line": 342,
        "column": 12,
        "endLine": 342,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.set_granularity",
        "line": 344,
        "column": 12,
        "endLine": 344,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.set_granularity",
        "line": 346,
        "column": 28,
        "endLine": 346,
        "endColumn": 59,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.set_granularity",
        "line": 346,
        "column": 28,
        "endLine": 346,
        "endColumn": 29,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.set_relative_time_unit",
        "line": 367,
        "column": 32,
        "endLine": 367,
        "endColumn": 66,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.set_relative_time_unit",
        "line": 367,
        "column": 32,
        "endLine": 367,
        "endColumn": 33,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.set_relative_time_unit",
        "line": 368,
        "column": 12,
        "endLine": 368,
        "endColumn": 30,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'relative_time' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.insert",
        "line": 403,
        "column": 18,
        "endLine": 405,
        "endColumn": 13,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.insert",
        "line": 403,
        "column": 18,
        "endLine": 405,
        "endColumn": 13,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.insert",
        "line": 412,
        "column": 29,
        "endLine": 412,
        "endColumn": 64,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 422,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.insert",
        "line": 422,
        "column": 16,
        "endLine": 422,
        "endColumn": 83,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.insert",
        "line": 422,
        "column": 16,
        "endLine": 422,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.count_gaps",
        "line": 501,
        "column": 8,
        "endLine": 505,
        "endColumn": 29,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-enumerate",
        "message": "Consider using enumerate instead of iterating with range and len",
        "message-id": "C0200"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.check_temporal_topology",
        "line": 595,
        "column": 11,
        "endLine": 595,
        "endColumn": 56,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'map_time in ('interval', 'mixed')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.check_temporal_topology",
        "line": 550,
        "column": 4,
        "endLine": 550,
        "endColumn": 31,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (13/6)",
        "message-id": "R0911"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.check_temporal_topology",
        "line": 550,
        "column": 4,
        "endLine": 550,
        "endColumn": 31,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (15/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.sample_by_dataset",
        "line": 622,
        "column": 4,
        "endLine": 622,
        "endColumn": 25,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (18/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.sample_by_dataset",
        "line": 798,
        "column": 12,
        "endLine": 798,
        "endColumn": 15,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 740,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.sample_by_dataset",
        "line": 740,
        "column": 16,
        "endLine": 740,
        "endColumn": 81,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.sample_by_dataset",
        "line": 740,
        "column": 16,
        "endLine": 740,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 746,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.sample_by_dataset",
        "line": 746,
        "column": 16,
        "endLine": 746,
        "endColumn": 84,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.sample_by_dataset",
        "line": 746,
        "column": 16,
        "endLine": 746,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.sample_by_dataset",
        "line": 793,
        "column": 8,
        "endLine": 793,
        "endColumn": 13,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"mapsA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.sample_by_dataset",
        "line": 794,
        "column": 8,
        "endLine": 794,
        "endColumn": 13,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "invalid-name",
        "message": "Variable name \"mapsB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.sample_by_dataset",
        "line": 795,
        "column": 8,
        "endLine": 795,
        "endColumn": 39,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "arguments-out-of-order",
        "message": "Positional arguments appear to be out of order",
        "message-id": "W1114"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.sample_by_dataset",
        "line": 622,
        "column": 4,
        "endLine": 622,
        "endColumn": 25,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (23/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.sample_by_dataset",
        "line": 622,
        "column": 4,
        "endLine": 622,
        "endColumn": 25,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (54/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.sample_by_dataset_sql",
        "line": 832,
        "column": 4,
        "endLine": 832,
        "endColumn": 29,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (25/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.sample_by_dataset_sql",
        "line": 1041,
        "column": 20,
        "endLine": 1041,
        "endColumn": 23,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.sample_by_dataset_sql",
        "line": 971,
        "column": 19,
        "endLine": 971,
        "endColumn": 58,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'name in ('contain', 'contains')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.sample_by_dataset_sql",
        "line": 973,
        "column": 19,
        "endLine": 973,
        "endColumn": 54,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'name in ('equal', 'equals')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 987,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.sample_by_dataset_sql",
        "line": 987,
        "column": 16,
        "endLine": 987,
        "endColumn": 81,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.sample_by_dataset_sql",
        "line": 987,
        "column": 16,
        "endLine": 987,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 993,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.sample_by_dataset_sql",
        "line": 993,
        "column": 16,
        "endLine": 993,
        "endColumn": 84,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.sample_by_dataset_sql",
        "line": 993,
        "column": 16,
        "endLine": 993,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.sample_by_dataset_sql",
        "line": 832,
        "column": 4,
        "endLine": 832,
        "endColumn": 29,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (23/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.sample_by_dataset_sql",
        "line": 832,
        "column": 4,
        "endLine": 832,
        "endColumn": 29,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (70/50)",
        "message-id": "R0915"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.get_registered_maps_as_objects_by_granularity",
        "line": 1124,
        "column": 28,
        "endLine": 1124,
        "endColumn": 56,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.get_registered_maps_as_objects_by_granularity",
        "line": 1124,
        "column": 28,
        "endLine": 1124,
        "endColumn": 29,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.resample_maplist_by_granularity",
        "line": 1153,
        "column": 4,
        "endLine": 1153,
        "endColumn": 39,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (17/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.resample_maplist_by_granularity",
        "line": 1326,
        "column": 16,
        "endLine": 1326,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'next'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.resample_maplist_by_granularity",
        "line": 1330,
        "column": 12,
        "endLine": 1330,
        "endColumn": 15,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.resample_maplist_by_granularity",
        "line": 1153,
        "column": 4,
        "endLine": 1153,
        "endColumn": 39,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (15/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.get_registered_maps_as_objects_with_gaps",
        "line": 1384,
        "column": 4,
        "endLine": 1384,
        "endColumn": 48,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (17/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.get_registered_maps_as_objects_with_gaps",
        "line": 1443,
        "column": 24,
        "endLine": 1443,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.get_registered_maps_as_objects_with_gaps",
        "line": 1429,
        "column": 12,
        "endLine": 1452,
        "endColumn": 55,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-enumerate",
        "message": "Consider using enumerate instead of iterating with range and len",
        "message-id": "C0200"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.get_registered_maps_as_objects_with_gaps",
        "line": 1436,
        "column": 32,
        "endLine": 1436,
        "endColumn": 36,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'end2'",
        "message-id": "W0612"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.get_registered_maps_as_objects_with_temporal_topology",
        "line": 1459,
        "column": 4,
        "endLine": 1459,
        "endColumn": 61,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.get_registered_maps_as_objects",
        "line": 1512,
        "column": 4,
        "endLine": 1512,
        "endColumn": 38,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.get_registered_maps_as_objects",
        "line": 1576,
        "column": 12,
        "endLine": 1576,
        "endColumn": 15,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset._update_where_statement_by_semantic_label.leading_zero",
        "line": 1628,
        "column": 16,
        "endLine": 1631,
        "endColumn": 55,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset._update_where_statement_by_semantic_label.leading_zero",
        "line": 1631,
        "column": 27,
        "endLine": 1631,
        "endColumn": 36,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset._update_where_statement_by_semantic_label",
        "line": 1646,
        "column": 21,
        "endLine": 1646,
        "endColumn": 46,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset._update_where_statement_by_semantic_label",
        "line": 1653,
        "column": 29,
        "endLine": 1653,
        "endColumn": 44,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset._update_where_statement_by_semantic_label",
        "line": 1677,
        "column": 25,
        "endLine": 1677,
        "endColumn": 48,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset._update_where_statement_by_spatial_extent",
        "line": 1728,
        "column": 16,
        "endLine": 1732,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset._update_where_statement_by_spatial_extent",
        "line": 1728,
        "column": 16,
        "endLine": 1728,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset._update_where_statement_by_spatial_extent",
        "line": 1734,
        "column": 12,
        "endLine": 1734,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "misplaced-bare-raise",
        "message": "The raise statement is not inside an except clause",
        "message-id": "E0704"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 1740,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in assignment",
        "message-id": "W1404"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset._update_where_statement_by_spatial_extent",
        "line": 1681,
        "column": 4,
        "endLine": 1681,
        "endColumn": 49,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (13/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.get_registered_maps",
        "line": 1788,
        "column": 4,
        "endLine": 1788,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.get_registered_maps",
        "line": 1881,
        "column": 18,
        "endLine": 1881,
        "endColumn": 72,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.get_registered_maps",
        "line": 1889,
        "column": 23,
        "endLine": 1889,
        "endColumn": 34,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.get_registered_maps",
        "line": 1893,
        "column": 23,
        "endLine": 1893,
        "endColumn": 37,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.get_registered_maps",
        "line": 1897,
        "column": 41,
        "endLine": 1897,
        "endColumn": 50,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.get_registered_maps",
        "line": 1898,
        "column": 44,
        "endLine": 1898,
        "endColumn": 53,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.get_registered_maps",
        "line": 1903,
        "column": 20,
        "endLine": 1903,
        "endColumn": 71,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.get_registered_maps",
        "line": 1903,
        "column": 20,
        "endLine": 1903,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.get_registered_maps",
        "line": 1788,
        "column": 4,
        "endLine": 1788,
        "endColumn": 27,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (16/12)",
        "message-id": "R0912"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.shift_map_list",
        "line": 1992,
        "column": 12,
        "endLine": 1992,
        "endColumn": 15,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.shift",
        "line": 2043,
        "column": 12,
        "endLine": 2043,
        "endColumn": 15,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.shift",
        "line": 2018,
        "column": 16,
        "endLine": 2023,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.shift",
        "line": 2018,
        "column": 16,
        "endLine": 2018,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.shift",
        "line": 2028,
        "column": 28,
        "endLine": 2028,
        "endColumn": 70,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.shift",
        "line": 2028,
        "column": 28,
        "endLine": 2028,
        "endColumn": 29,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.shift",
        "line": 2028,
        "column": 30,
        "endLine": 2028,
        "endColumn": 60,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.shift",
        "line": 2007,
        "column": 4,
        "endLine": 2007,
        "endColumn": 13,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.snap",
        "line": 2196,
        "column": 16,
        "endLine": 2201,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.snap",
        "line": 2196,
        "column": 16,
        "endLine": 2196,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset._update_map_timestamps",
        "line": 2257,
        "column": 12,
        "endLine": 2257,
        "endColumn": 15,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.rename",
        "line": 2357,
        "column": 16,
        "endLine": 2357,
        "endColumn": 19,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.rename",
        "line": 2303,
        "column": 16,
        "endLine": 2308,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.rename",
        "line": 2303,
        "column": 16,
        "endLine": 2303,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 2316,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.rename",
        "line": 2316,
        "column": 16,
        "endLine": 2316,
        "endColumn": 88,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.rename",
        "line": 2316,
        "column": 16,
        "endLine": 2316,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.rename",
        "line": 2342,
        "column": 21,
        "endLine": 2342,
        "endColumn": 55,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.rename",
        "line": 2349,
        "column": 25,
        "endLine": 2349,
        "endColumn": 49,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.rename",
        "line": 2350,
        "column": 25,
        "endLine": 2350,
        "endColumn": 60,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.delete",
        "line": 2416,
        "column": 20,
        "endLine": 2416,
        "endColumn": 23,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 2386,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.delete",
        "line": 2386,
        "column": 12,
        "endLine": 2386,
        "endColumn": 77,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.delete",
        "line": 2386,
        "column": 12,
        "endLine": 2386,
        "endColumn": 13,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.delete",
        "line": 2392,
        "column": 16,
        "endLine": 2397,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.delete",
        "line": 2392,
        "column": 16,
        "endLine": 2392,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.delete",
        "line": 2405,
        "column": 8,
        "endLine": 2405,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.delete",
        "line": 2409,
        "column": 19,
        "endLine": 2409,
        "endColumn": 51,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.delete",
        "line": 2409,
        "column": 19,
        "endLine": 2409,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.delete",
        "line": 2423,
        "column": 21,
        "endLine": 2423,
        "endColumn": 30,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.is_map_registered",
        "line": 2460,
        "column": 52,
        "endLine": 2460,
        "endColumn": 61,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.is_map_registered",
        "line": 2461,
        "column": 43,
        "endLine": 2461,
        "endColumn": 52,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.is_map_registered",
        "line": 2463,
        "column": 34,
        "endLine": 2463,
        "endColumn": 70,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.is_map_registered",
        "line": 2463,
        "column": 34,
        "endLine": 2463,
        "endColumn": 35,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2474,
        "column": 27,
        "endLine": 2474,
        "endColumn": 30,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2495,
        "column": 16,
        "endLine": 2499,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2495,
        "column": 16,
        "endLine": 2495,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2508,
        "column": 16,
        "endLine": 2512,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2508,
        "column": 16,
        "endLine": 2508,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2518,
        "column": 16,
        "endLine": 2519,
        "endColumn": 38,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2531,
        "column": 16,
        "endLine": 2532,
        "endColumn": 30,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 2542,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2542,
        "column": 20,
        "endLine": 2542,
        "endColumn": 74,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2542,
        "column": 20,
        "endLine": 2542,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2546,
        "column": 32,
        "endLine": 2546,
        "endColumn": 62,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2546,
        "column": 32,
        "endLine": 2546,
        "endColumn": 33,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2554,
        "column": 22,
        "endLine": 2554,
        "endColumn": 31,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2565,
        "column": 20,
        "endLine": 2569,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2565,
        "column": 20,
        "endLine": 2565,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2578,
        "column": 20,
        "endLine": 2581,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2578,
        "column": 20,
        "endLine": 2578,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2589,
        "column": 16,
        "endLine": 2589,
        "endColumn": 29,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2590,
        "column": 19,
        "endLine": 2590,
        "endColumn": 32,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2596,
        "column": 25,
        "endLine": 2596,
        "endColumn": 43,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'relative_time' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 2600,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2600,
        "column": 16,
        "endLine": 2600,
        "endColumn": 78,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2600,
        "column": 16,
        "endLine": 2600,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2610,
        "column": 20,
        "endLine": 2614,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2610,
        "column": 20,
        "endLine": 2610,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2623,
        "column": 20,
        "endLine": 2626,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2623,
        "column": 20,
        "endLine": 2623,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2633,
        "column": 16,
        "endLine": 2633,
        "endColumn": 81,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2633,
        "column": 16,
        "endLine": 2633,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "",
        "line": 2640,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2640,
        "column": 20,
        "endLine": 2640,
        "endColumn": 81,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2640,
        "column": 20,
        "endLine": 2640,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2645,
        "column": 20,
        "endLine": 2645,
        "endColumn": 56,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2645,
        "column": 20,
        "endLine": 2645,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2651,
        "column": 20,
        "endLine": 2651,
        "endColumn": 29,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2474,
        "column": 4,
        "endLine": 2474,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (21/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2474,
        "column": 4,
        "endLine": 2474,
        "endColumn": 20,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (59/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.register_map",
        "line": 2550,
        "column": 8,
        "endLine": 2550,
        "endColumn": 18,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'map_mapset'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.unregister_map",
        "line": 2674,
        "column": 29,
        "endLine": 2674,
        "endColumn": 32,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.unregister_map",
        "line": 2695,
        "column": 31,
        "endLine": 2695,
        "endColumn": 47,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.unregister_map",
        "line": 2698,
        "column": 16,
        "endLine": 2698,
        "endColumn": 83,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.unregister_map",
        "line": 2698,
        "column": 16,
        "endLine": 2698,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.unregister_map",
        "line": 2709,
        "column": 20,
        "endLine": 2713,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.unregister_map",
        "line": 2709,
        "column": 20,
        "endLine": 2709,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.unregister_map",
        "line": 2717,
        "column": 32,
        "endLine": 2717,
        "endColumn": 41,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.unregister_map",
        "line": 2722,
        "column": 20,
        "endLine": 2725,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.unregister_map",
        "line": 2722,
        "column": 20,
        "endLine": 2722,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.unregister_map",
        "line": 2726,
        "column": 56,
        "endLine": 2726,
        "endColumn": 65,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.unregister_map",
        "line": 2735,
        "column": 38,
        "endLine": 2735,
        "endColumn": 47,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2759,
        "column": 4,
        "endLine": 2759,
        "endColumn": 35,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (24/15)",
        "message-id": "R0914"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2777,
        "column": 16,
        "endLine": 2782,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2777,
        "column": 16,
        "endLine": 2777,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2787,
        "column": 12,
        "endLine": 2790,
        "endColumn": 13,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2787,
        "column": 12,
        "endLine": 2787,
        "endColumn": 13,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2805,
        "column": 20,
        "endLine": 2805,
        "endColumn": 29,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2806,
        "column": 22,
        "endLine": 2806,
        "endColumn": 31,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2822,
        "column": 14,
        "endLine": 2828,
        "endColumn": 9,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2822,
        "column": 14,
        "endLine": 2828,
        "endColumn": 9,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2831,
        "column": 42,
        "endLine": 2831,
        "endColumn": 51,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2838,
        "column": 14,
        "endLine": 2844,
        "endColumn": 9,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2838,
        "column": 14,
        "endLine": 2844,
        "endColumn": 9,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2857,
        "column": 33,
        "endLine": 2860,
        "endColumn": 13,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2857,
        "column": 33,
        "endLine": 2860,
        "endColumn": 13,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2864,
        "column": 42,
        "endLine": 2864,
        "endColumn": 51,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2869,
        "column": 52,
        "endLine": 2869,
        "endColumn": 61,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2902,
        "column": 37,
        "endLine": 2902,
        "endColumn": 46,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2903,
        "column": 39,
        "endLine": 2903,
        "endColumn": 48,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2979,
        "column": 8,
        "endLine": 2979,
        "endColumn": 21,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2980,
        "column": 11,
        "endLine": 2980,
        "endColumn": 24,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'metadata' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2982,
        "column": 49,
        "endLine": 2982,
        "endColumn": 53,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'gran' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2989,
        "column": 8,
        "endLine": 2989,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2990,
        "column": 8,
        "endLine": 2990,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "no-member",
        "message": "Instance of 'AbstractSpaceTimeDataset' has no 'base' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2759,
        "column": 4,
        "endLine": 2759,
        "endColumn": 35,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (32/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2759,
        "column": 4,
        "endLine": 2759,
        "endColumn": 35,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (112/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2805,
        "column": 8,
        "endLine": 2805,
        "endColumn": 17,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'stds_name'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2806,
        "column": 8,
        "endLine": 2806,
        "endColumn": 19,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'stds_mapset'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2875,
        "column": 12,
        "endLine": 2875,
        "endColumn": 22,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'start_time'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset.update_from_registered_maps",
        "line": 2877,
        "column": 34,
        "endLine": 2877,
        "endColumn": 38,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'unit'",
        "message-id": "W0612"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.abstract_space_time_dataset",
        "obj": "AbstractSpaceTimeDataset",
        "line": 46,
        "column": 0,
        "endLine": 46,
        "endColumn": 30,
        "path": "python/grass/temporal/abstract_space_time_dataset.py",
        "symbol": "too-many-public-methods",
        "message": "Too many public methods (43/20)",
        "message-id": "R0904"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.aggregation",
        "obj": "collect_map_names",
        "line": 37,
        "column": 0,
        "endLine": 37,
        "endColumn": 21,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (17/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.aggregation",
        "obj": "collect_map_names",
        "line": 37,
        "column": 0,
        "endLine": 37,
        "endColumn": 21,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (13/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_raster_maps",
        "line": 114,
        "column": 0,
        "endLine": 114,
        "endColumn": 25,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_raster_maps",
        "line": 114,
        "column": 0,
        "endLine": 114,
        "endColumn": 25,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (18/15)",
        "message-id": "R0914"
    },
    {
        "type": "error",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_raster_maps",
        "line": 136,
        "column": 17,
        "endLine": 136,
        "endColumn": 48,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_raster_maps",
        "line": 136,
        "column": 17,
        "endLine": 136,
        "endColumn": 18,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_raster_maps",
        "line": 137,
        "column": 13,
        "endLine": 137,
        "endColumn": 20,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_raster_maps",
        "line": 151,
        "column": 16,
        "endLine": 155,
        "endColumn": 17,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_raster_maps",
        "line": 151,
        "column": 16,
        "endLine": 151,
        "endColumn": 17,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_raster_maps",
        "line": 152,
        "column": 20,
        "endLine": 153,
        "endColumn": 63,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_raster_maps",
        "line": 160,
        "column": 8,
        "endLine": 163,
        "endColumn": 9,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_raster_maps",
        "line": 160,
        "column": 8,
        "endLine": 160,
        "endColumn": 9,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_raster_maps",
        "line": 168,
        "column": 11,
        "endLine": 168,
        "endColumn": 30,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_raster_maps",
        "line": 171,
        "column": 17,
        "endLine": 171,
        "endColumn": 23,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_raster_maps",
        "line": 197,
        "column": 19,
        "endLine": 197,
        "endColumn": 62,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_raster_maps",
        "line": 197,
        "column": 19,
        "endLine": 197,
        "endColumn": 20,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_raster_maps",
        "line": 114,
        "column": 0,
        "endLine": 114,
        "endColumn": 25,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_raster_maps",
        "line": 168,
        "column": 11,
        "endLine": 168,
        "endColumn": 30,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_by_topology",
        "line": 214,
        "column": 0,
        "endLine": 214,
        "endColumn": 25,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (13/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_by_topology",
        "line": 214,
        "column": 0,
        "endLine": 214,
        "endColumn": 25,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (33/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_by_topology",
        "line": 258,
        "column": 4,
        "endLine": 258,
        "endColumn": 41,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (grass.pygrass.modules)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_by_topology",
        "line": 259,
        "column": 4,
        "endLine": 259,
        "endColumn": 15,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (copy)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "grass.temporal.aggregation",
        "obj": "",
        "line": 324,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_by_topology",
        "line": 324,
        "column": 16,
        "endLine": 324,
        "endColumn": 81,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_by_topology",
        "line": 324,
        "column": 16,
        "endLine": 324,
        "endColumn": 17,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_by_topology",
        "line": 338,
        "column": 30,
        "endLine": 338,
        "endColumn": 41,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_by_topology",
        "line": 341,
        "column": 30,
        "endLine": 341,
        "endColumn": 41,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_by_topology",
        "line": 347,
        "column": 38,
        "endLine": 347,
        "endColumn": 45,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_by_topology",
        "line": 352,
        "column": 20,
        "endLine": 356,
        "endColumn": 21,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_by_topology",
        "line": 352,
        "column": 20,
        "endLine": 352,
        "endColumn": 21,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_by_topology",
        "line": 353,
        "column": 24,
        "endLine": 355,
        "endColumn": 33,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_by_topology",
        "line": 364,
        "column": 23,
        "endLine": 364,
        "endColumn": 42,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_by_topology",
        "line": 366,
        "column": 29,
        "endLine": 366,
        "endColumn": 35,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_by_topology",
        "line": 374,
        "column": 24,
        "endLine": 380,
        "endColumn": 25,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_by_topology",
        "line": 374,
        "column": 24,
        "endLine": 374,
        "endColumn": 25,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_by_topology",
        "line": 375,
        "column": 28,
        "endLine": 378,
        "endColumn": 52,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_by_topology",
        "line": 214,
        "column": 0,
        "endLine": 214,
        "endColumn": 25,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (29/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_by_topology",
        "line": 214,
        "column": 0,
        "endLine": 214,
        "endColumn": 25,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (68/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.aggregation",
        "obj": "aggregate_by_topology",
        "line": 364,
        "column": 23,
        "endLine": 364,
        "endColumn": 42,
        "path": "python/grass/temporal/aggregation.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "",
        "line": 62,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/base.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "",
        "line": 64,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/base.py",
        "symbol": "line-too-long",
        "message": "Line too long (264/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "",
        "line": 66,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/base.py",
        "symbol": "line-too-long",
        "message": "Line too long (258/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "",
        "line": 68,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/base.py",
        "symbol": "line-too-long",
        "message": "Line too long (258/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "",
        "line": 228,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/base.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "",
        "line": 230,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/base.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "",
        "line": 232,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/base.py",
        "symbol": "line-too-long",
        "message": "Line too long (170/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "",
        "line": 234,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/base.py",
        "symbol": "line-too-long",
        "message": "Line too long (140/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "",
        "line": 236,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/base.py",
        "symbol": "line-too-long",
        "message": "Line too long (189/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "",
        "line": 238,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/base.py",
        "symbol": "line-too-long",
        "message": "Line too long (159/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "",
        "line": 240,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/base.py",
        "symbol": "line-too-long",
        "message": "Line too long (189/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "",
        "line": 242,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/base.py",
        "symbol": "line-too-long",
        "message": "Line too long (159/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "",
        "line": 839,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/base.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/base.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1261/1000)",
        "message-id": "C0302"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer",
        "line": 39,
        "column": 0,
        "endLine": 39,
        "endColumn": 23,
        "path": "python/grass/temporal/base.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer.__init__",
        "line": 41,
        "column": 8,
        "endLine": 41,
        "endColumn": 14,
        "path": "python/grass/temporal/base.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"D\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer.serialize",
        "line": 44,
        "column": 24,
        "endLine": 44,
        "endColumn": 28,
        "path": "python/grass/temporal/base.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer.serialize",
        "line": 84,
        "column": 23,
        "endLine": 84,
        "endColumn": 36,
        "path": "python/grass/temporal/base.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer.serialize",
        "line": 86,
        "column": 27,
        "endLine": 86,
        "endColumn": 33,
        "path": "python/grass/temporal/base.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer.serialize",
        "line": 88,
        "column": 27,
        "endLine": 88,
        "endColumn": 35,
        "path": "python/grass/temporal/base.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer.serialize",
        "line": 99,
        "column": 23,
        "endLine": 99,
        "endColumn": 36,
        "path": "python/grass/temporal/base.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer.serialize",
        "line": 101,
        "column": 27,
        "endLine": 101,
        "endColumn": 33,
        "path": "python/grass/temporal/base.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer.serialize",
        "line": 103,
        "column": 27,
        "endLine": 103,
        "endColumn": 34,
        "path": "python/grass/temporal/base.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer.serialize",
        "line": 108,
        "column": 12,
        "endLine": 120,
        "endColumn": 40,
        "path": "python/grass/temporal/base.py",
        "symbol": "consider-using-dict-items",
        "message": "Consider iterating with .items()",
        "message-id": "C0206"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer.serialize",
        "line": 108,
        "column": 23,
        "endLine": 108,
        "endColumn": 36,
        "path": "python/grass/temporal/base.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer.serialize",
        "line": 131,
        "column": 12,
        "endLine": 147,
        "endColumn": 44,
        "path": "python/grass/temporal/base.py",
        "symbol": "consider-using-dict-items",
        "message": "Consider iterating with .items()",
        "message-id": "C0206"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer.serialize",
        "line": 131,
        "column": 23,
        "endLine": 131,
        "endColumn": 36,
        "path": "python/grass/temporal/base.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer.serialize",
        "line": 136,
        "column": 35,
        "endLine": 136,
        "endColumn": 45,
        "path": "python/grass/temporal/base.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer.serialize",
        "line": 138,
        "column": 35,
        "endLine": 138,
        "endColumn": 41,
        "path": "python/grass/temporal/base.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer.serialize",
        "line": 142,
        "column": 35,
        "endLine": 142,
        "endColumn": 46,
        "path": "python/grass/temporal/base.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer.serialize",
        "line": 144,
        "column": 35,
        "endLine": 144,
        "endColumn": 42,
        "path": "python/grass/temporal/base.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer.serialize",
        "line": 156,
        "column": 12,
        "endLine": 170,
        "endColumn": 40,
        "path": "python/grass/temporal/base.py",
        "symbol": "consider-using-dict-items",
        "message": "Consider iterating with .items()",
        "message-id": "C0206"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer.serialize",
        "line": 156,
        "column": 23,
        "endLine": 156,
        "endColumn": 36,
        "path": "python/grass/temporal/base.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer.serialize",
        "line": 159,
        "column": 31,
        "endLine": 159,
        "endColumn": 41,
        "path": "python/grass/temporal/base.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer.serialize",
        "line": 161,
        "column": 31,
        "endLine": 161,
        "endColumn": 37,
        "path": "python/grass/temporal/base.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer.serialize",
        "line": 165,
        "column": 31,
        "endLine": 165,
        "endColumn": 42,
        "path": "python/grass/temporal/base.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer.serialize",
        "line": 167,
        "column": 31,
        "endLine": 167,
        "endColumn": 38,
        "path": "python/grass/temporal/base.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer.serialize",
        "line": 44,
        "column": 4,
        "endLine": 44,
        "endColumn": 17,
        "path": "python/grass/temporal/base.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (33/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "DictSQLSerializer.serialize",
        "line": 44,
        "column": 4,
        "endLine": 44,
        "endColumn": 17,
        "path": "python/grass/temporal/base.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (79/50)",
        "message-id": "R0915"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "SQLDatabaseInterface.select",
        "line": 388,
        "column": 27,
        "endLine": 388,
        "endColumn": 73,
        "path": "python/grass/temporal/base.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.base",
        "obj": "SQLDatabaseInterface.select",
        "line": 413,
        "column": 28,
        "endLine": 413,
        "endColumn": 74,
        "path": "python/grass/temporal/base.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.base",
        "obj": "SQLDatabaseInterface.select",
        "line": 413,
        "column": 28,
        "endLine": 413,
        "endColumn": 29,
        "path": "python/grass/temporal/base.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "SQLDatabaseInterface.get_update_statement",
        "line": 468,
        "column": 8,
        "endLine": 475,
        "endColumn": 13,
        "path": "python/grass/temporal/base.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "error",
        "module": "grass.temporal.base",
        "obj": "SQLDatabaseInterface.update",
        "line": 507,
        "column": 28,
        "endLine": 507,
        "endColumn": 51,
        "path": "python/grass/temporal/base.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.base",
        "obj": "SQLDatabaseInterface.update",
        "line": 507,
        "column": 28,
        "endLine": 507,
        "endColumn": 29,
        "path": "python/grass/temporal/base.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "SQLDatabaseInterface.get_update_all_statement",
        "line": 531,
        "column": 8,
        "endLine": 540,
        "endColumn": 13,
        "path": "python/grass/temporal/base.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "error",
        "module": "grass.temporal.base",
        "obj": "SQLDatabaseInterface.update_all",
        "line": 564,
        "column": 28,
        "endLine": 564,
        "endColumn": 51,
        "path": "python/grass/temporal/base.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.base",
        "obj": "SQLDatabaseInterface.update_all",
        "line": 564,
        "column": 28,
        "endLine": 564,
        "endColumn": 29,
        "path": "python/grass/temporal/base.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "DatasetBase.__init__",
        "line": 631,
        "column": 4,
        "endLine": 631,
        "endColumn": 16,
        "path": "python/grass/temporal/base.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.temporal.base",
        "obj": "DatasetBase.__init__",
        "line": 666,
        "column": 22,
        "endLine": 666,
        "endColumn": 27,
        "path": "python/grass/temporal/base.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'layer'",
        "message-id": "W0612"
    },
    {
        "type": "error",
        "module": "grass.temporal.base",
        "obj": "DatasetBase.set_id",
        "line": 690,
        "column": 32,
        "endLine": 690,
        "endColumn": 76,
        "path": "python/grass/temporal/base.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.base",
        "obj": "DatasetBase.set_id",
        "line": 690,
        "column": 32,
        "endLine": 690,
        "endColumn": 33,
        "path": "python/grass/temporal/base.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "DatasetBase.set_ttype",
        "line": 743,
        "column": 29,
        "endLine": 743,
        "endColumn": 72,
        "path": "python/grass/temporal/base.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'ttype not in ('absolute', 'relative')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "DatasetBase.get_id",
        "line": 753,
        "column": 8,
        "endLine": 756,
        "endColumn": 23,
        "path": "python/grass/temporal/base.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "DatasetBase.get_map_id",
        "line": 766,
        "column": 12,
        "endLine": 770,
        "endColumn": 30,
        "path": "python/grass/temporal/base.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "DatasetBase.get_layer",
        "line": 781,
        "column": 8,
        "endLine": 784,
        "endColumn": 23,
        "path": "python/grass/temporal/base.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "DatasetBase.get_name",
        "line": 789,
        "column": 8,
        "endLine": 792,
        "endColumn": 23,
        "path": "python/grass/temporal/base.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "DatasetBase.get_mapset",
        "line": 797,
        "column": 8,
        "endLine": 800,
        "endColumn": 23,
        "path": "python/grass/temporal/base.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "DatasetBase.get_creator",
        "line": 805,
        "column": 8,
        "endLine": 808,
        "endColumn": 23,
        "path": "python/grass/temporal/base.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "DatasetBase.get_ctime",
        "line": 813,
        "column": 8,
        "endLine": 816,
        "endColumn": 23,
        "path": "python/grass/temporal/base.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "DatasetBase.get_ttype",
        "line": 821,
        "column": 8,
        "endLine": 824,
        "endColumn": 23,
        "path": "python/grass/temporal/base.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "DatasetBase.print_shell_info",
        "line": 859,
        "column": 14,
        "endLine": 859,
        "endColumn": 34,
        "path": "python/grass/temporal/base.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "RasterBase.__init__",
        "line": 868,
        "column": 4,
        "endLine": 868,
        "endColumn": 16,
        "path": "python/grass/temporal/base.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "Raster3DBase.__init__",
        "line": 892,
        "column": 4,
        "endLine": 892,
        "endColumn": 16,
        "path": "python/grass/temporal/base.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "VectorBase.__init__",
        "line": 916,
        "column": 4,
        "endLine": 916,
        "endColumn": 16,
        "path": "python/grass/temporal/base.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "STDSBase.__init__",
        "line": 997,
        "column": 4,
        "endLine": 997,
        "endColumn": 16,
        "path": "python/grass/temporal/base.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (10/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "STDSBase.get_semantic_type",
        "line": 1031,
        "column": 8,
        "endLine": 1034,
        "endColumn": 23,
        "path": "python/grass/temporal/base.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "STDSBase.get_mtime",
        "line": 1042,
        "column": 8,
        "endLine": 1045,
        "endColumn": 23,
        "path": "python/grass/temporal/base.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.temporal.base",
        "obj": "STDSBase.print_shell_info",
        "line": 1059,
        "column": 14,
        "endLine": 1059,
        "endColumn": 38,
        "path": "python/grass/temporal/base.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "STRDSBase.__init__",
        "line": 1069,
        "column": 4,
        "endLine": 1069,
        "endColumn": 16,
        "path": "python/grass/temporal/base.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "STR3DSBase.__init__",
        "line": 1095,
        "column": 4,
        "endLine": 1095,
        "endColumn": 16,
        "path": "python/grass/temporal/base.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "STVDSBase.__init__",
        "line": 1121,
        "column": 4,
        "endLine": 1121,
        "endColumn": 16,
        "path": "python/grass/temporal/base.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "AbstractSTDSRegister.get_id",
        "line": 1205,
        "column": 8,
        "endLine": 1208,
        "endColumn": 23,
        "path": "python/grass/temporal/base.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.base",
        "obj": "AbstractSTDSRegister.get_registered_stds",
        "line": 1216,
        "column": 8,
        "endLine": 1219,
        "endColumn": 23,
        "path": "python/grass/temporal/base.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "",
        "line": 1362,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "line-too-long",
        "message": "Line too long (158/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "",
        "line": 1399,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "line-too-long",
        "message": "Line too long (217/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (2054/1000)",
        "message-id": "C0302"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "",
        "line": 1165,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "fixme",
        "message": "TODO: Write time zone support",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 30,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.gis'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 30,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 36,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.raster'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 36,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 36,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.vector'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 36,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 32,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.date'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 32,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "",
        "line": 23,
        "column": 0,
        "endLine": 23,
        "endColumn": 40,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.raster3d'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "",
        "line": 23,
        "column": 0,
        "endLine": 23,
        "endColumn": 40,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "",
        "line": 24,
        "column": 0,
        "endLine": 24,
        "endColumn": 36,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.temporal'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "",
        "line": 24,
        "column": 0,
        "endLine": 24,
        "endColumn": 36,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "convention",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "RPCDefs",
        "line": 34,
        "column": 0,
        "endLine": 34,
        "endColumn": 13,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "RPCDefs",
        "line": 34,
        "column": 0,
        "endLine": 34,
        "endColumn": 13,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_map_full_info",
        "line": 82,
        "column": 4,
        "endLine": 83,
        "endColumn": 13,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "try-except-raise",
        "message": "The except handler raises immediately",
        "message-id": "W0706"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_map_full_info",
        "line": 65,
        "column": 24,
        "endLine": 65,
        "endColumn": 28,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'lock'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_fatal_error",
        "line": 194,
        "column": 17,
        "endLine": 194,
        "endColumn": 21,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'lock'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_fatal_error",
        "line": 194,
        "column": 23,
        "endLine": 194,
        "endColumn": 27,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'conn'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_fatal_error",
        "line": 194,
        "column": 29,
        "endLine": 194,
        "endColumn": 33,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'data'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_get_mapset",
        "line": 202,
        "column": 16,
        "endLine": 202,
        "endColumn": 20,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'lock'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_get_mapset",
        "line": 202,
        "column": 28,
        "endLine": 202,
        "endColumn": 32,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'data'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_get_location",
        "line": 218,
        "column": 18,
        "endLine": 218,
        "endColumn": 22,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'lock'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_get_location",
        "line": 218,
        "column": 30,
        "endLine": 218,
        "endColumn": 34,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'data'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_get_gisdbase",
        "line": 234,
        "column": 18,
        "endLine": 234,
        "endColumn": 22,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'lock'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_get_gisdbase",
        "line": 234,
        "column": 30,
        "endLine": 234,
        "endColumn": 34,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'data'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_get_driver_name",
        "line": 250,
        "column": 21,
        "endLine": 250,
        "endColumn": 25,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'lock'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_get_database_name",
        "line": 297,
        "column": 4,
        "endLine": 298,
        "endColumn": 13,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "try-except-raise",
        "message": "The except handler raises immediately",
        "message-id": "W0706"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_get_database_name",
        "line": 272,
        "column": 23,
        "endLine": 272,
        "endColumn": 27,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'lock'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_available_mapsets",
        "line": 355,
        "column": 4,
        "endLine": 356,
        "endColumn": 13,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "try-except-raise",
        "message": "The except handler raises immediately",
        "message-id": "W0706"
    },
    {
        "type": "convention",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_available_mapsets",
        "line": 340,
        "column": 16,
        "endLine": 341,
        "endColumn": 59,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_available_mapsets",
        "line": 306,
        "column": 23,
        "endLine": 306,
        "endColumn": 27,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'lock'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_available_mapsets",
        "line": 306,
        "column": 35,
        "endLine": 306,
        "endColumn": 39,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'data'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_has_timestamp",
        "line": 389,
        "column": 4,
        "endLine": 390,
        "endColumn": 13,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "try-except-raise",
        "message": "The except handler raises immediately",
        "message-id": "W0706"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_has_timestamp",
        "line": 364,
        "column": 19,
        "endLine": 364,
        "endColumn": 23,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'lock'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_timestamp",
        "line": 439,
        "column": 4,
        "endLine": 440,
        "endColumn": 13,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "try-except-raise",
        "message": "The except handler raises immediately",
        "message-id": "W0706"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_timestamp",
        "line": 398,
        "column": 20,
        "endLine": 398,
        "endColumn": 24,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'lock'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_write_timestamp",
        "line": 483,
        "column": 4,
        "endLine": 484,
        "endColumn": 13,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "try-except-raise",
        "message": "The except handler raises immediately",
        "message-id": "W0706"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_write_timestamp",
        "line": 474,
        "column": 12,
        "endLine": 474,
        "endColumn": 75,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_write_timestamp",
        "line": 448,
        "column": 0,
        "endLine": 448,
        "endColumn": 20,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_write_timestamp",
        "line": 448,
        "column": 21,
        "endLine": 448,
        "endColumn": 25,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'lock'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_remove_timestamp",
        "line": 520,
        "column": 4,
        "endLine": 521,
        "endColumn": 13,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "try-except-raise",
        "message": "The except handler raises immediately",
        "message-id": "W0706"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_remove_timestamp",
        "line": 492,
        "column": 22,
        "endLine": 492,
        "endColumn": 26,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'lock'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_semantic_label",
        "line": 560,
        "column": 4,
        "endLine": 561,
        "endColumn": 13,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "try-except-raise",
        "message": "The except handler raises immediately",
        "message-id": "W0706"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_semantic_label",
        "line": 556,
        "column": 12,
        "endLine": 558,
        "endColumn": 13,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_semantic_label",
        "line": 557,
        "column": 16,
        "endLine": 557,
        "endColumn": 75,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_semantic_label",
        "line": 529,
        "column": 0,
        "endLine": 529,
        "endColumn": 24,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_semantic_label",
        "line": 529,
        "column": 25,
        "endLine": 529,
        "endColumn": 29,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'lock'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_write_semantic_label",
        "line": 597,
        "column": 4,
        "endLine": 598,
        "endColumn": 13,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "try-except-raise",
        "message": "The except handler raises immediately",
        "message-id": "W0706"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_write_semantic_label",
        "line": 590,
        "column": 33,
        "endLine": 590,
        "endColumn": 60,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_write_semantic_label",
        "line": 590,
        "column": 33,
        "endLine": 590,
        "endColumn": 34,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_write_semantic_label",
        "line": 593,
        "column": 12,
        "endLine": 595,
        "endColumn": 13,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_write_semantic_label",
        "line": 594,
        "column": 16,
        "endLine": 594,
        "endColumn": 76,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_write_semantic_label",
        "line": 569,
        "column": 0,
        "endLine": 569,
        "endColumn": 25,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_write_semantic_label",
        "line": 569,
        "column": 26,
        "endLine": 569,
        "endColumn": 30,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'lock'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_remove_semantic_label",
        "line": 631,
        "column": 4,
        "endLine": 632,
        "endColumn": 13,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "try-except-raise",
        "message": "The except handler raises immediately",
        "message-id": "W0706"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_remove_semantic_label",
        "line": 627,
        "column": 12,
        "endLine": 629,
        "endColumn": 13,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_remove_semantic_label",
        "line": 628,
        "column": 16,
        "endLine": 628,
        "endColumn": 77,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_remove_semantic_label",
        "line": 606,
        "column": 0,
        "endLine": 606,
        "endColumn": 26,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_remove_semantic_label",
        "line": 606,
        "column": 27,
        "endLine": 606,
        "endColumn": 31,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'lock'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_map_exists",
        "line": 665,
        "column": 4,
        "endLine": 666,
        "endColumn": 13,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "try-except-raise",
        "message": "The except handler raises immediately",
        "message-id": "W0706"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_map_exists",
        "line": 640,
        "column": 16,
        "endLine": 640,
        "endColumn": 20,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'lock'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_map_info",
        "line": 693,
        "column": 4,
        "endLine": 694,
        "endColumn": 13,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "try-except-raise",
        "message": "The except handler raises immediately",
        "message-id": "W0706"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_map_info",
        "line": 674,
        "column": 19,
        "endLine": 674,
        "endColumn": 23,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'lock'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster_info",
        "line": 744,
        "column": 8,
        "endLine": 744,
        "endColumn": 13,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'range'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster_info",
        "line": 756,
        "column": 12,
        "endLine": 756,
        "endColumn": 15,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'min'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster_info",
        "line": 757,
        "column": 12,
        "endLine": 757,
        "endColumn": 15,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'max'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster_info",
        "line": 748,
        "column": 28,
        "endLine": 748,
        "endColumn": 58,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster_info",
        "line": 748,
        "column": 28,
        "endLine": 748,
        "endColumn": 29,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster_info",
        "line": 752,
        "column": 25,
        "endLine": 752,
        "endColumn": 56,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster_info",
        "line": 752,
        "column": 25,
        "endLine": 752,
        "endColumn": 26,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster_info",
        "line": 766,
        "column": 28,
        "endLine": 766,
        "endColumn": 58,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster_info",
        "line": 766,
        "column": 28,
        "endLine": 766,
        "endColumn": 29,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster_info",
        "line": 770,
        "column": 25,
        "endLine": 770,
        "endColumn": 56,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster_info",
        "line": 770,
        "column": 25,
        "endLine": 770,
        "endColumn": 26,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster_info",
        "line": 702,
        "column": 0,
        "endLine": 702,
        "endColumn": 21,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (56/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster3d_info",
        "line": 847,
        "column": 4,
        "endLine": 847,
        "endColumn": 7,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'min'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster3d_info",
        "line": 848,
        "column": 4,
        "endLine": 848,
        "endColumn": 7,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'max'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster3d_info",
        "line": 836,
        "column": 22,
        "endLine": 836,
        "endColumn": 69,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster3d_info",
        "line": 836,
        "column": 22,
        "endLine": 836,
        "endColumn": 23,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster3d_info",
        "line": 836,
        "column": 24,
        "endLine": 836,
        "endColumn": 59,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster3d_info",
        "line": 851,
        "column": 22,
        "endLine": 851,
        "endColumn": 78,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster3d_info",
        "line": 851,
        "column": 22,
        "endLine": 851,
        "endColumn": 23,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster3d_info",
        "line": 851,
        "column": 24,
        "endLine": 851,
        "endColumn": 68,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster3d_info",
        "line": 865,
        "column": 22,
        "endLine": 865,
        "endColumn": 70,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster3d_info",
        "line": 865,
        "column": 22,
        "endLine": 865,
        "endColumn": 23,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster3d_info",
        "line": 865,
        "column": 24,
        "endLine": 865,
        "endColumn": 60,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_vector_info",
        "line": 893,
        "column": 4,
        "endLine": 893,
        "endColumn": 7,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "invalid-name",
        "message": "Variable name \"Map\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_vector_info",
        "line": 908,
        "column": 16,
        "endLine": 911,
        "endColumn": 17,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_vector_info",
        "line": 908,
        "column": 16,
        "endLine": 908,
        "endColumn": 17,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_vector_info",
        "line": 909,
        "column": 20,
        "endLine": 909,
        "endColumn": 52,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_map_history",
        "line": 1003,
        "column": 4,
        "endLine": 1004,
        "endColumn": 13,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "try-except-raise",
        "message": "The except handler raises immediately",
        "message-id": "W0706"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_map_history",
        "line": 985,
        "column": 22,
        "endLine": 985,
        "endColumn": 26,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'lock'",
        "message-id": "W0613"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster_history",
        "line": 1033,
        "column": 4,
        "endLine": 1042,
        "endColumn": 9,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster_history",
        "line": 1034,
        "column": 24,
        "endLine": 1034,
        "endColumn": 56,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster_history",
        "line": 1034,
        "column": 24,
        "endLine": 1034,
        "endColumn": 25,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster3d_history",
        "line": 1071,
        "column": 4,
        "endLine": 1080,
        "endColumn": 9,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster3d_history",
        "line": 1072,
        "column": 24,
        "endLine": 1072,
        "endColumn": 56,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_raster3d_history",
        "line": 1072,
        "column": 24,
        "endLine": 1072,
        "endColumn": 25,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_vector_history",
        "line": 1107,
        "column": 4,
        "endLine": 1107,
        "endColumn": 7,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "invalid-name",
        "message": "Variable name \"Map\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_read_vector_history",
        "line": 1112,
        "column": 8,
        "endLine": 1112,
        "endColumn": 12,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "pointless-statement",
        "message": "Statement seems to have no effect",
        "message-id": "W0104"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_convert_timestamp_from_grass",
        "line": 1142,
        "column": 4,
        "endLine": 1203,
        "endColumn": 33,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_convert_timestamp_from_grass",
        "line": 1121,
        "column": 0,
        "endLine": 1121,
        "endColumn": 33,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (18/12)",
        "message-id": "R0912"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "_stop",
        "line": 1209,
        "column": 22,
        "endLine": 1209,
        "endColumn": 26,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'data'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "c_library_server.error_handler",
        "line": 1227,
        "column": 22,
        "endLine": 1227,
        "endColumn": 26,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'data'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "c_library_server",
        "line": 1237,
        "column": 4,
        "endLine": 1237,
        "endColumn": 12,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "invalid-name",
        "message": "Variable name \"CALLBACK\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "CLibrariesInterface.fatal_error",
        "line": 2040,
        "column": 26,
        "endLine": 2040,
        "endColumn": 32,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'mapset'",
        "message-id": "W0613"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "CLibrariesInterface",
        "line": 1279,
        "column": 0,
        "endLine": 1279,
        "endColumn": 25,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "too-many-public-methods",
        "message": "Too many public methods (34/20)",
        "message-id": "R0904"
    },
    {
        "type": "convention",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "",
        "line": 14,
        "column": 0,
        "endLine": 14,
        "endColumn": 10,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"sys\" should be placed before first party import \"grass.exceptions.FatalError\" ",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "",
        "line": 15,
        "column": 0,
        "endLine": 15,
        "endColumn": 47,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"multiprocessing.Process\" should be placed before first party import \"grass.exceptions.FatalError\" ",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "",
        "line": 16,
        "column": 0,
        "endLine": 16,
        "endColumn": 14,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"logging\" should be placed before first party import \"grass.exceptions.FatalError\" ",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 67,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"ctypes.byref\" should be placed before first party import \"grass.exceptions.FatalError\" ",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.c_libraries_interface",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 29,
        "path": "python/grass/temporal/c_libraries_interface.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"datetime.datetime\" should be placed before first party import \"grass.exceptions.FatalError\" ",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/core.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1640/1000)",
        "message-id": "C0302"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "",
        "line": 51,
        "column": 0,
        "endLine": 52,
        "endColumn": 8,
        "path": "python/grass/temporal/core.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "",
        "line": 49,
        "column": 4,
        "endLine": 49,
        "endColumn": 19,
        "path": "python/grass/temporal/core.py",
        "symbol": "import-error",
        "message": "Unable to import 'psycopg2'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "",
        "line": 50,
        "column": 4,
        "endLine": 50,
        "endColumn": 26,
        "path": "python/grass/temporal/core.py",
        "symbol": "import-error",
        "message": "Unable to import 'psycopg2.extras'",
        "message-id": "E0401"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "profile_function",
        "line": 64,
        "column": 7,
        "endLine": 64,
        "endColumn": 52,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'do_profiling in ('True', '1')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "profile_function",
        "line": 65,
        "column": 8,
        "endLine": 65,
        "endColumn": 23,
        "path": "python/grass/temporal/core.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (cProfile)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "profile_function",
        "line": 66,
        "column": 8,
        "endLine": 66,
        "endColumn": 21,
        "path": "python/grass/temporal/core.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (pstats)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "profile_function",
        "line": 67,
        "column": 8,
        "endLine": 67,
        "endColumn": 17,
        "path": "python/grass/temporal/core.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (io)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "",
        "line": 85,
        "column": 0,
        "endLine": 85,
        "endColumn": 12,
        "path": "python/grass/temporal/core.py",
        "symbol": "invalid-name",
        "message": "Constant name \"tgis_backend\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "get_tgis_backend",
        "line": 93,
        "column": 4,
        "endLine": 93,
        "endColumn": 23,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'tgis_backend' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "",
        "line": 99,
        "column": 0,
        "endLine": 99,
        "endColumn": 13,
        "path": "python/grass/temporal/core.py",
        "symbol": "invalid-name",
        "message": "Constant name \"tgis_database\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "get_tgis_database",
        "line": 104,
        "column": 4,
        "endLine": 104,
        "endColumn": 24,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'tgis_database' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "",
        "line": 111,
        "column": 0,
        "endLine": 111,
        "endColumn": 12,
        "path": "python/grass/temporal/core.py",
        "symbol": "invalid-name",
        "message": "Constant name \"tgis_version\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "",
        "line": 116,
        "column": 0,
        "endLine": 116,
        "endColumn": 15,
        "path": "python/grass/temporal/core.py",
        "symbol": "invalid-name",
        "message": "Constant name \"tgis_db_version\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "",
        "line": 119,
        "column": 0,
        "endLine": 119,
        "endColumn": 20,
        "path": "python/grass/temporal/core.py",
        "symbol": "invalid-name",
        "message": "Constant name \"tgis_dbmi_paramstyle\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "get_tgis_dbmi_paramstyle",
        "line": 127,
        "column": 4,
        "endLine": 127,
        "endColumn": 31,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'tgis_dbmi_paramstyle' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "",
        "line": 133,
        "column": 0,
        "endLine": 133,
        "endColumn": 14,
        "path": "python/grass/temporal/core.py",
        "symbol": "invalid-name",
        "message": "Constant name \"current_mapset\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "",
        "line": 134,
        "column": 0,
        "endLine": 134,
        "endColumn": 16,
        "path": "python/grass/temporal/core.py",
        "symbol": "invalid-name",
        "message": "Constant name \"current_location\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "",
        "line": 135,
        "column": 0,
        "endLine": 135,
        "endColumn": 16,
        "path": "python/grass/temporal/core.py",
        "symbol": "invalid-name",
        "message": "Constant name \"current_gisdbase\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "get_current_mapset",
        "line": 147,
        "column": 4,
        "endLine": 147,
        "endColumn": 25,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'current_mapset' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "get_current_location",
        "line": 161,
        "column": 4,
        "endLine": 161,
        "endColumn": 27,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'current_location' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "get_current_gisdbase",
        "line": 175,
        "column": 4,
        "endLine": 175,
        "endColumn": 27,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'current_gisdbase' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "",
        "line": 188,
        "column": 0,
        "endLine": 188,
        "endColumn": 19,
        "path": "python/grass/temporal/core.py",
        "symbol": "invalid-name",
        "message": "Constant name \"enable_mapset_check\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "",
        "line": 196,
        "column": 0,
        "endLine": 196,
        "endColumn": 22,
        "path": "python/grass/temporal/core.py",
        "symbol": "invalid-name",
        "message": "Constant name \"enable_timestamp_write\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "get_enable_mapset_check",
        "line": 216,
        "column": 4,
        "endLine": 216,
        "endColumn": 30,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'enable_mapset_check' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "get_enable_timestamp_write",
        "line": 236,
        "column": 4,
        "endLine": 236,
        "endColumn": 33,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'enable_timestamp_write' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "",
        "line": 244,
        "column": 0,
        "endLine": 244,
        "endColumn": 17,
        "path": "python/grass/temporal/core.py",
        "symbol": "invalid-name",
        "message": "Constant name \"message_interface\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "_init_tgis_message_interface",
        "line": 247,
        "column": 33,
        "endLine": 247,
        "endColumn": 47,
        "path": "python/grass/temporal/core.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'raise_on_error' from outer scope (line 300)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "_init_tgis_message_interface",
        "line": 253,
        "column": 4,
        "endLine": 253,
        "endColumn": 28,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-statement",
        "message": "Using the global statement",
        "message-id": "W0603"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "get_tgis_message_interface",
        "line": 265,
        "column": 4,
        "endLine": 265,
        "endColumn": 28,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'message_interface' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "",
        "line": 274,
        "column": 0,
        "endLine": 274,
        "endColumn": 19,
        "path": "python/grass/temporal/core.py",
        "symbol": "invalid-name",
        "message": "Constant name \"c_library_interface\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "_init_tgis_c_library_interface",
        "line": 282,
        "column": 4,
        "endLine": 282,
        "endColumn": 30,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-statement",
        "message": "Using the global statement",
        "message-id": "W0603"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "get_tgis_c_library_interface",
        "line": 292,
        "column": 4,
        "endLine": 292,
        "endColumn": 30,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'c_library_interface' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "",
        "line": 300,
        "column": 0,
        "endLine": 300,
        "endColumn": 14,
        "path": "python/grass/temporal/core.py",
        "symbol": "invalid-name",
        "message": "Constant name \"raise_on_error\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "set_raise_on_error",
        "line": 336,
        "column": 4,
        "endLine": 336,
        "endColumn": 25,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-statement",
        "message": "Using the global statement",
        "message-id": "W0603"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "set_raise_on_error",
        "line": 340,
        "column": 4,
        "endLine": 340,
        "endColumn": 28,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'message_interface' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "get_raise_on_error",
        "line": 353,
        "column": 4,
        "endLine": 353,
        "endColumn": 25,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'raise_on_error' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "get_tgis_version",
        "line": 364,
        "column": 4,
        "endLine": 364,
        "endColumn": 23,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'tgis_version' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "get_tgis_db_version",
        "line": 375,
        "column": 4,
        "endLine": 375,
        "endColumn": 26,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'tgis_db_version' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "get_tgis_metadata",
        "line": 413,
        "column": 4,
        "endLine": 414,
        "endColumn": 19,
        "path": "python/grass/temporal/core.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "",
        "line": 426,
        "column": 0,
        "endLine": 426,
        "endColumn": 20,
        "path": "python/grass/temporal/core.py",
        "symbol": "invalid-name",
        "message": "Constant name \"tgis_database_string\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "get_tgis_database_string",
        "line": 436,
        "column": 4,
        "endLine": 436,
        "endColumn": 31,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'tgis_database_string' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "get_sql_template_path",
        "line": 443,
        "column": 0,
        "endLine": 443,
        "endColumn": 25,
        "path": "python/grass/temporal/core.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "stop_subprocesses",
        "line": 456,
        "column": 4,
        "endLine": 456,
        "endColumn": 28,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'message_interface' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "stop_subprocesses",
        "line": 457,
        "column": 4,
        "endLine": 457,
        "endColumn": 30,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'c_library_interface' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "get_available_temporal_mapsets",
        "line": 475,
        "column": 4,
        "endLine": 475,
        "endColumn": 30,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'c_library_interface' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "get_available_temporal_mapsets",
        "line": 476,
        "column": 4,
        "endLine": 476,
        "endColumn": 28,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'message_interface' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "get_available_temporal_mapsets",
        "line": 483,
        "column": 8,
        "endLine": 483,
        "endColumn": 14,
        "path": "python/grass/temporal/core.py",
        "symbol": "self-assigning-variable",
        "message": "Assigning the same variable 'mapset' to itself",
        "message-id": "W0127"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "get_available_temporal_mapsets",
        "line": 489,
        "column": 12,
        "endLine": 490,
        "endColumn": 55,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 516,
        "column": 0,
        "endLine": 516,
        "endColumn": 8,
        "path": "python/grass/temporal/core.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (18/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 635,
        "column": 16,
        "endLine": 635,
        "endColumn": 30,
        "path": "python/grass/temporal/core.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'sqlite3' from outer scope (line 44)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 646,
        "column": 16,
        "endLine": 646,
        "endColumn": 31,
        "path": "python/grass/temporal/core.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'psycopg2' from outer scope (line 49)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 564,
        "column": 4,
        "endLine": 564,
        "endColumn": 23,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-statement",
        "message": "Using the global statement",
        "message-id": "W0603"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 565,
        "column": 4,
        "endLine": 565,
        "endColumn": 24,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'tgis_database' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 566,
        "column": 4,
        "endLine": 566,
        "endColumn": 31,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-statement",
        "message": "Using the global statement",
        "message-id": "W0603"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 567,
        "column": 4,
        "endLine": 567,
        "endColumn": 31,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-statement",
        "message": "Using the global statement",
        "message-id": "W0603"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 568,
        "column": 4,
        "endLine": 568,
        "endColumn": 26,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'tgis_db_version' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 569,
        "column": 4,
        "endLine": 569,
        "endColumn": 25,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-statement",
        "message": "Using the global statement",
        "message-id": "W0603"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 570,
        "column": 4,
        "endLine": 570,
        "endColumn": 30,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-statement",
        "message": "Using the global statement",
        "message-id": "W0603"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 571,
        "column": 4,
        "endLine": 571,
        "endColumn": 33,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-statement",
        "message": "Using the global statement",
        "message-id": "W0603"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 572,
        "column": 4,
        "endLine": 572,
        "endColumn": 25,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-statement",
        "message": "Using the global statement",
        "message-id": "W0603"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 573,
        "column": 4,
        "endLine": 573,
        "endColumn": 27,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-statement",
        "message": "Using the global statement",
        "message-id": "W0603"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 574,
        "column": 4,
        "endLine": 574,
        "endColumn": 27,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-statement",
        "message": "Using the global statement",
        "message-id": "W0603"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 607,
        "column": 19,
        "endLine": 607,
        "endColumn": 42,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 635,
        "column": 16,
        "endLine": 635,
        "endColumn": 30,
        "path": "python/grass/temporal/core.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (sqlite3)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 646,
        "column": 16,
        "endLine": 646,
        "endColumn": 31,
        "path": "python/grass/temporal/core.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (psycopg2)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 656,
        "column": 16,
        "endLine": 660,
        "endColumn": 17,
        "path": "python/grass/temporal/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 656,
        "column": 16,
        "endLine": 656,
        "endColumn": 17,
        "path": "python/grass/temporal/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 669,
        "column": 12,
        "endLine": 669,
        "endColumn": 26,
        "path": "python/grass/temporal/core.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (sqlite3)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "",
        "line": 672,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/core.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 679,
        "column": 27,
        "endLine": 679,
        "endColumn": 31,
        "path": "python/grass/temporal/core.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'dbmi' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 712,
        "column": 23,
        "endLine": 716,
        "endColumn": 9,
        "path": "python/grass/temporal/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 712,
        "column": 23,
        "endLine": 712,
        "endColumn": 24,
        "path": "python/grass/temporal/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 718,
        "column": 23,
        "endLine": 732,
        "endColumn": 9,
        "path": "python/grass/temporal/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 718,
        "column": 23,
        "endLine": 718,
        "endColumn": 24,
        "path": "python/grass/temporal/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 745,
        "column": 16,
        "endLine": 748,
        "endColumn": 17,
        "path": "python/grass/temporal/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 745,
        "column": 16,
        "endLine": 745,
        "endColumn": 17,
        "path": "python/grass/temporal/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 756,
        "column": 20,
        "endLine": 762,
        "endColumn": 21,
        "path": "python/grass/temporal/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 756,
        "column": 20,
        "endLine": 756,
        "endColumn": 21,
        "path": "python/grass/temporal/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 775,
        "column": 22,
        "endLine": 785,
        "endColumn": 13,
        "path": "python/grass/temporal/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 775,
        "column": 22,
        "endLine": 775,
        "endColumn": 23,
        "path": "python/grass/temporal/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 776,
        "column": 16,
        "endLine": 779,
        "endColumn": 56,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 792,
        "column": 20,
        "endLine": 795,
        "endColumn": 21,
        "path": "python/grass/temporal/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 792,
        "column": 20,
        "endLine": 792,
        "endColumn": 21,
        "path": "python/grass/temporal/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 793,
        "column": 24,
        "endLine": 794,
        "endColumn": 53,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 516,
        "column": 0,
        "endLine": 516,
        "endColumn": 8,
        "path": "python/grass/temporal/core.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (29/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "init",
        "line": 516,
        "column": 0,
        "endLine": 516,
        "endColumn": 8,
        "path": "python/grass/temporal/core.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (108/50)",
        "message-id": "R0915"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "get_database_info_string",
        "line": 806,
        "column": 0,
        "endLine": 806,
        "endColumn": 28,
        "path": "python/grass/temporal/core.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "_create_temporal_database_views",
        "line": 834,
        "column": 23,
        "endLine": 836,
        "endColumn": 9,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "_create_temporal_database_views",
        "line": 834,
        "column": 23,
        "endLine": 836,
        "endColumn": 9,
        "path": "python/grass/temporal/core.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 840,
        "column": 0,
        "endLine": 840,
        "endColumn": 28,
        "path": "python/grass/temporal/core.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (22/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 848,
        "column": 4,
        "endLine": 848,
        "endColumn": 23,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'tgis_backend' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 849,
        "column": 4,
        "endLine": 849,
        "endColumn": 23,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'tgis_version' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 850,
        "column": 4,
        "endLine": 850,
        "endColumn": 26,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'tgis_db_version' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 851,
        "column": 4,
        "endLine": 851,
        "endColumn": 31,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'tgis_database_string' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 857,
        "column": 30,
        "endLine": 859,
        "endColumn": 5,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 857,
        "column": 30,
        "endLine": 859,
        "endColumn": 5,
        "path": "python/grass/temporal/core.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 860,
        "column": 26,
        "endLine": 862,
        "endColumn": 5,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 860,
        "column": 26,
        "endLine": 862,
        "endColumn": 5,
        "path": "python/grass/temporal/core.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 863,
        "column": 28,
        "endLine": 865,
        "endColumn": 5,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 863,
        "column": 28,
        "endLine": 865,
        "endColumn": 5,
        "path": "python/grass/temporal/core.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 866,
        "column": 26,
        "endLine": 868,
        "endColumn": 5,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 866,
        "column": 26,
        "endLine": 868,
        "endColumn": 5,
        "path": "python/grass/temporal/core.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 869,
        "column": 31,
        "endLine": 871,
        "endColumn": 5,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 869,
        "column": 31,
        "endLine": 871,
        "endColumn": 5,
        "path": "python/grass/temporal/core.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 872,
        "column": 25,
        "endLine": 874,
        "endColumn": 5,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 872,
        "column": 25,
        "endLine": 874,
        "endColumn": 5,
        "path": "python/grass/temporal/core.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 875,
        "column": 26,
        "endLine": 877,
        "endColumn": 5,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 875,
        "column": 26,
        "endLine": 877,
        "endColumn": 5,
        "path": "python/grass/temporal/core.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 878,
        "column": 25,
        "endLine": 880,
        "endColumn": 5,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 878,
        "column": 25,
        "endLine": 880,
        "endColumn": 5,
        "path": "python/grass/temporal/core.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 893,
        "column": 17,
        "endLine": 893,
        "endColumn": 82,
        "path": "python/grass/temporal/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 893,
        "column": 17,
        "endLine": 893,
        "endColumn": 18,
        "path": "python/grass/temporal/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 893,
        "column": 19,
        "endLine": 893,
        "endColumn": 51,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 901,
        "column": 19,
        "endLine": 901,
        "endColumn": 28,
        "path": "python/grass/temporal/core.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 903,
        "column": 20,
        "endLine": 907,
        "endColumn": 21,
        "path": "python/grass/temporal/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 903,
        "column": 20,
        "endLine": 903,
        "endColumn": 21,
        "path": "python/grass/temporal/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 904,
        "column": 24,
        "endLine": 906,
        "endColumn": 67,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 912,
        "column": 29,
        "endLine": 914,
        "endColumn": 9,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 912,
        "column": 29,
        "endLine": 914,
        "endColumn": 9,
        "path": "python/grass/temporal/core.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 915,
        "column": 22,
        "endLine": 917,
        "endColumn": 9,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 915,
        "column": 22,
        "endLine": 917,
        "endColumn": 9,
        "path": "python/grass/temporal/core.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 921,
        "column": 29,
        "endLine": 923,
        "endColumn": 9,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 921,
        "column": 29,
        "endLine": 923,
        "endColumn": 9,
        "path": "python/grass/temporal/core.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 924,
        "column": 22,
        "endLine": 926,
        "endColumn": 9,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 924,
        "column": 22,
        "endLine": 926,
        "endColumn": 9,
        "path": "python/grass/temporal/core.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "create_temporal_database",
        "line": 840,
        "column": 0,
        "endLine": 840,
        "endColumn": 28,
        "path": "python/grass/temporal/core.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (57/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "upgrade_temporal_database",
        "line": 979,
        "column": 4,
        "endLine": 979,
        "endColumn": 31,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'tgis_database_string' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "upgrade_temporal_database",
        "line": 980,
        "column": 4,
        "endLine": 980,
        "endColumn": 26,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'tgis_db_version' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "upgrade_temporal_database",
        "line": 987,
        "column": 12,
        "endLine": 990,
        "endColumn": 13,
        "path": "python/grass/temporal/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "upgrade_temporal_database",
        "line": 987,
        "column": 12,
        "endLine": 987,
        "endColumn": 13,
        "path": "python/grass/temporal/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "upgrade_temporal_database",
        "line": 1000,
        "column": 21,
        "endLine": 1000,
        "endColumn": 77,
        "path": "python/grass/temporal/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "upgrade_temporal_database",
        "line": 1000,
        "column": 21,
        "endLine": 1000,
        "endColumn": 22,
        "path": "python/grass/temporal/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "upgrade_temporal_database",
        "line": 1006,
        "column": 25,
        "endLine": 1012,
        "endColumn": 9,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "upgrade_temporal_database",
        "line": 1006,
        "column": 25,
        "endLine": 1012,
        "endColumn": 9,
        "path": "python/grass/temporal/core.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "upgrade_temporal_database",
        "line": 1009,
        "column": 16,
        "endLine": 1009,
        "endColumn": 41,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "upgrade_temporal_database",
        "line": 1015,
        "column": 12,
        "endLine": 1015,
        "endColumn": 76,
        "path": "python/grass/temporal/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "upgrade_temporal_database",
        "line": 1015,
        "column": 12,
        "endLine": 1015,
        "endColumn": 13,
        "path": "python/grass/temporal/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "upgrade_temporal_database",
        "line": 1019,
        "column": 21,
        "endLine": 1019,
        "endColumn": 77,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "upgrade_temporal_database",
        "line": 1019,
        "column": 21,
        "endLine": 1019,
        "endColumn": 77,
        "path": "python/grass/temporal/core.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "upgrade_temporal_database",
        "line": 1022,
        "column": 8,
        "endLine": 1022,
        "endColumn": 70,
        "path": "python/grass/temporal/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "upgrade_temporal_database",
        "line": 1022,
        "column": 8,
        "endLine": 1022,
        "endColumn": 9,
        "path": "python/grass/temporal/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "_create_tgis_metadata_table",
        "line": 1053,
        "column": 14,
        "endLine": 1053,
        "endColumn": 32,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection",
        "line": 1064,
        "column": 0,
        "endLine": 1064,
        "endColumn": 36,
        "path": "python/grass/temporal/core.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.__init__",
        "line": 1073,
        "column": 8,
        "endLine": 1081,
        "endColumn": 72,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-dict-items",
        "message": "Consider iterating with .items()",
        "message-id": "C0206"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.__init__",
        "line": 1073,
        "column": 22,
        "endLine": 1073,
        "endColumn": 46,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.__init__",
        "line": 1076,
        "column": 31,
        "endLine": 1076,
        "endColumn": 61,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.get_dbmi",
        "line": 1085,
        "column": 4,
        "endLine": 1085,
        "endColumn": 16,
        "path": "python/grass/temporal/core.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.connect",
        "line": 1107,
        "column": 8,
        "endLine": 1111,
        "endColumn": 38,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-dict-items",
        "message": "Consider iterating with .items()",
        "message-id": "C0206"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.connect",
        "line": 1107,
        "column": 22,
        "endLine": 1107,
        "endColumn": 46,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.connect",
        "line": 1108,
        "column": 12,
        "endLine": 1108,
        "endColumn": 18,
        "path": "python/grass/temporal/core.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'driver'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.is_connected",
        "line": 1115,
        "column": 4,
        "endLine": 1115,
        "endColumn": 20,
        "path": "python/grass/temporal/core.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.close",
        "line": 1124,
        "column": 8,
        "endLine": 1125,
        "endColumn": 48,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-dict-items",
        "message": "Consider iterating with .items()",
        "message-id": "C0206"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.close",
        "line": 1124,
        "column": 19,
        "endLine": 1124,
        "endColumn": 49,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.mogrify_sql_statement",
        "line": 1144,
        "column": 25,
        "endLine": 1144,
        "endColumn": 49,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.mogrify_sql_statement",
        "line": 1146,
        "column": 16,
        "endLine": 1149,
        "endColumn": 17,
        "path": "python/grass/temporal/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.mogrify_sql_statement",
        "line": 1146,
        "column": 16,
        "endLine": 1146,
        "endColumn": 17,
        "path": "python/grass/temporal/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.check_table",
        "line": 1171,
        "column": 25,
        "endLine": 1171,
        "endColumn": 49,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.check_table",
        "line": 1173,
        "column": 16,
        "endLine": 1173,
        "endColumn": 88,
        "path": "python/grass/temporal/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.check_table",
        "line": 1173,
        "column": 16,
        "endLine": 1173,
        "endColumn": 17,
        "path": "python/grass/temporal/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.execute",
        "line": 1189,
        "column": 25,
        "endLine": 1189,
        "endColumn": 49,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.execute",
        "line": 1191,
        "column": 16,
        "endLine": 1194,
        "endColumn": 17,
        "path": "python/grass/temporal/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.execute",
        "line": 1191,
        "column": 16,
        "endLine": 1191,
        "endColumn": 17,
        "path": "python/grass/temporal/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.fetchone",
        "line": 1199,
        "column": 4,
        "endLine": 1199,
        "endColumn": 16,
        "path": "python/grass/temporal/core.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.fetchone",
        "line": 1204,
        "column": 25,
        "endLine": 1204,
        "endColumn": 49,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.fetchone",
        "line": 1206,
        "column": 16,
        "endLine": 1206,
        "endColumn": 86,
        "path": "python/grass/temporal/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.fetchone",
        "line": 1206,
        "column": 16,
        "endLine": 1206,
        "endColumn": 17,
        "path": "python/grass/temporal/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.fetchall",
        "line": 1211,
        "column": 4,
        "endLine": 1211,
        "endColumn": 16,
        "path": "python/grass/temporal/core.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.fetchall",
        "line": 1216,
        "column": 25,
        "endLine": 1216,
        "endColumn": 49,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.fetchall",
        "line": 1218,
        "column": 16,
        "endLine": 1218,
        "endColumn": 86,
        "path": "python/grass/temporal/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.fetchall",
        "line": 1218,
        "column": 16,
        "endLine": 1218,
        "endColumn": 17,
        "path": "python/grass/temporal/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.execute_transaction",
        "line": 1235,
        "column": 25,
        "endLine": 1235,
        "endColumn": 49,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.execute_transaction",
        "line": 1237,
        "column": 16,
        "endLine": 1240,
        "endColumn": 17,
        "path": "python/grass/temporal/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "SQLDatabaseInterfaceConnection.execute_transaction",
        "line": 1237,
        "column": 16,
        "endLine": 1237,
        "endColumn": 17,
        "path": "python/grass/temporal/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "DBConnection.__init__",
        "line": 1276,
        "column": 12,
        "endLine": 1276,
        "endColumn": 31,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'tgis_backend' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "DBConnection.__init__",
        "line": 1288,
        "column": 12,
        "endLine": 1288,
        "endColumn": 39,
        "path": "python/grass/temporal/core.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'tgis_database_string' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "DBConnection.__init__",
        "line": 1296,
        "column": 12,
        "endLine": 1298,
        "endColumn": 30,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "DBConnection.is_connected",
        "line": 1305,
        "column": 4,
        "endLine": 1305,
        "endColumn": 20,
        "path": "python/grass/temporal/core.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "DBConnection.connect",
        "line": 1351,
        "column": 15,
        "endLine": 1351,
        "endColumn": 24,
        "path": "python/grass/temporal/core.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "DBConnection.connect",
        "line": 1353,
        "column": 16,
        "endLine": 1358,
        "endColumn": 17,
        "path": "python/grass/temporal/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "DBConnection.connect",
        "line": 1353,
        "column": 16,
        "endLine": 1353,
        "endColumn": 17,
        "path": "python/grass/temporal/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "DBConnection.mogrify_sql_statement",
        "line": 1414,
        "column": 12,
        "endLine": 1427,
        "endColumn": 36,
        "path": "python/grass/temporal/core.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "DBConnection.mogrify_sql_statement",
        "line": 1430,
        "column": 12,
        "endLine": 1482,
        "endColumn": 32,
        "path": "python/grass/temporal/core.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "DBConnection.mogrify_sql_statement",
        "line": 1450,
        "column": 36,
        "endLine": 1450,
        "endColumn": 46,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "DBConnection.mogrify_sql_statement",
        "line": 1455,
        "column": 36,
        "endLine": 1455,
        "endColumn": 44,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "DBConnection.mogrify_sql_statement",
        "line": 1461,
        "column": 36,
        "endLine": 1461,
        "endColumn": 44,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "DBConnection.mogrify_sql_statement",
        "line": 1467,
        "column": 36,
        "endLine": 1467,
        "endColumn": 46,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "DBConnection.mogrify_sql_statement",
        "line": 1475,
        "column": 36,
        "endLine": 1475,
        "endColumn": 46,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "DBConnection.mogrify_sql_statement",
        "line": 1379,
        "column": 4,
        "endLine": 1379,
        "endColumn": 29,
        "path": "python/grass/temporal/core.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (15/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.core",
        "obj": "DBConnection.mogrify_sql_statement",
        "line": 1379,
        "column": 4,
        "endLine": 1379,
        "endColumn": 29,
        "path": "python/grass/temporal/core.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "DBConnection.check_table",
        "line": 1506,
        "column": 16,
        "endLine": 1507,
        "endColumn": 45,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "DBConnection.check_table",
        "line": 1517,
        "column": 17,
        "endLine": 1517,
        "endColumn": 21,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "DBConnection.execute",
        "line": 1544,
        "column": 28,
        "endLine": 1544,
        "endColumn": 83,
        "path": "python/grass/temporal/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "DBConnection.execute",
        "line": 1544,
        "column": 28,
        "endLine": 1544,
        "endColumn": 29,
        "path": "python/grass/temporal/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "DBConnection.execute",
        "line": 1544,
        "column": 30,
        "endLine": 1544,
        "endColumn": 61,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "DBConnection.fetchone",
        "line": 1550,
        "column": 4,
        "endLine": 1550,
        "endColumn": 16,
        "path": "python/grass/temporal/core.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "DBConnection.fetchall",
        "line": 1555,
        "column": 4,
        "endLine": 1555,
        "endColumn": 16,
        "path": "python/grass/temporal/core.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "DBConnection.execute_transaction",
        "line": 1588,
        "column": 16,
        "endLine": 1588,
        "endColumn": 82,
        "path": "python/grass/temporal/core.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.core",
        "obj": "DBConnection.execute_transaction",
        "line": 1588,
        "column": 16,
        "endLine": 1588,
        "endColumn": 17,
        "path": "python/grass/temporal/core.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "DBConnection.execute_transaction",
        "line": 1588,
        "column": 18,
        "endLine": 1588,
        "endColumn": 60,
        "path": "python/grass/temporal/core.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "DBConnection.execute_transaction",
        "line": 1560,
        "column": 45,
        "endLine": 1560,
        "endColumn": 51,
        "path": "python/grass/temporal/core.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'mapset'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "DBConnection.connect",
        "line": 1334,
        "column": 16,
        "endLine": 1334,
        "endColumn": 31,
        "path": "python/grass/temporal/core.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'connection' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "DBConnection.connect",
        "line": 1345,
        "column": 16,
        "endLine": 1345,
        "endColumn": 31,
        "path": "python/grass/temporal/core.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'connection' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "DBConnection.connect",
        "line": 1341,
        "column": 16,
        "endLine": 1341,
        "endColumn": 27,
        "path": "python/grass/temporal/core.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'cursor' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.core",
        "obj": "DBConnection.connect",
        "line": 1347,
        "column": 16,
        "endLine": 1347,
        "endColumn": 27,
        "path": "python/grass/temporal/core.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'cursor' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "",
        "line": 38,
        "column": 0,
        "endLine": 38,
        "endColumn": 34,
        "path": "python/grass/temporal/core.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.pygrass.messages\" should be placed before local import \"c_libraries_interface.CLibrariesInterface\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "",
        "line": 39,
        "column": 0,
        "endLine": 39,
        "endColumn": 37,
        "path": "python/grass/temporal/core.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.script.utils.decode\" should be placed before local import \"c_libraries_interface.CLibrariesInterface\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "",
        "line": 54,
        "column": 0,
        "endLine": 54,
        "endColumn": 13,
        "path": "python/grass/temporal/core.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"atexit\" should be placed before first party imports \"grass.script\", \"grass.pygrass.messages\", \"grass.script.utils.decode\" and local import \"c_libraries_interface.CLibrariesInterface\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.core",
        "obj": "",
        "line": 55,
        "column": 0,
        "endLine": 55,
        "endColumn": 29,
        "path": "python/grass/temporal/core.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"datetime.datetime\" should be placed before first party imports \"grass.script\", \"grass.pygrass.messages\", \"grass.script.utils.decode\" and local import \"c_libraries_interface.CLibrariesInterface\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.datetime_math",
        "obj": "",
        "line": 631,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.datetime_math",
        "obj": "",
        "line": 636,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.datetime_math",
        "obj": "",
        "line": 641,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.datetime_math",
        "obj": "",
        "line": 646,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.datetime_math",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1022/1000)",
        "message-id": "C0302"
    },
    {
        "type": "warning",
        "module": "grass.temporal.datetime_math",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 21,
        "endColumn": 24,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.datetime_math",
        "obj": "",
        "line": 17,
        "column": 4,
        "endLine": 17,
        "endColumn": 36,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from dateutil import parser' instead",
        "message-id": "R0402"
    },
    {
        "type": "convention",
        "module": "grass.temporal.datetime_math",
        "obj": "",
        "line": 19,
        "column": 4,
        "endLine": 19,
        "endColumn": 16,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "invalid-name",
        "message": "Constant name \"has_dateutil\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.datetime_math",
        "obj": "",
        "line": 21,
        "column": 4,
        "endLine": 21,
        "endColumn": 16,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "invalid-name",
        "message": "Constant name \"has_dateutil\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.datetime_math",
        "obj": "modify_datetime_by_string",
        "line": 224,
        "column": 0,
        "endLine": 224,
        "endColumn": 29,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.datetime_math",
        "obj": "modify_datetime_by_string",
        "line": 244,
        "column": 7,
        "endLine": 244,
        "endColumn": 31,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'sign not in (1, -1)'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "error",
        "module": "grass.temporal.datetime_math",
        "obj": "modify_datetime_by_string",
        "line": 265,
        "column": 27,
        "endLine": 265,
        "endColumn": 58,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.datetime_math",
        "obj": "modify_datetime_by_string",
        "line": 265,
        "column": 27,
        "endLine": 265,
        "endColumn": 28,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.datetime_math",
        "obj": "modify_datetime_by_string",
        "line": 282,
        "column": 27,
        "endLine": 282,
        "endColumn": 58,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.datetime_math",
        "obj": "modify_datetime_by_string",
        "line": 282,
        "column": 27,
        "endLine": 282,
        "endColumn": 28,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.datetime_math",
        "obj": "modify_datetime_by_string",
        "line": 224,
        "column": 0,
        "endLine": 224,
        "endColumn": 29,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (13/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.datetime_math",
        "obj": "modify_datetime",
        "line": 295,
        "column": 0,
        "endLine": 295,
        "endColumn": 19,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.datetime_math",
        "obj": "modify_datetime",
        "line": 295,
        "column": 0,
        "endLine": 295,
        "endColumn": 19,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (22/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.temporal.datetime_math",
        "obj": "modify_datetime",
        "line": 327,
        "column": 8,
        "endLine": 328,
        "endColumn": 17,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "try-except-raise",
        "message": "The except handler raises immediately",
        "message-id": "W0706"
    },
    {
        "type": "warning",
        "module": "grass.temporal.datetime_math",
        "obj": "modify_datetime",
        "line": 354,
        "column": 8,
        "endLine": 355,
        "endColumn": 17,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "try-except-raise",
        "message": "The except handler raises immediately",
        "message-id": "W0706"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.datetime_math",
        "obj": "adjust_datetime_to_granularity",
        "line": 381,
        "column": 0,
        "endLine": 381,
        "endColumn": 34,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (22/15)",
        "message-id": "R0914"
    },
    {
        "type": "error",
        "module": "grass.temporal.datetime_math",
        "obj": "adjust_datetime_to_granularity",
        "line": 472,
        "column": 27,
        "endLine": 472,
        "endColumn": 60,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.datetime_math",
        "obj": "adjust_datetime_to_granularity",
        "line": 472,
        "column": 27,
        "endLine": 472,
        "endColumn": 28,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.datetime_math",
        "obj": "adjust_datetime_to_granularity",
        "line": 381,
        "column": 0,
        "endLine": 381,
        "endColumn": 34,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (20/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.datetime_math",
        "obj": "adjust_datetime_to_granularity",
        "line": 381,
        "column": 0,
        "endLine": 381,
        "endColumn": 34,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (67/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.datetime_math",
        "obj": "adjust_datetime_to_granularity",
        "line": 381,
        "column": 0,
        "endLine": 381,
        "endColumn": 34,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.datetime_math",
        "obj": "compute_datetime_delta",
        "line": 520,
        "column": 0,
        "endLine": 520,
        "endColumn": 26,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (28/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.datetime_math",
        "obj": "compute_datetime_delta",
        "line": 520,
        "column": 0,
        "endLine": 520,
        "endColumn": 26,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (62/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "grass.temporal.datetime_math",
        "obj": "check_datetime_string",
        "line": 792,
        "column": 4,
        "endLine": 792,
        "endColumn": 23,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'has_dateutil' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.datetime_math",
        "obj": "check_datetime_string",
        "line": 800,
        "column": 19,
        "endLine": 800,
        "endColumn": 66,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.datetime_math",
        "obj": "check_datetime_string",
        "line": 800,
        "column": 19,
        "endLine": 800,
        "endColumn": 20,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.datetime_math",
        "obj": "check_datetime_string",
        "line": 806,
        "column": 15,
        "endLine": 806,
        "endColumn": 24,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "grass.temporal.datetime_math",
        "obj": "check_datetime_string",
        "line": 811,
        "column": 7,
        "endLine": 811,
        "endColumn": 30,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "bad-chained-comparison",
        "message": "Suspicious 2-part chained comparison using semantically incompatible operators ('>' and 'in')",
        "message-id": "W3601"
    },
    {
        "type": "error",
        "module": "grass.temporal.datetime_math",
        "obj": "check_datetime_string",
        "line": 812,
        "column": 15,
        "endLine": 812,
        "endColumn": 62,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.datetime_math",
        "obj": "check_datetime_string",
        "line": 812,
        "column": 15,
        "endLine": 812,
        "endColumn": 16,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.datetime_math",
        "obj": "check_datetime_string",
        "line": 816,
        "column": 15,
        "endLine": 816,
        "endColumn": 48,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.datetime_math",
        "obj": "check_datetime_string",
        "line": 816,
        "column": 15,
        "endLine": 816,
        "endColumn": 16,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.datetime_math",
        "obj": "check_datetime_string",
        "line": 835,
        "column": 4,
        "endLine": 836,
        "endColumn": 65,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "error",
        "module": "grass.temporal.datetime_math",
        "obj": "check_datetime_string",
        "line": 836,
        "column": 15,
        "endLine": 836,
        "endColumn": 65,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.datetime_math",
        "obj": "check_datetime_string",
        "line": 836,
        "column": 15,
        "endLine": 836,
        "endColumn": 16,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.datetime_math",
        "obj": "check_datetime_string",
        "line": 836,
        "column": 17,
        "endLine": 836,
        "endColumn": 50,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.datetime_math",
        "obj": "check_datetime_string",
        "line": 736,
        "column": 0,
        "endLine": 736,
        "endColumn": 25,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (13/12)",
        "message-id": "R0912"
    },
    {
        "type": "warning",
        "module": "grass.temporal.datetime_math",
        "obj": "check_datetime_string",
        "line": 799,
        "column": 12,
        "endLine": 799,
        "endColumn": 17,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'value'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.datetime_math",
        "obj": "datetime_to_grass_datetime_string",
        "line": 917,
        "column": 8,
        "endLine": 917,
        "endColumn": 85,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "broad-exception-raised",
        "message": "Raising too general exception: Exception",
        "message-id": "W0719"
    },
    {
        "type": "convention",
        "module": "grass.temporal.datetime_math",
        "obj": "datetime_to_grass_datetime_string",
        "line": 927,
        "column": 17,
        "endLine": 927,
        "endColumn": 52,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.datetime_math",
        "obj": "datetime_to_grass_datetime_string",
        "line": 937,
        "column": 17,
        "endLine": 937,
        "endColumn": 46,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.datetime_math",
        "obj": "create_suffix_from_datetime",
        "line": 976,
        "column": 4,
        "endLine": 976,
        "endColumn": 23,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "global-variable-not-assigned",
        "message": "Using global for 'suffix_units' but no assignment is done",
        "message-id": "W0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.datetime_math",
        "obj": "create_time_suffix",
        "line": 991,
        "column": 15,
        "endLine": 991,
        "endColumn": 26,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.datetime_math",
        "obj": "create_numeric_suffix",
        "line": 1010,
        "column": 23,
        "endLine": 1010,
        "endColumn": 30,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.datetime_math",
        "obj": "",
        "line": 14,
        "column": 0,
        "endLine": 14,
        "endColumn": 11,
        "path": "python/grass/temporal/datetime_math.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"copy\" should be placed before local import \"core.get_tgis_message_interface\"",
        "message-id": "C0411"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 19,
        "path": "python/grass/temporal/extract.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (11/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 19,
        "path": "python/grass/temporal/extract.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (39/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 30,
        "column": 4,
        "endLine": 30,
        "endColumn": 9,
        "path": "python/grass/temporal/extract.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'input'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 32,
        "column": 4,
        "endLine": 32,
        "endColumn": 8,
        "path": "python/grass/temporal/extract.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 291,
        "column": 16,
        "endLine": 291,
        "endColumn": 19,
        "path": "python/grass/temporal/extract.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 73,
        "column": 19,
        "endLine": 73,
        "endColumn": 77,
        "path": "python/grass/temporal/extract.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 73,
        "column": 19,
        "endLine": 73,
        "endColumn": 20,
        "path": "python/grass/temporal/extract.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 112,
        "column": 31,
        "endLine": 112,
        "endColumn": 42,
        "path": "python/grass/temporal/extract.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 117,
        "column": 31,
        "endLine": 117,
        "endColumn": 42,
        "path": "python/grass/temporal/extract.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 127,
        "column": 27,
        "endLine": 127,
        "endColumn": 36,
        "path": "python/grass/temporal/extract.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 144,
        "column": 28,
        "endLine": 147,
        "endColumn": 29,
        "path": "python/grass/temporal/extract.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 144,
        "column": 28,
        "endLine": 144,
        "endColumn": 29,
        "path": "python/grass/temporal/extract.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 154,
        "column": 33,
        "endLine": 154,
        "endColumn": 73,
        "path": "python/grass/temporal/extract.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 154,
        "column": 33,
        "endLine": 154,
        "endColumn": 34,
        "path": "python/grass/temporal/extract.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 157,
        "column": 33,
        "endLine": 157,
        "endColumn": 74,
        "path": "python/grass/temporal/extract.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 157,
        "column": 33,
        "endLine": 157,
        "endColumn": 34,
        "path": "python/grass/temporal/extract.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 161,
        "column": 24,
        "endLine": 161,
        "endColumn": 69,
        "path": "python/grass/temporal/extract.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 161,
        "column": 24,
        "endLine": 161,
        "endColumn": 25,
        "path": "python/grass/temporal/extract.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 203,
        "column": 35,
        "endLine": 203,
        "endColumn": 68,
        "path": "python/grass/temporal/extract.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 203,
        "column": 35,
        "endLine": 203,
        "endColumn": 36,
        "path": "python/grass/temporal/extract.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 249,
        "column": 23,
        "endLine": 249,
        "endColumn": 61,
        "path": "python/grass/temporal/extract.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'type in ('raster', 'raster3d')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 89,
        "column": 4,
        "endLine": 308,
        "endColumn": 17,
        "path": "python/grass/temporal/extract.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (7/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 89,
        "column": 4,
        "endLine": 308,
        "endColumn": 17,
        "path": "python/grass/temporal/extract.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (7/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 89,
        "column": 4,
        "endLine": 308,
        "endColumn": 17,
        "path": "python/grass/temporal/extract.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "convention",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 293,
        "column": 29,
        "endLine": 293,
        "endColumn": 33,
        "path": "python/grass/temporal/extract.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 295,
        "column": 29,
        "endLine": 295,
        "endColumn": 34,
        "path": "python/grass/temporal/extract.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 19,
        "path": "python/grass/temporal/extract.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (43/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 19,
        "path": "python/grass/temporal/extract.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (126/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "grass.temporal.extract",
        "obj": "extract_dataset",
        "line": 213,
        "column": 8,
        "endLine": 213,
        "endColumn": 21,
        "path": "python/grass/temporal/extract.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'temporal_type'",
        "message-id": "W0612"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.extract",
        "obj": "run_mapcalc2d",
        "line": 323,
        "column": 8,
        "endLine": 323,
        "endColumn": 15,
        "path": "python/grass/temporal/extract.py",
        "symbol": "consider-using-sys-exit",
        "message": "Consider using 'sys.exit' instead",
        "message-id": "R1722"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.extract",
        "obj": "run_mapcalc3d",
        "line": 333,
        "column": 8,
        "endLine": 333,
        "endColumn": 15,
        "path": "python/grass/temporal/extract.py",
        "symbol": "consider-using-sys-exit",
        "message": "Consider using 'sys.exit' instead",
        "message-id": "R1722"
    },
    {
        "type": "warning",
        "module": "grass.temporal.extract",
        "obj": "run_vector_extraction",
        "line": 336,
        "column": 26,
        "endLine": 336,
        "endColumn": 31,
        "path": "python/grass/temporal/extract.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'input'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.extract",
        "obj": "run_vector_extraction",
        "line": 336,
        "column": 48,
        "endLine": 336,
        "endColumn": 52,
        "path": "python/grass/temporal/extract.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.extract",
        "obj": "run_vector_extraction",
        "line": 350,
        "column": 8,
        "endLine": 350,
        "endColumn": 15,
        "path": "python/grass/temporal/extract.py",
        "symbol": "consider-using-sys-exit",
        "message": "Consider using 'sys.exit' instead",
        "message-id": "R1722"
    },
    {
        "type": "convention",
        "module": "grass.temporal.extract",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 35,
        "path": "python/grass/temporal/extract.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"multiprocessing.Process\" should be placed before local imports \"core.get_tgis_message_interface\", \"abstract_map_dataset.AbstractMapDataset\", \"open_stds.open_old_stds\", \"datetime_math.create_suffix_from_datetime\", \"datetime_math.create_time_suffix\", \"datetime_math.create_numeric_suffix\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.extract",
        "obj": "",
        "line": 23,
        "column": 0,
        "endLine": 23,
        "endColumn": 30,
        "path": "python/grass/temporal/extract.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.script\" should be placed before local imports \"core.get_tgis_message_interface\", \"abstract_map_dataset.AbstractMapDataset\", \"open_stds.open_old_stds\", \"datetime_math.create_suffix_from_datetime\", \"datetime_math.create_time_suffix\", \"datetime_math.create_numeric_suffix\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.extract",
        "obj": "",
        "line": 24,
        "column": 0,
        "endLine": 24,
        "endColumn": 46,
        "path": "python/grass/temporal/extract.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.exceptions.CalledModuleError\" should be placed before local imports \"core.get_tgis_message_interface\", \"abstract_map_dataset.AbstractMapDataset\", \"open_stds.open_old_stds\", \"datetime_math.create_suffix_from_datetime\", \"datetime_math.create_time_suffix\", \"datetime_math.create_numeric_suffix\"",
        "message-id": "C0411"
    },
    {
        "type": "warning",
        "module": "grass.temporal.factory",
        "obj": "dataset_factory",
        "line": 35,
        "column": 20,
        "endLine": 35,
        "endColumn": 24,
        "path": "python/grass/temporal/factory.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.factory",
        "obj": "dataset_factory",
        "line": 35,
        "column": 26,
        "endLine": 35,
        "endColumn": 28,
        "path": "python/grass/temporal/factory.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'id'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.factory",
        "obj": "dataset_factory",
        "line": 48,
        "column": 9,
        "endLine": 48,
        "endColumn": 43,
        "path": "python/grass/temporal/factory.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'type in ('rast', 'raster')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.factory",
        "obj": "dataset_factory",
        "line": 50,
        "column": 9,
        "endLine": 50,
        "endColumn": 70,
        "path": "python/grass/temporal/factory.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'type in ('raster_3d', 'rast3d', 'raster3d')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.factory",
        "obj": "dataset_factory",
        "line": 52,
        "column": 9,
        "endLine": 52,
        "endColumn": 43,
        "path": "python/grass/temporal/factory.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'type in ('vect', 'vector')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "error",
        "module": "grass.temporal.factory",
        "obj": "dataset_factory",
        "line": 56,
        "column": 19,
        "endLine": 56,
        "endColumn": 48,
        "path": "python/grass/temporal/factory.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.factory",
        "obj": "dataset_factory",
        "line": 56,
        "column": 19,
        "endLine": 56,
        "endColumn": 20,
        "path": "python/grass/temporal/factory.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.gui_support",
        "obj": "tlist_grouped",
        "line": 20,
        "column": 18,
        "endLine": 20,
        "endColumn": 22,
        "path": "python/grass/temporal/gui_support.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.gui_support",
        "obj": "tlist_grouped",
        "line": 46,
        "column": 8,
        "endLine": 46,
        "endColumn": 12,
        "path": "python/grass/temporal/gui_support.py",
        "symbol": "redefined-argument-from-local",
        "message": "Redefining argument with the local name 'type'",
        "message-id": "R1704"
    },
    {
        "type": "error",
        "module": "grass.temporal.gui_support",
        "obj": "tlist_grouped",
        "line": 57,
        "column": 32,
        "endLine": 57,
        "endColumn": 57,
        "path": "python/grass/temporal/gui_support.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.gui_support",
        "obj": "tlist_grouped",
        "line": 57,
        "column": 32,
        "endLine": 57,
        "endColumn": 33,
        "path": "python/grass/temporal/gui_support.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.gui_support",
        "obj": "tlist_grouped",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 17,
        "path": "python/grass/temporal/gui_support.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (14/12)",
        "message-id": "R0912"
    },
    {
        "type": "warning",
        "module": "grass.temporal.gui_support",
        "obj": "tlist",
        "line": 85,
        "column": 10,
        "endLine": 85,
        "endColumn": 14,
        "path": "python/grass/temporal/gui_support.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.gui_support",
        "obj": "tlist",
        "line": 92,
        "column": 4,
        "endLine": 92,
        "endColumn": 6,
        "path": "python/grass/temporal/gui_support.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'id'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.gui_support",
        "obj": "tlist",
        "line": 100,
        "column": 8,
        "endLine": 100,
        "endColumn": 12,
        "path": "python/grass/temporal/gui_support.py",
        "symbol": "redefined-argument-from-local",
        "message": "Redefining argument with the local name 'type'",
        "message-id": "R1704"
    },
    {
        "type": "convention",
        "module": "grass.temporal.gui_support",
        "obj": "tlist",
        "line": 102,
        "column": 22,
        "endLine": 102,
        "endColumn": 36,
        "path": "python/grass/temporal/gui_support.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.gui_support",
        "obj": "tlist",
        "line": 111,
        "column": 19,
        "endLine": 111,
        "endColumn": 41,
        "path": "python/grass/temporal/gui_support.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.gui_support",
        "obj": "",
        "line": 15,
        "column": 0,
        "endLine": 15,
        "endColumn": 30,
        "path": "python/grass/temporal/gui_support.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.script\" should be placed before local imports \"core.get_available_temporal_mapsets\", \"factory.dataset_factory\"",
        "message-id": "C0411"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.list_stds",
        "obj": "get_dataset_list",
        "line": 36,
        "column": 0,
        "endLine": 36,
        "endColumn": 20,
        "path": "python/grass/temporal/list_stds.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.temporal.list_stds",
        "obj": "get_dataset_list",
        "line": 37,
        "column": 4,
        "endLine": 37,
        "endColumn": 8,
        "path": "python/grass/temporal/list_stds.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.list_stds",
        "obj": "get_dataset_list",
        "line": 98,
        "column": 4,
        "endLine": 98,
        "endColumn": 6,
        "path": "python/grass/temporal/list_stds.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'id'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.list_stds",
        "obj": "get_dataset_list",
        "line": 107,
        "column": 18,
        "endLine": 107,
        "endColumn": 32,
        "path": "python/grass/temporal/list_stds.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.list_stds",
        "obj": "get_dataset_list",
        "line": 120,
        "column": 19,
        "endLine": 120,
        "endColumn": 39,
        "path": "python/grass/temporal/list_stds.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.list_stds",
        "obj": "get_dataset_list",
        "line": 122,
        "column": 19,
        "endLine": 122,
        "endColumn": 41,
        "path": "python/grass/temporal/list_stds.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.list_stds",
        "obj": "_get_get_registered_maps_as_objects_delta_gran",
        "line": 301,
        "column": 0,
        "endLine": 301,
        "endColumn": 50,
        "path": "python/grass/temporal/list_stds.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "error",
        "module": "grass.temporal.list_stds",
        "obj": "_get_get_registered_maps_as_objects_delta_gran",
        "line": 314,
        "column": 25,
        "endLine": 314,
        "endColumn": 44,
        "path": "python/grass/temporal/list_stds.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.list_stds",
        "obj": "_get_get_registered_maps_as_objects_delta_gran",
        "line": 314,
        "column": 25,
        "endLine": 314,
        "endColumn": 26,
        "path": "python/grass/temporal/list_stds.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.list_stds",
        "obj": "_get_get_registered_maps_as_objects_delta_gran",
        "line": 325,
        "column": 27,
        "endLine": 325,
        "endColumn": 79,
        "path": "python/grass/temporal/list_stds.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.list_stds",
        "obj": "_get_get_registered_maps_as_objects_delta_gran",
        "line": 325,
        "column": 27,
        "endLine": 325,
        "endColumn": 28,
        "path": "python/grass/temporal/list_stds.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.list_stds",
        "obj": "_get_get_registered_maps_as_objects_delta_gran",
        "line": 301,
        "column": 0,
        "endLine": 301,
        "endColumn": 50,
        "path": "python/grass/temporal/list_stds.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (13/12)",
        "message-id": "R0912"
    },
    {
        "type": "warning",
        "module": "grass.temporal.list_stds",
        "obj": "_get_get_registered_maps_as_objects_delta_gran",
        "line": 312,
        "column": 24,
        "endLine": 312,
        "endColumn": 30,
        "path": "python/grass/temporal/list_stds.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'unused'",
        "message-id": "W0612"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.list_stds",
        "obj": "_get_list_of_maps_delta_gran",
        "line": 342,
        "column": 0,
        "endLine": 342,
        "endColumn": 32,
        "path": "python/grass/temporal/list_stds.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.list_stds",
        "obj": "_get_list_of_maps_delta_gran",
        "line": 342,
        "column": 0,
        "endLine": 342,
        "endColumn": 32,
        "path": "python/grass/temporal/list_stds.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.list_stds",
        "obj": "_get_list_of_maps_stds",
        "line": 374,
        "column": 0,
        "endLine": 374,
        "endColumn": 26,
        "path": "python/grass/temporal/list_stds.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "error",
        "module": "grass.temporal.list_stds",
        "obj": "_get_list_of_maps_stds",
        "line": 457,
        "column": 16,
        "endLine": 460,
        "endColumn": 17,
        "path": "python/grass/temporal/list_stds.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.list_stds",
        "obj": "_get_list_of_maps_stds",
        "line": 457,
        "column": 16,
        "endLine": 457,
        "endColumn": 17,
        "path": "python/grass/temporal/list_stds.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.list_stds",
        "obj": "_get_list_of_maps_stds",
        "line": 464,
        "column": 24,
        "endLine": 467,
        "endColumn": 25,
        "path": "python/grass/temporal/list_stds.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.list_stds",
        "obj": "_get_list_of_maps_stds",
        "line": 464,
        "column": 24,
        "endLine": 464,
        "endColumn": 25,
        "path": "python/grass/temporal/list_stds.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.list_stds",
        "obj": "_get_list_of_maps_stds",
        "line": 469,
        "column": 29,
        "endLine": 469,
        "endColumn": 50,
        "path": "python/grass/temporal/list_stds.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.list_stds",
        "obj": "_get_list_of_maps_stds",
        "line": 469,
        "column": 29,
        "endLine": 469,
        "endColumn": 30,
        "path": "python/grass/temporal/list_stds.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.list_stds",
        "obj": "list_maps_of_stds",
        "line": 480,
        "column": 0,
        "endLine": 480,
        "endColumn": 21,
        "path": "python/grass/temporal/list_stds.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (12/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 28,
        "column": 0,
        "endLine": 28,
        "endColumn": 25,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 28,
        "column": 0,
        "endLine": 28,
        "endColumn": 25,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (60/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 31,
        "column": 4,
        "endLine": 31,
        "endColumn": 8,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 123,
        "column": 8,
        "endLine": 123,
        "endColumn": 13,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'input'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 144,
        "column": 12,
        "endLine": 144,
        "endColumn": 16,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'list'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 211,
        "column": 16,
        "endLine": 211,
        "endColumn": 19,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 131,
        "column": 21,
        "endLine": 131,
        "endColumn": 62,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 131,
        "column": 21,
        "endLine": 131,
        "endColumn": 22,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 133,
        "column": 21,
        "endLine": 133,
        "endColumn": 55,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 133,
        "column": 21,
        "endLine": 133,
        "endColumn": 22,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 151,
        "column": 29,
        "endLine": 151,
        "endColumn": 70,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 151,
        "column": 29,
        "endLine": 151,
        "endColumn": 30,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 179,
        "column": 24,
        "endLine": 184,
        "endColumn": 25,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 179,
        "column": 24,
        "endLine": 179,
        "endColumn": 25,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 204,
        "column": 20,
        "endLine": 204,
        "endColumn": 65,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 204,
        "column": 20,
        "endLine": 204,
        "endColumn": 21,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 224,
        "column": 21,
        "endLine": 224,
        "endColumn": 57,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 224,
        "column": 21,
        "endLine": 224,
        "endColumn": 22,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 240,
        "column": 23,
        "endLine": 240,
        "endColumn": 40,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 250,
        "column": 12,
        "endLine": 255,
        "endColumn": 65,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-enumerate",
        "message": "Consider using enumerate instead of iterating with range and len",
        "message-id": "C0200"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 275,
        "column": 24,
        "endLine": 278,
        "endColumn": 25,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 275,
        "column": 24,
        "endLine": 275,
        "endColumn": 25,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 298,
        "column": 19,
        "endLine": 298,
        "endColumn": 26,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 302,
        "column": 25,
        "endLine": 302,
        "endColumn": 60,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 302,
        "column": 25,
        "endLine": 302,
        "endColumn": 26,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 321,
        "column": 31,
        "endLine": 321,
        "endColumn": 67,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 321,
        "column": 31,
        "endLine": 321,
        "endColumn": 32,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 327,
        "column": 21,
        "endLine": 327,
        "endColumn": 75,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 327,
        "column": 21,
        "endLine": 327,
        "endColumn": 22,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 381,
        "column": 16,
        "endLine": 381,
        "endColumn": 63,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 381,
        "column": 16,
        "endLine": 381,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 389,
        "column": 29,
        "endLine": 389,
        "endColumn": 33,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 391,
        "column": 29,
        "endLine": 391,
        "endColumn": 34,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 28,
        "column": 0,
        "endLine": 28,
        "endColumn": 25,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (43/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 28,
        "column": 0,
        "endLine": 28,
        "endColumn": 25,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (149/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.mapcalc",
        "obj": "dataset_mapcalculator",
        "line": 28,
        "column": 0,
        "endLine": 28,
        "endColumn": 25,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.mapcalc",
        "obj": "_run_mapcalc2d",
        "line": 415,
        "column": 8,
        "endLine": 415,
        "endColumn": 15,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-sys-exit",
        "message": "Consider using 'sys.exit' instead",
        "message-id": "R1722"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.mapcalc",
        "obj": "_run_mapcalc3d",
        "line": 428,
        "column": 8,
        "endLine": 428,
        "endColumn": 15,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-sys-exit",
        "message": "Consider using 'sys.exit' instead",
        "message-id": "R1722"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 510,
        "column": 16,
        "endLine": 513,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 510,
        "column": 16,
        "endLine": 510,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 511,
        "column": 20,
        "endLine": 512,
        "endColumn": 27,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 512,
        "column": 31,
        "endLine": 512,
        "endColumn": 40,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 520,
        "column": 16,
        "endLine": 523,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 520,
        "column": 16,
        "endLine": 520,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 521,
        "column": 20,
        "endLine": 522,
        "endColumn": 27,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 522,
        "column": 31,
        "endLine": 522,
        "endColumn": 40,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 530,
        "column": 16,
        "endLine": 533,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 530,
        "column": 16,
        "endLine": 530,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 531,
        "column": 20,
        "endLine": 532,
        "endColumn": 27,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 532,
        "column": 31,
        "endLine": 532,
        "endColumn": 40,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 540,
        "column": 16,
        "endLine": 543,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 540,
        "column": 16,
        "endLine": 540,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 541,
        "column": 20,
        "endLine": 542,
        "endColumn": 27,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 542,
        "column": 31,
        "endLine": 542,
        "endColumn": 40,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 550,
        "column": 16,
        "endLine": 553,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 550,
        "column": 16,
        "endLine": 550,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 551,
        "column": 20,
        "endLine": 552,
        "endColumn": 27,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 552,
        "column": 31,
        "endLine": 552,
        "endColumn": 40,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 560,
        "column": 16,
        "endLine": 563,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 560,
        "column": 16,
        "endLine": 560,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 561,
        "column": 20,
        "endLine": 562,
        "endColumn": 27,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 562,
        "column": 31,
        "endLine": 562,
        "endColumn": 40,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 570,
        "column": 16,
        "endLine": 573,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 570,
        "column": 16,
        "endLine": 570,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 571,
        "column": 20,
        "endLine": 572,
        "endColumn": 27,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 572,
        "column": 31,
        "endLine": 572,
        "endColumn": 40,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 580,
        "column": 16,
        "endLine": 583,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 580,
        "column": 16,
        "endLine": 580,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 581,
        "column": 20,
        "endLine": 582,
        "endColumn": 27,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 582,
        "column": 31,
        "endLine": 582,
        "endColumn": 40,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 590,
        "column": 16,
        "endLine": 593,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 590,
        "column": 16,
        "endLine": 590,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 591,
        "column": 20,
        "endLine": 592,
        "endColumn": 27,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 592,
        "column": 31,
        "endLine": 592,
        "endColumn": 40,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 489,
        "column": 0,
        "endLine": 489,
        "endColumn": 26,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (18/12)",
        "message-id": "R0912"
    },
    {
        "type": "warning",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_operators",
        "line": 504,
        "column": 11,
        "endLine": 504,
        "endColumn": 14,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'end'",
        "message-id": "W0612"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 630,
        "column": 16,
        "endLine": 633,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 630,
        "column": 16,
        "endLine": 630,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 631,
        "column": 20,
        "endLine": 632,
        "endColumn": 27,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 632,
        "column": 31,
        "endLine": 632,
        "endColumn": 38,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 643,
        "column": 16,
        "endLine": 646,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 643,
        "column": 16,
        "endLine": 643,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 644,
        "column": 20,
        "endLine": 645,
        "endColumn": 27,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 645,
        "column": 31,
        "endLine": 645,
        "endColumn": 38,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 656,
        "column": 16,
        "endLine": 659,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 656,
        "column": 16,
        "endLine": 656,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 657,
        "column": 20,
        "endLine": 658,
        "endColumn": 27,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 658,
        "column": 31,
        "endLine": 658,
        "endColumn": 38,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 669,
        "column": 16,
        "endLine": 672,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 669,
        "column": 16,
        "endLine": 669,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 670,
        "column": 20,
        "endLine": 671,
        "endColumn": 27,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 671,
        "column": 31,
        "endLine": 671,
        "endColumn": 38,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 682,
        "column": 16,
        "endLine": 685,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 682,
        "column": 16,
        "endLine": 682,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 683,
        "column": 20,
        "endLine": 684,
        "endColumn": 27,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 684,
        "column": 31,
        "endLine": 684,
        "endColumn": 38,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 695,
        "column": 16,
        "endLine": 698,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 695,
        "column": 16,
        "endLine": 695,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 696,
        "column": 20,
        "endLine": 697,
        "endColumn": 27,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 697,
        "column": 31,
        "endLine": 697,
        "endColumn": 38,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 708,
        "column": 16,
        "endLine": 711,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 708,
        "column": 16,
        "endLine": 708,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 709,
        "column": 20,
        "endLine": 710,
        "endColumn": 27,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 710,
        "column": 31,
        "endLine": 710,
        "endColumn": 38,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 721,
        "column": 16,
        "endLine": 724,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 721,
        "column": 16,
        "endLine": 721,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 722,
        "column": 20,
        "endLine": 723,
        "endColumn": 27,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 723,
        "column": 31,
        "endLine": 723,
        "endColumn": 38,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 734,
        "column": 16,
        "endLine": 737,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 734,
        "column": 16,
        "endLine": 734,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 735,
        "column": 20,
        "endLine": 736,
        "endColumn": 27,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 736,
        "column": 31,
        "endLine": 736,
        "endColumn": 38,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 606,
        "column": 0,
        "endLine": 606,
        "endColumn": 24,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (36/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 606,
        "column": 0,
        "endLine": 606,
        "endColumn": 24,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (68/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_operators",
        "line": 624,
        "column": 4,
        "endLine": 624,
        "endColumn": 9,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'start'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_td_operator",
        "line": 753,
        "column": 47,
        "endLine": 753,
        "endColumn": 52,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'first'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_td_operator",
        "line": 768,
        "column": 24,
        "endLine": 768,
        "endColumn": 28,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'unit'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_time_operator",
        "line": 787,
        "column": 20,
        "endLine": 787,
        "endColumn": 23,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'end'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_start_time_operator",
        "line": 791,
        "column": 25,
        "endLine": 791,
        "endColumn": 29,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'unit'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_time_operator",
        "line": 815,
        "column": 12,
        "endLine": 815,
        "endColumn": 17,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'start'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.mapcalc",
        "obj": "_parse_end_time_operator",
        "line": 819,
        "column": 25,
        "endLine": 819,
        "endColumn": 29,
        "path": "python/grass/temporal/mapcalc.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'unit'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.temporal.metadata",
        "obj": "",
        "line": 1056,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.metadata",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1932/1000)",
        "message-id": "C0302"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "RasterMetadataBase.__init__",
        "line": 88,
        "column": 4,
        "endLine": 88,
        "endColumn": 16,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (11/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.temporal.metadata",
        "obj": "RasterMetadataBase.__init__",
        "line": 98,
        "column": 8,
        "endLine": 98,
        "endColumn": 11,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'min'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.metadata",
        "obj": "RasterMetadataBase.__init__",
        "line": 99,
        "column": 8,
        "endLine": 99,
        "endColumn": 11,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'max'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.metadata",
        "obj": "RasterMetadataBase.set_min",
        "line": 157,
        "column": 22,
        "endLine": 157,
        "endColumn": 25,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'min'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.metadata",
        "obj": "RasterMetadataBase.set_max",
        "line": 164,
        "column": 22,
        "endLine": 164,
        "endColumn": 25,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'max'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "RasterMetadataBase.get_id",
        "line": 175,
        "column": 8,
        "endLine": 178,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "RasterMetadataBase.get_datatype",
        "line": 183,
        "column": 8,
        "endLine": 186,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "RasterMetadataBase.get_cols",
        "line": 191,
        "column": 8,
        "endLine": 194,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "RasterMetadataBase.get_rows",
        "line": 199,
        "column": 8,
        "endLine": 202,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "RasterMetadataBase.get_number_of_cells",
        "line": 207,
        "column": 8,
        "endLine": 210,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "RasterMetadataBase.get_nsres",
        "line": 215,
        "column": 8,
        "endLine": 218,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "RasterMetadataBase.get_ewres",
        "line": 223,
        "column": 8,
        "endLine": 226,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "RasterMetadataBase.get_min",
        "line": 231,
        "column": 8,
        "endLine": 234,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "RasterMetadataBase.get_max",
        "line": 239,
        "column": 8,
        "endLine": 242,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "RasterMetadata.__init__",
        "line": 346,
        "column": 4,
        "endLine": 346,
        "endColumn": 16,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (11/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.temporal.metadata",
        "obj": "RasterMetadata.__init__",
        "line": 355,
        "column": 8,
        "endLine": 355,
        "endColumn": 11,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'min'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.metadata",
        "obj": "RasterMetadata.__init__",
        "line": 356,
        "column": 8,
        "endLine": 356,
        "endColumn": 11,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'max'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.metadata",
        "obj": "RasterMetadata.__init__",
        "line": 357,
        "column": 8,
        "endLine": 357,
        "endColumn": 22,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'semantic_label'",
        "message-id": "W0613"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "RasterMetadata.get_semantic_label",
        "line": 380,
        "column": 8,
        "endLine": 383,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "Raster3DMetadata.__init__",
        "line": 478,
        "column": 4,
        "endLine": 478,
        "endColumn": 16,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (12/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.temporal.metadata",
        "obj": "Raster3DMetadata.__init__",
        "line": 489,
        "column": 8,
        "endLine": 489,
        "endColumn": 11,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'min'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.metadata",
        "obj": "Raster3DMetadata.__init__",
        "line": 490,
        "column": 8,
        "endLine": 490,
        "endColumn": 11,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'max'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "Raster3DMetadata.get_depths",
        "line": 526,
        "column": 8,
        "endLine": 529,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "Raster3DMetadata.get_tbres",
        "line": 534,
        "column": 8,
        "endLine": 537,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "VectorMetadata.__init__",
        "line": 647,
        "column": 4,
        "endLine": 647,
        "endColumn": 16,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (15/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "VectorMetadata.get_id",
        "line": 742,
        "column": 8,
        "endLine": 745,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "VectorMetadata.get_3d_info",
        "line": 750,
        "column": 8,
        "endLine": 753,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "VectorMetadata.get_number_of_points",
        "line": 758,
        "column": 8,
        "endLine": 761,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "VectorMetadata.get_number_of_lines",
        "line": 766,
        "column": 8,
        "endLine": 769,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "VectorMetadata.get_number_of_boundaries",
        "line": 774,
        "column": 8,
        "endLine": 777,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "VectorMetadata.get_number_of_centroids",
        "line": 782,
        "column": 8,
        "endLine": 785,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "VectorMetadata.get_number_of_faces",
        "line": 790,
        "column": 8,
        "endLine": 793,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "VectorMetadata.get_number_of_kernels",
        "line": 798,
        "column": 8,
        "endLine": 801,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "VectorMetadata.get_number_of_primitives",
        "line": 806,
        "column": 8,
        "endLine": 809,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "VectorMetadata.get_number_of_nodes",
        "line": 814,
        "column": 8,
        "endLine": 817,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "VectorMetadata.get_number_of_areas",
        "line": 822,
        "column": 8,
        "endLine": 825,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "VectorMetadata.get_number_of_islands",
        "line": 830,
        "column": 8,
        "endLine": 833,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "VectorMetadata.get_number_of_holes",
        "line": 838,
        "column": 8,
        "endLine": 841,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "VectorMetadata.get_number_of_volumes",
        "line": 846,
        "column": 8,
        "endLine": 849,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "VectorMetadata",
        "line": 559,
        "column": 0,
        "endLine": 559,
        "endColumn": 20,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "too-many-public-methods",
        "message": "Too many public methods (28/20)",
        "message-id": "R0904"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STDSMetadataBase.__init__",
        "line": 958,
        "column": 4,
        "endLine": 958,
        "endColumn": 16,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STDSMetadataBase.get_id",
        "line": 991,
        "column": 8,
        "endLine": 994,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STDSMetadataBase.get_title",
        "line": 999,
        "column": 8,
        "endLine": 1002,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STDSMetadataBase.get_description",
        "line": 1007,
        "column": 8,
        "endLine": 1010,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STDSMetadataBase.get_command",
        "line": 1015,
        "column": 8,
        "endLine": 1018,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STDSMetadataBase.get_number_of_maps",
        "line": 1025,
        "column": 8,
        "endLine": 1028,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "error",
        "module": "grass.temporal.metadata",
        "obj": "STDSMetadataBase.print_info",
        "line": 1038,
        "column": 8,
        "endLine": 1038,
        "endColumn": 29,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-member",
        "message": "Instance of 'STDSMetadataBase' has no '_print_info_body' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.metadata",
        "obj": "STDSMetadataBase.print_shell_info",
        "line": 1044,
        "column": 8,
        "endLine": 1044,
        "endColumn": 29,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-member",
        "message": "Instance of 'STDSMetadataBase' has no '_print_info_body' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STDSRasterMetadataBase.__init__",
        "line": 1176,
        "column": 4,
        "endLine": 1176,
        "endColumn": 16,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STDSRasterMetadataBase.get_aggregation_type",
        "line": 1205,
        "column": 8,
        "endLine": 1208,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STDSRasterMetadataBase.get_max_min",
        "line": 1215,
        "column": 8,
        "endLine": 1218,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STDSRasterMetadataBase.get_min_min",
        "line": 1225,
        "column": 8,
        "endLine": 1228,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STDSRasterMetadataBase.get_max_max",
        "line": 1235,
        "column": 8,
        "endLine": 1238,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STDSRasterMetadataBase.get_min_max",
        "line": 1245,
        "column": 8,
        "endLine": 1248,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STDSRasterMetadataBase.get_nsres_min",
        "line": 1255,
        "column": 8,
        "endLine": 1258,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STDSRasterMetadataBase.get_nsres_max",
        "line": 1265,
        "column": 8,
        "endLine": 1268,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STDSRasterMetadataBase.get_ewres_min",
        "line": 1275,
        "column": 8,
        "endLine": 1278,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STDSRasterMetadataBase.get_ewres_max",
        "line": 1285,
        "column": 8,
        "endLine": 1288,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STRDSMetadata.get_raster_register",
        "line": 1420,
        "column": 8,
        "endLine": 1423,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STRDSMetadata.get_number_of_semantic_labels",
        "line": 1429,
        "column": 8,
        "endLine": 1432,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.temporal.metadata",
        "obj": "STRDSMetadata.get_semantic_labels",
        "line": 1444,
        "column": 14,
        "endLine": 1444,
        "endColumn": 67,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.metadata",
        "obj": "STRDSMetadata.get_semantic_labels",
        "line": 1449,
        "column": 15,
        "endLine": 1449,
        "endColumn": 39,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.metadata",
        "obj": "STRDSMetadata.get_semantic_labels",
        "line": 1465,
        "column": 34,
        "endLine": 1465,
        "endColumn": 39,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STRDSMetadata.get_semantic_labels",
        "line": 1468,
        "column": 12,
        "endLine": 1471,
        "endColumn": 27,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STR3DSMetadata.get_raster3d_register",
        "line": 1598,
        "column": 8,
        "endLine": 1601,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STR3DSMetadata.get_tbres_min",
        "line": 1608,
        "column": 8,
        "endLine": 1611,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STR3DSMetadata.get_tbres_max",
        "line": 1618,
        "column": 8,
        "endLine": 1621,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STVDSMetadata.get_vector_register",
        "line": 1752,
        "column": 8,
        "endLine": 1755,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STVDSMetadata.get_number_of_points",
        "line": 1762,
        "column": 8,
        "endLine": 1765,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STVDSMetadata.get_number_of_lines",
        "line": 1772,
        "column": 8,
        "endLine": 1775,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STVDSMetadata.get_number_of_boundaries",
        "line": 1782,
        "column": 8,
        "endLine": 1785,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STVDSMetadata.get_number_of_centroids",
        "line": 1792,
        "column": 8,
        "endLine": 1795,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STVDSMetadata.get_number_of_faces",
        "line": 1802,
        "column": 8,
        "endLine": 1805,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STVDSMetadata.get_number_of_kernels",
        "line": 1812,
        "column": 8,
        "endLine": 1815,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STVDSMetadata.get_number_of_primitives",
        "line": 1822,
        "column": 8,
        "endLine": 1825,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STVDSMetadata.get_number_of_nodes",
        "line": 1832,
        "column": 8,
        "endLine": 1835,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STVDSMetadata.get_number_of_areas",
        "line": 1842,
        "column": 8,
        "endLine": 1845,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STVDSMetadata.get_number_of_islands",
        "line": 1852,
        "column": 8,
        "endLine": 1855,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STVDSMetadata.get_number_of_holes",
        "line": 1862,
        "column": 8,
        "endLine": 1865,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.metadata",
        "obj": "STVDSMetadata.get_number_of_volumes",
        "line": 1872,
        "column": 8,
        "endLine": 1875,
        "endColumn": 23,
        "path": "python/grass/temporal/metadata.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "warning",
        "module": "grass.temporal.open_stds",
        "obj": "open_old_stds",
        "line": 28,
        "column": 24,
        "endLine": 28,
        "endColumn": 28,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.open_stds",
        "obj": "open_old_stds",
        "line": 59,
        "column": 4,
        "endLine": 59,
        "endColumn": 6,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'id'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.open_stds",
        "obj": "open_old_stds",
        "line": 61,
        "column": 7,
        "endLine": 61,
        "endColumn": 60,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'type in ('strds', 'rast', 'raster')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.open_stds",
        "obj": "open_old_stds",
        "line": 66,
        "column": 8,
        "endLine": 69,
        "endColumn": 30,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'type in ('str3ds', 'raster3d', 'rast3d', 'raster_3d')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.open_stds",
        "obj": "open_old_stds",
        "line": 72,
        "column": 9,
        "endLine": 72,
        "endColumn": 62,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'type in ('stvds', 'vect', 'vector')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "error",
        "module": "grass.temporal.open_stds",
        "obj": "open_old_stds",
        "line": 75,
        "column": 19,
        "endLine": 75,
        "endColumn": 40,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.open_stds",
        "obj": "open_old_stds",
        "line": 75,
        "column": 19,
        "endLine": 75,
        "endColumn": 20,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.open_stds",
        "obj": "open_old_stds",
        "line": 82,
        "column": 12,
        "endLine": 82,
        "endColumn": 61,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.open_stds",
        "obj": "open_old_stds",
        "line": 82,
        "column": 12,
        "endLine": 82,
        "endColumn": 13,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.open_stds",
        "obj": "check_new_stds",
        "line": 96,
        "column": 25,
        "endLine": 96,
        "endColumn": 29,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.open_stds",
        "obj": "check_new_stds",
        "line": 117,
        "column": 8,
        "endLine": 117,
        "endColumn": 10,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'id'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.open_stds",
        "obj": "",
        "line": 122,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.open_stds",
        "obj": "check_new_stds",
        "line": 122,
        "column": 16,
        "endLine": 122,
        "endColumn": 85,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.open_stds",
        "obj": "check_new_stds",
        "line": 122,
        "column": 16,
        "endLine": 122,
        "endColumn": 17,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.open_stds",
        "obj": "check_new_stds",
        "line": 126,
        "column": 7,
        "endLine": 126,
        "endColumn": 60,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'type in ('strds', 'rast', 'raster')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "warning",
        "module": "grass.temporal.open_stds",
        "obj": "",
        "line": 130,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.open_stds",
        "obj": "check_new_stds",
        "line": 130,
        "column": 16,
        "endLine": 130,
        "endColumn": 77,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.open_stds",
        "obj": "check_new_stds",
        "line": 130,
        "column": 16,
        "endLine": 130,
        "endColumn": 17,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.open_stds",
        "obj": "check_new_stds",
        "line": 136,
        "column": 8,
        "endLine": 139,
        "endColumn": 30,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'type in ('str3ds', 'raster3d', 'rast3d ', 'raster_3d')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.open_stds",
        "obj": "check_new_stds",
        "line": 142,
        "column": 9,
        "endLine": 142,
        "endColumn": 62,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'type in ('stvds', 'vect', 'vector')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "error",
        "module": "grass.temporal.open_stds",
        "obj": "check_new_stds",
        "line": 145,
        "column": 19,
        "endLine": 145,
        "endColumn": 40,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.open_stds",
        "obj": "check_new_stds",
        "line": 145,
        "column": 19,
        "endLine": 145,
        "endColumn": 20,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.open_stds",
        "obj": "check_new_stds",
        "line": 152,
        "column": 12,
        "endLine": 155,
        "endColumn": 13,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.open_stds",
        "obj": "check_new_stds",
        "line": 152,
        "column": 12,
        "endLine": 152,
        "endColumn": 13,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.open_stds",
        "obj": "check_new_stds",
        "line": 119,
        "column": 8,
        "endLine": 119,
        "endColumn": 9,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'n'",
        "message-id": "W0612"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.open_stds",
        "obj": "open_new_stds",
        "line": 167,
        "column": 0,
        "endLine": 167,
        "endColumn": 17,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.temporal.open_stds",
        "obj": "open_new_stds",
        "line": 168,
        "column": 10,
        "endLine": 168,
        "endColumn": 14,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.open_stds",
        "obj": "open_new_stds",
        "line": 198,
        "column": 8,
        "endLine": 198,
        "endColumn": 10,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'id'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.temporal.open_stds",
        "obj": "open_new_stds",
        "line": 192,
        "column": 12,
        "endLine": 195,
        "endColumn": 13,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.open_stds",
        "obj": "open_new_stds",
        "line": 192,
        "column": 12,
        "endLine": 192,
        "endColumn": 13,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.open_stds",
        "obj": "open_new_stds",
        "line": 203,
        "column": 8,
        "endLine": 203,
        "endColumn": 49,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.open_stds",
        "obj": "open_new_stds",
        "line": 203,
        "column": 8,
        "endLine": 203,
        "endColumn": 9,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.open_stds",
        "obj": "check_new_map_dataset",
        "line": 225,
        "column": 44,
        "endLine": 225,
        "endColumn": 48,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.temporal.open_stds",
        "obj": "check_new_map_dataset",
        "line": 252,
        "column": 16,
        "endLine": 255,
        "endColumn": 17,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.open_stds",
        "obj": "check_new_map_dataset",
        "line": 252,
        "column": 16,
        "endLine": 252,
        "endColumn": 17,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.open_stds",
        "obj": "open_new_map_dataset",
        "line": 268,
        "column": 0,
        "endLine": 268,
        "endColumn": 24,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.temporal.open_stds",
        "obj": "open_new_map_dataset",
        "line": 269,
        "column": 22,
        "endLine": 269,
        "endColumn": 26,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.open_stds",
        "obj": "open_new_map_dataset",
        "line": 284,
        "column": 4,
        "endLine": 284,
        "endColumn": 10,
        "path": "python/grass/temporal/open_stds.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'mapset'",
        "message-id": "W0612"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 35,
        "column": 0,
        "endLine": 35,
        "endColumn": 39,
        "path": "python/grass/temporal/register.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (12/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 35,
        "column": 0,
        "endLine": 35,
        "endColumn": 39,
        "path": "python/grass/temporal/register.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (44/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 36,
        "column": 4,
        "endLine": 36,
        "endColumn": 8,
        "path": "python/grass/temporal/register.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 100,
        "column": 19,
        "endLine": 100,
        "endColumn": 60,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 100,
        "column": 19,
        "endLine": 100,
        "endColumn": 20,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 103,
        "column": 19,
        "endLine": 103,
        "endColumn": 64,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 103,
        "column": 19,
        "endLine": 103,
        "endColumn": 20,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 106,
        "column": 19,
        "endLine": 106,
        "endColumn": 72,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 106,
        "column": 19,
        "endLine": 106,
        "endColumn": 20,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 109,
        "column": 19,
        "endLine": 109,
        "endColumn": 70,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 109,
        "column": 19,
        "endLine": 109,
        "endColumn": 20,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 112,
        "column": 19,
        "endLine": 112,
        "endColumn": 67,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 112,
        "column": 19,
        "endLine": 112,
        "endColumn": 20,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 115,
        "column": 19,
        "endLine": 115,
        "endColumn": 62,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 115,
        "column": 19,
        "endLine": 115,
        "endColumn": 20,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 118,
        "column": 19,
        "endLine": 118,
        "endColumn": 51,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 118,
        "column": 19,
        "endLine": 118,
        "endColumn": 20,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 138,
        "column": 16,
        "endLine": 142,
        "endColumn": 17,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 138,
        "column": 16,
        "endLine": 138,
        "endColumn": 17,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 162,
        "column": 17,
        "endLine": 162,
        "endColumn": 32,
        "path": "python/grass/temporal/register.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 217,
        "column": 16,
        "endLine": 220,
        "endColumn": 17,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 217,
        "column": 16,
        "endLine": 217,
        "endColumn": 17,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 226,
        "column": 16,
        "endLine": 229,
        "endColumn": 17,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 226,
        "column": 16,
        "endLine": 226,
        "endColumn": 17,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 253,
        "column": 16,
        "endLine": 253,
        "endColumn": 78,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 253,
        "column": 16,
        "endLine": 253,
        "endColumn": 17,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 279,
        "column": 24,
        "endLine": 283,
        "endColumn": 25,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 279,
        "column": 24,
        "endLine": 279,
        "endColumn": 25,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 291,
        "column": 24,
        "endLine": 295,
        "endColumn": 25,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 291,
        "column": 24,
        "endLine": 291,
        "endColumn": 25,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 301,
        "column": 31,
        "endLine": 301,
        "endColumn": 74,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 301,
        "column": 31,
        "endLine": 301,
        "endColumn": 32,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 303,
        "column": 31,
        "endLine": 303,
        "endColumn": 84,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 303,
        "column": 31,
        "endLine": 303,
        "endColumn": 32,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 315,
        "column": 24,
        "endLine": 320,
        "endColumn": 25,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 315,
        "column": 24,
        "endLine": 315,
        "endColumn": 25,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 328,
        "column": 24,
        "endLine": 332,
        "endColumn": 25,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 328,
        "column": 24,
        "endLine": 328,
        "endColumn": 25,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 355,
        "column": 28,
        "endLine": 359,
        "endColumn": 29,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 355,
        "column": 28,
        "endLine": 355,
        "endColumn": 29,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 367,
        "column": 28,
        "endLine": 370,
        "endColumn": 29,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 367,
        "column": 28,
        "endLine": 367,
        "endColumn": 29,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 458,
        "column": 12,
        "endLine": 458,
        "endColumn": 14,
        "path": "python/grass/temporal/register.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'ds' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 35,
        "column": 0,
        "endLine": 35,
        "endColumn": 39,
        "path": "python/grass/temporal/register.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (80/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 35,
        "column": 0,
        "endLine": 35,
        "endColumn": 39,
        "path": "python/grass/temporal/register.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (195/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.register",
        "obj": "register_maps_in_space_time_dataset",
        "line": 162,
        "column": 17,
        "endLine": 162,
        "endColumn": 32,
        "path": "python/grass/temporal/register.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.register",
        "obj": "assign_valid_time_to_map",
        "line": 470,
        "column": 0,
        "endLine": 470,
        "endColumn": 28,
        "path": "python/grass/temporal/register.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "assign_valid_time_to_map",
        "line": 500,
        "column": 16,
        "endLine": 500,
        "endColumn": 73,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "assign_valid_time_to_map",
        "line": 500,
        "column": 16,
        "endLine": 500,
        "endColumn": 17,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "assign_valid_time_to_map",
        "line": 508,
        "column": 20,
        "endLine": 508,
        "endColumn": 77,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "assign_valid_time_to_map",
        "line": 508,
        "column": 20,
        "endLine": 508,
        "endColumn": 21,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "assign_valid_time_to_map",
        "line": 517,
        "column": 27,
        "endLine": 517,
        "endColumn": 71,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "assign_valid_time_to_map",
        "line": 517,
        "column": 27,
        "endLine": 517,
        "endColumn": 28,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "assign_valid_time_to_map",
        "line": 521,
        "column": 31,
        "endLine": 521,
        "endColumn": 75,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "assign_valid_time_to_map",
        "line": 521,
        "column": 31,
        "endLine": 521,
        "endColumn": 32,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "assign_valid_time_to_map",
        "line": 526,
        "column": 16,
        "endLine": 529,
        "endColumn": 17,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "assign_valid_time_to_map",
        "line": 526,
        "column": 16,
        "endLine": 526,
        "endColumn": 17,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "assign_valid_time_to_map",
        "line": 539,
        "column": 16,
        "endLine": 542,
        "endColumn": 17,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "assign_valid_time_to_map",
        "line": 539,
        "column": 16,
        "endLine": 539,
        "endColumn": 17,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "assign_valid_time_to_map",
        "line": 565,
        "column": 16,
        "endLine": 568,
        "endColumn": 17,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "assign_valid_time_to_map",
        "line": 565,
        "column": 16,
        "endLine": 565,
        "endColumn": 17,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "assign_valid_time_to_map",
        "line": 579,
        "column": 16,
        "endLine": 582,
        "endColumn": 17,
        "path": "python/grass/temporal/register.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.register",
        "obj": "assign_valid_time_to_map",
        "line": 579,
        "column": 16,
        "endLine": 579,
        "endColumn": 17,
        "path": "python/grass/temporal/register.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.register",
        "obj": "assign_valid_time_to_map",
        "line": 470,
        "column": 0,
        "endLine": 470,
        "endColumn": 28,
        "path": "python/grass/temporal/register.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (16/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.register",
        "obj": "register_map_object_list",
        "line": 596,
        "column": 0,
        "endLine": 596,
        "endColumn": 28,
        "path": "python/grass/temporal/register.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.register",
        "obj": "register_map_object_list",
        "line": 596,
        "column": 0,
        "endLine": 596,
        "endColumn": 28,
        "path": "python/grass/temporal/register.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (21/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.temporal.register",
        "obj": "register_map_object_list",
        "line": 597,
        "column": 4,
        "endLine": 597,
        "endColumn": 8,
        "path": "python/grass/temporal/register.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.register",
        "obj": "register_map_object_list",
        "line": 636,
        "column": 12,
        "endLine": 636,
        "endColumn": 14,
        "path": "python/grass/temporal/register.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'id'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.register",
        "obj": "register_map_object_list",
        "line": 610,
        "column": 4,
        "endLine": 610,
        "endColumn": 41,
        "path": "python/grass/temporal/register.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (grass.pygrass.modules)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "grass.temporal.register",
        "obj": "register_map_object_list",
        "line": 611,
        "column": 4,
        "endLine": 611,
        "endColumn": 15,
        "path": "python/grass/temporal/register.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (copy)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "grass.temporal.register",
        "obj": "register_map_object_list",
        "line": 616,
        "column": 9,
        "endLine": 616,
        "endColumn": 28,
        "path": "python/grass/temporal/register.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.register",
        "obj": "register_map_object_list",
        "line": 596,
        "column": 0,
        "endLine": 596,
        "endColumn": 28,
        "path": "python/grass/temporal/register.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (17/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 32,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 32,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (34/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 84,
        "column": 8,
        "endLine": 84,
        "endColumn": 13,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'input'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 86,
        "column": 12,
        "endLine": 86,
        "endColumn": 14,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'id'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 156,
        "column": 12,
        "endLine": 156,
        "endColumn": 15,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 105,
        "column": 23,
        "endLine": 105,
        "endColumn": 71,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 105,
        "column": 23,
        "endLine": 105,
        "endColumn": 24,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 109,
        "column": 19,
        "endLine": 109,
        "endColumn": 67,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 109,
        "column": 19,
        "endLine": 109,
        "endColumn": 20,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 130,
        "column": 22,
        "endLine": 130,
        "endColumn": 28,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 132,
        "column": 26,
        "endLine": 132,
        "endColumn": 32,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 133,
        "column": 22,
        "endLine": 133,
        "endColumn": 28,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 134,
        "column": 22,
        "endLine": 134,
        "endColumn": 28,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 135,
        "column": 22,
        "endLine": 135,
        "endColumn": 28,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 136,
        "column": 22,
        "endLine": 136,
        "endColumn": 26,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 136,
        "column": 30,
        "endLine": 136,
        "endColumn": 51,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 151,
        "column": 36,
        "endLine": 151,
        "endColumn": 41,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 171,
        "column": 22,
        "endLine": 171,
        "endColumn": 28,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 173,
        "column": 26,
        "endLine": 173,
        "endColumn": 32,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 174,
        "column": 22,
        "endLine": 174,
        "endColumn": 28,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 175,
        "column": 22,
        "endLine": 175,
        "endColumn": 28,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 176,
        "column": 22,
        "endLine": 176,
        "endColumn": 28,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 177,
        "column": 22,
        "endLine": 177,
        "endColumn": 26,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 32,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (28/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.sampling",
        "obj": "sample_stds_by_stds_topology",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 32,
        "path": "python/grass/temporal/sampling.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (78/50)",
        "message-id": "R0915"
    },
    {
        "type": "convention",
        "module": "grass.temporal.space_time_datasets",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1582/1000)",
        "message-id": "C0302"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "RasterDataset.read_timestamp_from_grass",
        "line": 290,
        "column": 16,
        "endLine": 293,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "RasterDataset.read_timestamp_from_grass",
        "line": 290,
        "column": 16,
        "endLine": 290,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.space_time_datasets",
        "obj": "RasterDataset.read_timestamp_from_grass",
        "line": 291,
        "column": 20,
        "endLine": 292,
        "endColumn": 41,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "RasterDataset.write_timestamp_to_grass",
        "line": 318,
        "column": 16,
        "endLine": 321,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "RasterDataset.write_timestamp_to_grass",
        "line": 318,
        "column": 16,
        "endLine": 318,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.space_time_datasets",
        "obj": "RasterDataset.write_timestamp_to_grass",
        "line": 319,
        "column": 20,
        "endLine": 320,
        "endColumn": 41,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "RasterDataset.write_timestamp_to_grass",
        "line": 327,
        "column": 16,
        "endLine": 330,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "RasterDataset.write_timestamp_to_grass",
        "line": 327,
        "column": 16,
        "endLine": 327,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.space_time_datasets",
        "obj": "RasterDataset.write_timestamp_to_grass",
        "line": 328,
        "column": 20,
        "endLine": 329,
        "endColumn": 26,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "RasterDataset.write_timestamp_to_grass",
        "line": 335,
        "column": 28,
        "endLine": 335,
        "endColumn": 47,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "RasterDataset.write_timestamp_to_grass",
        "line": 335,
        "column": 28,
        "endLine": 335,
        "endColumn": 29,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "RasterDataset.remove_timestamp_from_grass",
        "line": 352,
        "column": 16,
        "endLine": 352,
        "endColumn": 87,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "RasterDataset.remove_timestamp_from_grass",
        "line": 352,
        "column": 16,
        "endLine": 352,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.space_time_datasets",
        "obj": "RasterDataset.remove_timestamp_from_grass",
        "line": 352,
        "column": 18,
        "endLine": 352,
        "endColumn": 66,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "RasterDataset.write_semantic_label_to_grass",
        "line": 392,
        "column": 16,
        "endLine": 395,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "RasterDataset.write_semantic_label_to_grass",
        "line": 392,
        "column": 16,
        "endLine": 392,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.space_time_datasets",
        "obj": "RasterDataset.write_semantic_label_to_grass",
        "line": 393,
        "column": 20,
        "endLine": 393,
        "endColumn": 72,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.space_time_datasets",
        "obj": "Raster3DDataset.spatial_overlapping",
        "line": 641,
        "column": 8,
        "endLine": 644,
        "endColumn": 77,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.space_time_datasets",
        "obj": "Raster3DDataset.spatial_relation",
        "line": 648,
        "column": 8,
        "endLine": 651,
        "endColumn": 82,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.space_time_datasets",
        "obj": "Raster3DDataset.spatial_intersection",
        "line": 660,
        "column": 8,
        "endLine": 663,
        "endColumn": 75,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.space_time_datasets",
        "obj": "Raster3DDataset.spatial_union",
        "line": 672,
        "column": 8,
        "endLine": 675,
        "endColumn": 71,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.space_time_datasets",
        "obj": "Raster3DDataset.spatial_disjoint_union",
        "line": 683,
        "column": 8,
        "endLine": 686,
        "endColumn": 80,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "Raster3DDataset.read_timestamp_from_grass",
        "line": 743,
        "column": 16,
        "endLine": 746,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "Raster3DDataset.read_timestamp_from_grass",
        "line": 743,
        "column": 16,
        "endLine": 743,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.space_time_datasets",
        "obj": "Raster3DDataset.read_timestamp_from_grass",
        "line": 744,
        "column": 20,
        "endLine": 745,
        "endColumn": 44,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "Raster3DDataset.write_timestamp_to_grass",
        "line": 771,
        "column": 16,
        "endLine": 774,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "Raster3DDataset.write_timestamp_to_grass",
        "line": 771,
        "column": 16,
        "endLine": 771,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.space_time_datasets",
        "obj": "Raster3DDataset.write_timestamp_to_grass",
        "line": 772,
        "column": 20,
        "endLine": 773,
        "endColumn": 44,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "Raster3DDataset.write_timestamp_to_grass",
        "line": 780,
        "column": 16,
        "endLine": 783,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "Raster3DDataset.write_timestamp_to_grass",
        "line": 780,
        "column": 16,
        "endLine": 780,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.space_time_datasets",
        "obj": "Raster3DDataset.write_timestamp_to_grass",
        "line": 781,
        "column": 20,
        "endLine": 782,
        "endColumn": 30,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "Raster3DDataset.write_timestamp_to_grass",
        "line": 788,
        "column": 28,
        "endLine": 788,
        "endColumn": 47,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "Raster3DDataset.write_timestamp_to_grass",
        "line": 788,
        "column": 28,
        "endLine": 788,
        "endColumn": 29,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "Raster3DDataset.remove_timestamp_from_grass",
        "line": 804,
        "column": 16,
        "endLine": 807,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "Raster3DDataset.remove_timestamp_from_grass",
        "line": 804,
        "column": 16,
        "endLine": 804,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.space_time_datasets",
        "obj": "Raster3DDataset.remove_timestamp_from_grass",
        "line": 805,
        "column": 20,
        "endLine": 806,
        "endColumn": 26,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "VectorDataset.read_timestamp_from_grass",
        "line": 1093,
        "column": 16,
        "endLine": 1096,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "VectorDataset.read_timestamp_from_grass",
        "line": 1093,
        "column": 16,
        "endLine": 1093,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.space_time_datasets",
        "obj": "VectorDataset.read_timestamp_from_grass",
        "line": 1094,
        "column": 20,
        "endLine": 1095,
        "endColumn": 41,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "VectorDataset.write_timestamp_to_grass",
        "line": 1122,
        "column": 16,
        "endLine": 1125,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "VectorDataset.write_timestamp_to_grass",
        "line": 1122,
        "column": 16,
        "endLine": 1122,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.space_time_datasets",
        "obj": "VectorDataset.write_timestamp_to_grass",
        "line": 1123,
        "column": 20,
        "endLine": 1124,
        "endColumn": 41,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "VectorDataset.write_timestamp_to_grass",
        "line": 1131,
        "column": 16,
        "endLine": 1134,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "VectorDataset.write_timestamp_to_grass",
        "line": 1131,
        "column": 16,
        "endLine": 1131,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.space_time_datasets",
        "obj": "VectorDataset.write_timestamp_to_grass",
        "line": 1132,
        "column": 20,
        "endLine": 1133,
        "endColumn": 30,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "VectorDataset.remove_timestamp_from_grass",
        "line": 1150,
        "column": 16,
        "endLine": 1153,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.space_time_datasets",
        "obj": "VectorDataset.remove_timestamp_from_grass",
        "line": 1150,
        "column": 16,
        "endLine": 1150,
        "endColumn": 17,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.space_time_datasets",
        "obj": "VectorDataset.remove_timestamp_from_grass",
        "line": 1151,
        "column": 20,
        "endLine": 1152,
        "endColumn": 30,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.space_time_datasets",
        "obj": "SpaceTimeRasterDataset.get_new_map_instance",
        "line": 1285,
        "column": 4,
        "endLine": 1285,
        "endColumn": 28,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "signature-differs",
        "message": "Signature differs from overridden 'get_new_map_instance' method",
        "message-id": "W0222"
    },
    {
        "type": "warning",
        "module": "grass.temporal.space_time_datasets",
        "obj": "SpaceTimeRaster3DDataset.get_new_map_instance",
        "line": 1394,
        "column": 4,
        "endLine": 1394,
        "endColumn": 28,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "signature-differs",
        "message": "Signature differs from overridden 'get_new_map_instance' method",
        "message-id": "W0222"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.space_time_datasets",
        "obj": "SpaceTimeRaster3DDataset.spatial_overlapping",
        "line": 1410,
        "column": 8,
        "endLine": 1413,
        "endColumn": 77,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.space_time_datasets",
        "obj": "SpaceTimeRaster3DDataset.spatial_relation",
        "line": 1418,
        "column": 8,
        "endLine": 1421,
        "endColumn": 82,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.space_time_datasets",
        "obj": "SpaceTimeRaster3DDataset.spatial_intersection",
        "line": 1430,
        "column": 8,
        "endLine": 1433,
        "endColumn": 75,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.space_time_datasets",
        "obj": "SpaceTimeRaster3DDataset.spatial_union",
        "line": 1442,
        "column": 8,
        "endLine": 1445,
        "endColumn": 71,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.space_time_datasets",
        "obj": "SpaceTimeRaster3DDataset.spatial_disjoint_union",
        "line": 1453,
        "column": 8,
        "endLine": 1456,
        "endColumn": 80,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "warning",
        "module": "grass.temporal.space_time_datasets",
        "obj": "SpaceTimeVectorDataset.get_new_map_instance",
        "line": 1520,
        "column": 4,
        "endLine": 1520,
        "endColumn": 28,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "signature-differs",
        "message": "Signature differs from overridden 'get_new_map_instance' method",
        "message-id": "W0222"
    },
    {
        "type": "convention",
        "module": "grass.temporal.space_time_datasets",
        "obj": "",
        "line": 57,
        "column": 0,
        "endLine": 57,
        "endColumn": 35,
        "path": "python/grass/temporal/space_time_datasets.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.script.array\" should be placed before local imports \"abstract_map_dataset.AbstractMapDataset\", \"abstract_space_time_dataset.AbstractSpaceTimeDataset\", \"base.Raster3DBase\", \"metadata.Raster3DMetadata\", \"spatial_extent.RasterSpatialExtent\", \"temporal_extent.RasterAbsoluteTime\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "",
        "line": 2005,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (2136/1000)",
        "message-id": "C0302"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.__init__",
        "line": 129,
        "column": 4,
        "endLine": 129,
        "endColumn": 16,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (10/5)",
        "message-id": "R0913"
    },
    {
        "type": "error",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlapping_2d",
        "line": 172,
        "column": 16,
        "endLine": 175,
        "endColumn": 17,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlapping_2d",
        "line": 172,
        "column": 16,
        "endLine": 172,
        "endColumn": 17,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlapping_2d",
        "line": 179,
        "column": 8,
        "endLine": 179,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"N\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlapping_2d",
        "line": 180,
        "column": 8,
        "endLine": 180,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"S\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlapping_2d",
        "line": 181,
        "column": 8,
        "endLine": 181,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"E\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlapping_2d",
        "line": 182,
        "column": 8,
        "endLine": 182,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"W\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlapping_2d",
        "line": 187,
        "column": 16,
        "endLine": 187,
        "endColumn": 17,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"E\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlapping_2d",
        "line": 188,
        "column": 16,
        "endLine": 188,
        "endColumn": 17,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"W\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlapping_2d",
        "line": 191,
        "column": 16,
        "endLine": 191,
        "endColumn": 17,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"E\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlapping_2d",
        "line": 192,
        "column": 16,
        "endLine": 192,
        "endColumn": 17,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"W\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlapping",
        "line": 240,
        "column": 8,
        "endLine": 240,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"T\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlapping",
        "line": 241,
        "column": 8,
        "endLine": 241,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect_2d",
        "line": 262,
        "column": 8,
        "endLine": 262,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eN\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect_2d",
        "line": 263,
        "column": 8,
        "endLine": 263,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eS\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect_2d",
        "line": 264,
        "column": 8,
        "endLine": 264,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect_2d",
        "line": 265,
        "column": 8,
        "endLine": 265,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect_2d",
        "line": 267,
        "column": 8,
        "endLine": 267,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"N\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect_2d",
        "line": 268,
        "column": 8,
        "endLine": 268,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"S\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect_2d",
        "line": 269,
        "column": 8,
        "endLine": 269,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"E\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect_2d",
        "line": 270,
        "column": 8,
        "endLine": 270,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"W\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect_2d",
        "line": 275,
        "column": 16,
        "endLine": 275,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect_2d",
        "line": 276,
        "column": 16,
        "endLine": 276,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect_2d",
        "line": 279,
        "column": 16,
        "endLine": 279,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect_2d",
        "line": 280,
        "column": 16,
        "endLine": 280,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect_2d",
        "line": 283,
        "column": 8,
        "endLine": 283,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nN\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect_2d",
        "line": 284,
        "column": 8,
        "endLine": 284,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nS\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect_2d",
        "line": 285,
        "column": 8,
        "endLine": 285,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect_2d",
        "line": 286,
        "column": 8,
        "endLine": 286,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect_2d",
        "line": 289,
        "column": 12,
        "endLine": 289,
        "endColumn": 14,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect_2d",
        "line": 291,
        "column": 12,
        "endLine": 291,
        "endColumn": 14,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect_2d",
        "line": 293,
        "column": 12,
        "endLine": 293,
        "endColumn": 14,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nN\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect_2d",
        "line": 295,
        "column": 12,
        "endLine": 295,
        "endColumn": 14,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nS\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect",
        "line": 390,
        "column": 8,
        "endLine": 390,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eT\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect",
        "line": 391,
        "column": 8,
        "endLine": 391,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect",
        "line": 393,
        "column": 8,
        "endLine": 393,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"T\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect",
        "line": 394,
        "column": 8,
        "endLine": 394,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect",
        "line": 396,
        "column": 8,
        "endLine": 396,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nT\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect",
        "line": 397,
        "column": 8,
        "endLine": 397,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect",
        "line": 400,
        "column": 12,
        "endLine": 400,
        "endColumn": 14,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.intersect",
        "line": 402,
        "column": 12,
        "endLine": 402,
        "endColumn": 14,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nT\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union_2d",
        "line": 427,
        "column": 8,
        "endLine": 427,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eN\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union_2d",
        "line": 428,
        "column": 8,
        "endLine": 428,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eS\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union_2d",
        "line": 429,
        "column": 8,
        "endLine": 429,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union_2d",
        "line": 430,
        "column": 8,
        "endLine": 430,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union_2d",
        "line": 432,
        "column": 8,
        "endLine": 432,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"N\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union_2d",
        "line": 433,
        "column": 8,
        "endLine": 433,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"S\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union_2d",
        "line": 434,
        "column": 8,
        "endLine": 434,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"E\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union_2d",
        "line": 435,
        "column": 8,
        "endLine": 435,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"W\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union_2d",
        "line": 440,
        "column": 16,
        "endLine": 440,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union_2d",
        "line": 441,
        "column": 16,
        "endLine": 441,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union_2d",
        "line": 444,
        "column": 16,
        "endLine": 444,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union_2d",
        "line": 445,
        "column": 16,
        "endLine": 445,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union_2d",
        "line": 448,
        "column": 8,
        "endLine": 448,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nN\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union_2d",
        "line": 449,
        "column": 8,
        "endLine": 449,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nS\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union_2d",
        "line": 450,
        "column": 8,
        "endLine": 450,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union_2d",
        "line": 451,
        "column": 8,
        "endLine": 451,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union_2d",
        "line": 454,
        "column": 12,
        "endLine": 454,
        "endColumn": 14,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union_2d",
        "line": 456,
        "column": 12,
        "endLine": 456,
        "endColumn": 14,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union_2d",
        "line": 458,
        "column": 12,
        "endLine": 458,
        "endColumn": 14,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nN\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union_2d",
        "line": 460,
        "column": 12,
        "endLine": 460,
        "endColumn": 14,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nS\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union",
        "line": 578,
        "column": 8,
        "endLine": 578,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eT\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union",
        "line": 579,
        "column": 8,
        "endLine": 579,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union",
        "line": 581,
        "column": 8,
        "endLine": 581,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"T\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union",
        "line": 582,
        "column": 8,
        "endLine": 582,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union",
        "line": 584,
        "column": 8,
        "endLine": 584,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nT\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union",
        "line": 585,
        "column": 8,
        "endLine": 585,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union",
        "line": 588,
        "column": 12,
        "endLine": 588,
        "endColumn": 14,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_union",
        "line": 590,
        "column": 12,
        "endLine": 590,
        "endColumn": 14,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"nT\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.is_in_2d",
        "line": 614,
        "column": 16,
        "endLine": 617,
        "endColumn": 17,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.is_in_2d",
        "line": 614,
        "column": 16,
        "endLine": 614,
        "endColumn": 17,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.is_in_2d",
        "line": 621,
        "column": 8,
        "endLine": 621,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eN\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.is_in_2d",
        "line": 622,
        "column": 8,
        "endLine": 622,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eS\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.is_in_2d",
        "line": 623,
        "column": 8,
        "endLine": 623,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.is_in_2d",
        "line": 624,
        "column": 8,
        "endLine": 624,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.is_in_2d",
        "line": 626,
        "column": 8,
        "endLine": 626,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"N\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.is_in_2d",
        "line": 627,
        "column": 8,
        "endLine": 627,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"S\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.is_in_2d",
        "line": 628,
        "column": 8,
        "endLine": 628,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"E\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.is_in_2d",
        "line": 629,
        "column": 8,
        "endLine": 629,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"W\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.is_in_2d",
        "line": 634,
        "column": 16,
        "endLine": 634,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.is_in_2d",
        "line": 635,
        "column": 16,
        "endLine": 635,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.is_in_2d",
        "line": 638,
        "column": 16,
        "endLine": 638,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.is_in_2d",
        "line": 639,
        "column": 16,
        "endLine": 639,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.is_in",
        "line": 677,
        "column": 8,
        "endLine": 677,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eT\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.is_in",
        "line": 678,
        "column": 8,
        "endLine": 678,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.is_in",
        "line": 680,
        "column": 8,
        "endLine": 680,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"T\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.is_in",
        "line": 681,
        "column": 8,
        "endLine": 681,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.equivalent_2d",
        "line": 754,
        "column": 16,
        "endLine": 757,
        "endColumn": 17,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.equivalent_2d",
        "line": 754,
        "column": 16,
        "endLine": 754,
        "endColumn": 17,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.equivalent_2d",
        "line": 761,
        "column": 8,
        "endLine": 761,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eN\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.equivalent_2d",
        "line": 762,
        "column": 8,
        "endLine": 762,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eS\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.equivalent_2d",
        "line": 763,
        "column": 8,
        "endLine": 763,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.equivalent_2d",
        "line": 764,
        "column": 8,
        "endLine": 764,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.equivalent_2d",
        "line": 766,
        "column": 8,
        "endLine": 766,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"N\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.equivalent_2d",
        "line": 767,
        "column": 8,
        "endLine": 767,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"S\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.equivalent_2d",
        "line": 768,
        "column": 8,
        "endLine": 768,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"E\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.equivalent_2d",
        "line": 769,
        "column": 8,
        "endLine": 769,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"W\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.equivalent_2d",
        "line": 774,
        "column": 16,
        "endLine": 774,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.equivalent_2d",
        "line": 775,
        "column": 16,
        "endLine": 775,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.equivalent_2d",
        "line": 778,
        "column": 16,
        "endLine": 778,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.equivalent_2d",
        "line": 779,
        "column": 16,
        "endLine": 779,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.equivalent",
        "line": 818,
        "column": 8,
        "endLine": 818,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eT\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.equivalent",
        "line": 819,
        "column": 8,
        "endLine": 819,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.equivalent",
        "line": 821,
        "column": 8,
        "endLine": 821,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"T\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.equivalent",
        "line": 822,
        "column": 8,
        "endLine": 822,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover_2d",
        "line": 865,
        "column": 16,
        "endLine": 868,
        "endColumn": 17,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover_2d",
        "line": 865,
        "column": 16,
        "endLine": 865,
        "endColumn": 17,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover_2d",
        "line": 876,
        "column": 8,
        "endLine": 876,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eN\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover_2d",
        "line": 877,
        "column": 8,
        "endLine": 877,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eS\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover_2d",
        "line": 878,
        "column": 8,
        "endLine": 878,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover_2d",
        "line": 879,
        "column": 8,
        "endLine": 879,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover_2d",
        "line": 881,
        "column": 8,
        "endLine": 881,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"N\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover_2d",
        "line": 882,
        "column": 8,
        "endLine": 882,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"S\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover_2d",
        "line": 883,
        "column": 8,
        "endLine": 883,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"E\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover_2d",
        "line": 884,
        "column": 8,
        "endLine": 884,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"W\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover_2d",
        "line": 889,
        "column": 16,
        "endLine": 889,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover_2d",
        "line": 890,
        "column": 16,
        "endLine": 890,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover_2d",
        "line": 893,
        "column": 16,
        "endLine": 893,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover_2d",
        "line": 894,
        "column": 16,
        "endLine": 894,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover_2d",
        "line": 912,
        "column": 11,
        "endLine": 912,
        "endColumn": 28,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "chained-comparison",
        "message": "Simplify chained comparison between the operands",
        "message-id": "R1716"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover_2d",
        "line": 914,
        "column": 11,
        "endLine": 914,
        "endColumn": 28,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "chained-comparison",
        "message": "Simplify chained comparison between the operands",
        "message-id": "R1716"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover_2d",
        "line": 916,
        "column": 11,
        "endLine": 916,
        "endColumn": 28,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "chained-comparison",
        "message": "Simplify chained comparison between the operands",
        "message-id": "R1716"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover_2d",
        "line": 918,
        "column": 11,
        "endLine": 918,
        "endColumn": 28,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "chained-comparison",
        "message": "Simplify chained comparison between the operands",
        "message-id": "R1716"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover_2d",
        "line": 831,
        "column": 4,
        "endLine": 831,
        "endColumn": 16,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (9/6)",
        "message-id": "R0911"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover_2d",
        "line": 831,
        "column": 4,
        "endLine": 831,
        "endColumn": 16,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (15/12)",
        "message-id": "R0912"
    },
    {
        "type": "error",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 941,
        "column": 16,
        "endLine": 944,
        "endColumn": 17,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 941,
        "column": 16,
        "endLine": 941,
        "endColumn": 17,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 952,
        "column": 8,
        "endLine": 952,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eN\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 953,
        "column": 8,
        "endLine": 953,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eS\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 954,
        "column": 8,
        "endLine": 954,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 955,
        "column": 8,
        "endLine": 955,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 957,
        "column": 8,
        "endLine": 957,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eT\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 958,
        "column": 8,
        "endLine": 958,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 960,
        "column": 8,
        "endLine": 960,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"N\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 961,
        "column": 8,
        "endLine": 961,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"S\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 962,
        "column": 8,
        "endLine": 962,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"E\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 963,
        "column": 8,
        "endLine": 963,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"W\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 965,
        "column": 8,
        "endLine": 965,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"T\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 966,
        "column": 8,
        "endLine": 966,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 971,
        "column": 16,
        "endLine": 971,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 972,
        "column": 16,
        "endLine": 972,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 975,
        "column": 16,
        "endLine": 975,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 976,
        "column": 16,
        "endLine": 976,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 993,
        "column": 11,
        "endLine": 993,
        "endColumn": 78,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-boolean-expressions",
        "message": "Too many boolean expressions in if statement (6/5)",
        "message-id": "R0916"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 998,
        "column": 11,
        "endLine": 998,
        "endColumn": 28,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "chained-comparison",
        "message": "Simplify chained comparison between the operands",
        "message-id": "R1716"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 1000,
        "column": 11,
        "endLine": 1000,
        "endColumn": 28,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "chained-comparison",
        "message": "Simplify chained comparison between the operands",
        "message-id": "R1716"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 1002,
        "column": 11,
        "endLine": 1002,
        "endColumn": 28,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "chained-comparison",
        "message": "Simplify chained comparison between the operands",
        "message-id": "R1716"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 1004,
        "column": 11,
        "endLine": 1004,
        "endColumn": 28,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "chained-comparison",
        "message": "Simplify chained comparison between the operands",
        "message-id": "R1716"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 1006,
        "column": 11,
        "endLine": 1006,
        "endColumn": 28,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "chained-comparison",
        "message": "Simplify chained comparison between the operands",
        "message-id": "R1716"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 1008,
        "column": 11,
        "endLine": 1008,
        "endColumn": 28,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "chained-comparison",
        "message": "Simplify chained comparison between the operands",
        "message-id": "R1716"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 1010,
        "column": 11,
        "endLine": 1010,
        "endColumn": 28,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "chained-comparison",
        "message": "Simplify chained comparison between the operands",
        "message-id": "R1716"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 1012,
        "column": 11,
        "endLine": 1012,
        "endColumn": 28,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "chained-comparison",
        "message": "Simplify chained comparison between the operands",
        "message-id": "R1716"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 926,
        "column": 4,
        "endLine": 926,
        "endColumn": 13,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (11/6)",
        "message-id": "R0911"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.cover",
        "line": 926,
        "column": 4,
        "endLine": 926,
        "endColumn": 13,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (21/12)",
        "message-id": "R0912"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlap_2d",
        "line": 1093,
        "column": 8,
        "endLine": 1093,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"N\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlap_2d",
        "line": 1094,
        "column": 8,
        "endLine": 1094,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"S\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlap_2d",
        "line": 1095,
        "column": 8,
        "endLine": 1095,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"E\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlap_2d",
        "line": 1096,
        "column": 8,
        "endLine": 1096,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"W\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlap_2d",
        "line": 1101,
        "column": 16,
        "endLine": 1101,
        "endColumn": 17,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"E\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlap_2d",
        "line": 1102,
        "column": 16,
        "endLine": 1102,
        "endColumn": 17,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"W\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlap_2d",
        "line": 1105,
        "column": 16,
        "endLine": 1105,
        "endColumn": 17,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"E\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlap_2d",
        "line": 1106,
        "column": 16,
        "endLine": 1106,
        "endColumn": 17,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"W\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlap_2d",
        "line": 1052,
        "column": 4,
        "endLine": 1052,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (10/6)",
        "message-id": "R0911"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlap",
        "line": 1153,
        "column": 8,
        "endLine": 1153,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"N\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlap",
        "line": 1154,
        "column": 8,
        "endLine": 1154,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"S\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlap",
        "line": 1155,
        "column": 8,
        "endLine": 1155,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"E\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlap",
        "line": 1156,
        "column": 8,
        "endLine": 1156,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"W\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlap",
        "line": 1157,
        "column": 8,
        "endLine": 1157,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"T\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlap",
        "line": 1158,
        "column": 8,
        "endLine": 1158,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlap",
        "line": 1163,
        "column": 16,
        "endLine": 1163,
        "endColumn": 17,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"E\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlap",
        "line": 1164,
        "column": 16,
        "endLine": 1164,
        "endColumn": 17,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"W\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlap",
        "line": 1167,
        "column": 16,
        "endLine": 1167,
        "endColumn": 17,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"E\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlap",
        "line": 1168,
        "column": 16,
        "endLine": 1168,
        "endColumn": 17,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"W\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlap",
        "line": 1122,
        "column": 4,
        "endLine": 1122,
        "endColumn": 15,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (12/6)",
        "message-id": "R0911"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.overlap",
        "line": 1122,
        "column": 4,
        "endLine": 1122,
        "endColumn": 15,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (14/12)",
        "message-id": "R0912"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet_2d",
        "line": 1224,
        "column": 8,
        "endLine": 1224,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eN\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet_2d",
        "line": 1225,
        "column": 8,
        "endLine": 1225,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eS\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet_2d",
        "line": 1226,
        "column": 8,
        "endLine": 1226,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet_2d",
        "line": 1227,
        "column": 8,
        "endLine": 1227,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet_2d",
        "line": 1229,
        "column": 8,
        "endLine": 1229,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"N\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet_2d",
        "line": 1230,
        "column": 8,
        "endLine": 1230,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"S\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet_2d",
        "line": 1231,
        "column": 8,
        "endLine": 1231,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"E\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet_2d",
        "line": 1232,
        "column": 8,
        "endLine": 1232,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"W\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet_2d",
        "line": 1237,
        "column": 16,
        "endLine": 1237,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet_2d",
        "line": 1238,
        "column": 16,
        "endLine": 1238,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet_2d",
        "line": 1241,
        "column": 16,
        "endLine": 1241,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet_2d",
        "line": 1242,
        "column": 16,
        "endLine": 1242,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet_2d",
        "line": 1265,
        "column": 11,
        "endLine": 1265,
        "endColumn": 37,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'edge in ('E', 'W')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet_2d",
        "line": 1269,
        "column": 11,
        "endLine": 1269,
        "endColumn": 37,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'edge in ('N', 'S')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet",
        "line": 1275,
        "column": 4,
        "endLine": 1275,
        "endColumn": 12,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet",
        "line": 1282,
        "column": 8,
        "endLine": 1282,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eN\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet",
        "line": 1283,
        "column": 8,
        "endLine": 1283,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eS\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet",
        "line": 1284,
        "column": 8,
        "endLine": 1284,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet",
        "line": 1285,
        "column": 8,
        "endLine": 1285,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet",
        "line": 1287,
        "column": 8,
        "endLine": 1287,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eT\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet",
        "line": 1288,
        "column": 8,
        "endLine": 1288,
        "endColumn": 10,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet",
        "line": 1290,
        "column": 8,
        "endLine": 1290,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"N\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet",
        "line": 1291,
        "column": 8,
        "endLine": 1291,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"S\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet",
        "line": 1292,
        "column": 8,
        "endLine": 1292,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"E\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet",
        "line": 1293,
        "column": 8,
        "endLine": 1293,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"W\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet",
        "line": 1295,
        "column": 8,
        "endLine": 1295,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"T\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet",
        "line": 1296,
        "column": 8,
        "endLine": 1296,
        "endColumn": 9,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet",
        "line": 1301,
        "column": 16,
        "endLine": 1301,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet",
        "line": 1302,
        "column": 16,
        "endLine": 1302,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet",
        "line": 1305,
        "column": 16,
        "endLine": 1305,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet",
        "line": 1306,
        "column": 16,
        "endLine": 1306,
        "endColumn": 18,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "invalid-name",
        "message": "Variable name \"eW\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet",
        "line": 1335,
        "column": 11,
        "endLine": 1335,
        "endColumn": 37,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'edge in ('E', 'W')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet",
        "line": 1341,
        "column": 11,
        "endLine": 1341,
        "endColumn": 37,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'edge in ('N', 'S')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet",
        "line": 1347,
        "column": 11,
        "endLine": 1347,
        "endColumn": 37,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'edge in ('T', 'B')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet",
        "line": 1275,
        "column": 4,
        "endLine": 1275,
        "endColumn": 12,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (8/6)",
        "message-id": "R0911"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.meet",
        "line": 1275,
        "column": 4,
        "endLine": 1275,
        "endColumn": 12,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (19/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint_2d",
        "line": 1355,
        "column": 4,
        "endLine": 1355,
        "endColumn": 19,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (8/6)",
        "message-id": "R0911"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.disjoint",
        "line": 1396,
        "column": 4,
        "endLine": 1396,
        "endColumn": 16,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (8/6)",
        "message-id": "R0911"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.spatial_relation_2d",
        "line": 1427,
        "column": 4,
        "endLine": 1427,
        "endColumn": 27,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (9/6)",
        "message-id": "R0911"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.spatial_relation",
        "line": 1464,
        "column": 4,
        "endLine": 1464,
        "endColumn": 24,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (9/6)",
        "message-id": "R0911"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.set_spatial_extent_from_values",
        "line": 1773,
        "column": 4,
        "endLine": 1773,
        "endColumn": 38,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.set_projection",
        "line": 1809,
        "column": 28,
        "endLine": 1809,
        "endColumn": 57,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'proj not in ('XY', 'LL')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.get_id",
        "line": 1891,
        "column": 8,
        "endLine": 1894,
        "endColumn": 23,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "warning",
        "module": "grass.temporal.spatial_extent",
        "obj": "",
        "line": 1906,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.get_volume",
        "line": 1906,
        "column": 16,
        "endLine": 1906,
        "endColumn": 78,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.get_volume",
        "line": 1906,
        "column": 16,
        "endLine": 1906,
        "endColumn": 17,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.spatial_extent",
        "obj": "",
        "line": 1925,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.get_area",
        "line": 1925,
        "column": 16,
        "endLine": 1925,
        "endColumn": 76,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.get_area",
        "line": 1925,
        "column": 16,
        "endLine": 1925,
        "endColumn": 17,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.get_north",
        "line": 1948,
        "column": 8,
        "endLine": 1951,
        "endColumn": 23,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.get_south",
        "line": 1956,
        "column": 8,
        "endLine": 1959,
        "endColumn": 23,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.get_east",
        "line": 1964,
        "column": 8,
        "endLine": 1967,
        "endColumn": 23,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.get_west",
        "line": 1972,
        "column": 8,
        "endLine": 1975,
        "endColumn": 23,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.get_top",
        "line": 1980,
        "column": 8,
        "endLine": 1983,
        "endColumn": 23,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent.get_bottom",
        "line": 1988,
        "column": 8,
        "endLine": 1991,
        "endColumn": 23,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "SpatialExtent",
        "line": 76,
        "column": 0,
        "endLine": 76,
        "endColumn": 19,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-public-methods",
        "message": "Too many public methods (52/20)",
        "message-id": "R0904"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "RasterSpatialExtent",
        "line": 2027,
        "column": 0,
        "endLine": 2027,
        "endColumn": 25,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "RasterSpatialExtent.__init__",
        "line": 2028,
        "column": 4,
        "endLine": 2028,
        "endColumn": 16,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "Raster3DSpatialExtent",
        "line": 2043,
        "column": 0,
        "endLine": 2043,
        "endColumn": 27,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "Raster3DSpatialExtent.__init__",
        "line": 2044,
        "column": 4,
        "endLine": 2044,
        "endColumn": 16,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "VectorSpatialExtent",
        "line": 2067,
        "column": 0,
        "endLine": 2067,
        "endColumn": 25,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "VectorSpatialExtent.__init__",
        "line": 2068,
        "column": 4,
        "endLine": 2068,
        "endColumn": 16,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "STRDSSpatialExtent",
        "line": 2083,
        "column": 0,
        "endLine": 2083,
        "endColumn": 24,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "STRDSSpatialExtent.__init__",
        "line": 2084,
        "column": 4,
        "endLine": 2084,
        "endColumn": 16,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "STR3DSSpatialExtent",
        "line": 2099,
        "column": 0,
        "endLine": 2099,
        "endColumn": 25,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "STR3DSSpatialExtent.__init__",
        "line": 2100,
        "column": 4,
        "endLine": 2100,
        "endColumn": 16,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_extent",
        "obj": "STVDSSpatialExtent",
        "line": 2115,
        "column": 0,
        "endLine": 2115,
        "endColumn": 24,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_extent",
        "obj": "STVDSSpatialExtent.__init__",
        "line": 2116,
        "column": 4,
        "endLine": 2116,
        "endColumn": 16,
        "path": "python/grass/temporal/spatial_extent.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_topology_dataset_connector",
        "obj": "",
        "line": 323,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatial_topology_dataset_connector.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "grass.temporal.spatial_topology_dataset_connector",
        "obj": "SpatialTopologyDatasetConnector.get_number_of_spatial_relations",
        "line": 121,
        "column": 8,
        "endLine": 122,
        "endColumn": 39,
        "path": "python/grass/temporal/spatial_topology_dataset_connector.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.spatial_topology_dataset_connector",
        "obj": "SpatialTopologyDatasetConnector.get_number_of_spatial_relations",
        "line": 125,
        "column": 8,
        "endLine": 126,
        "endColumn": 36,
        "path": "python/grass/temporal/spatial_topology_dataset_connector.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.spatial_topology_dataset_connector",
        "obj": "SpatialTopologyDatasetConnector.get_number_of_spatial_relations",
        "line": 129,
        "column": 8,
        "endLine": 130,
        "endColumn": 31,
        "path": "python/grass/temporal/spatial_topology_dataset_connector.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.spatial_topology_dataset_connector",
        "obj": "SpatialTopologyDatasetConnector.get_number_of_spatial_relations",
        "line": 133,
        "column": 8,
        "endLine": 134,
        "endColumn": 36,
        "path": "python/grass/temporal/spatial_topology_dataset_connector.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.spatial_topology_dataset_connector",
        "obj": "SpatialTopologyDatasetConnector.get_number_of_spatial_relations",
        "line": 137,
        "column": 8,
        "endLine": 138,
        "endColumn": 33,
        "path": "python/grass/temporal/spatial_topology_dataset_connector.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.spatial_topology_dataset_connector",
        "obj": "SpatialTopologyDatasetConnector.get_number_of_spatial_relations",
        "line": 141,
        "column": 8,
        "endLine": 142,
        "endColumn": 34,
        "path": "python/grass/temporal/spatial_topology_dataset_connector.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.spatial_topology_dataset_connector",
        "obj": "SpatialTopologyDatasetConnector.get_number_of_spatial_relations",
        "line": 145,
        "column": 8,
        "endLine": 146,
        "endColumn": 36,
        "path": "python/grass/temporal/spatial_topology_dataset_connector.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.spatial_topology_dataset_connector",
        "obj": "SpatialTopologyDatasetConnector.append_equivalent",
        "line": 162,
        "column": 32,
        "endLine": 162,
        "endColumn": 35,
        "path": "python/grass/temporal/spatial_topology_dataset_connector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.spatial_topology_dataset_connector",
        "obj": "SpatialTopologyDatasetConnector.append_overlap",
        "line": 181,
        "column": 29,
        "endLine": 181,
        "endColumn": 32,
        "path": "python/grass/temporal/spatial_topology_dataset_connector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.spatial_topology_dataset_connector",
        "obj": "SpatialTopologyDatasetConnector.append_in",
        "line": 200,
        "column": 24,
        "endLine": 200,
        "endColumn": 27,
        "path": "python/grass/temporal/spatial_topology_dataset_connector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.spatial_topology_dataset_connector",
        "obj": "SpatialTopologyDatasetConnector.append_contain",
        "line": 219,
        "column": 29,
        "endLine": 219,
        "endColumn": 32,
        "path": "python/grass/temporal/spatial_topology_dataset_connector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.spatial_topology_dataset_connector",
        "obj": "SpatialTopologyDatasetConnector.append_meet",
        "line": 238,
        "column": 26,
        "endLine": 238,
        "endColumn": 29,
        "path": "python/grass/temporal/spatial_topology_dataset_connector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.spatial_topology_dataset_connector",
        "obj": "SpatialTopologyDatasetConnector.append_cover",
        "line": 257,
        "column": 27,
        "endLine": 257,
        "endColumn": 30,
        "path": "python/grass/temporal/spatial_topology_dataset_connector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.spatial_topology_dataset_connector",
        "obj": "SpatialTopologyDatasetConnector.append_covered",
        "line": 276,
        "column": 29,
        "endLine": 276,
        "endColumn": 32,
        "path": "python/grass/temporal/spatial_topology_dataset_connector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatial_topology_dataset_connector",
        "obj": "SpatialTopologyDatasetConnector._generate_map_list_string",
        "line": 305,
        "column": 26,
        "endLine": 305,
        "endColumn": 31,
        "path": "python/grass/temporal/spatial_topology_dataset_connector.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.spatial_topology_dataset_connector",
        "obj": "SpatialTopologyDatasetConnector.set_spatial_topology_build_true",
        "line": 152,
        "column": 8,
        "endLine": 152,
        "endColumn": 34,
        "path": "python/grass/temporal/spatial_topology_dataset_connector.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute '_has_spatial_topology' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.spatial_topology_dataset_connector",
        "obj": "SpatialTopologyDatasetConnector.set_spatial_topology_build_false",
        "line": 156,
        "column": 8,
        "endLine": 156,
        "endColumn": 34,
        "path": "python/grass/temporal/spatial_topology_dataset_connector.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute '_has_spatial_topology' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatial_topology_dataset_connector",
        "obj": "SpatialTopologyDatasetConnector",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 37,
        "path": "python/grass/temporal/spatial_topology_dataset_connector.py",
        "symbol": "too-many-public-methods",
        "message": "Too many public methods (22/20)",
        "message-id": "R0904"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 327,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 328,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 330,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 331,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 334,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 335,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 336,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 339,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 340,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 341,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 364,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 365,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 367,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 368,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 369,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 371,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 373,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 375,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 376,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 919,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (124/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 923,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (121/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 927,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (124/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 951,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (467/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 964,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (244/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 968,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (241/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 972,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (244/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 996,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "line-too-long",
        "message": "Line too long (947/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1107/1000)",
        "message-id": "C0302"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 25,
        "column": 0,
        "endLine": 25,
        "endColumn": 33,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from grass.lib import vector' instead",
        "message-id": "R0402"
    },
    {
        "type": "error",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 25,
        "column": 0,
        "endLine": 25,
        "endColumn": 33,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.vector'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 25,
        "column": 0,
        "endLine": 25,
        "endColumn": 33,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 26,
        "column": 0,
        "endLine": 26,
        "endColumn": 31,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from grass.lib import rtree' instead",
        "message-id": "R0402"
    },
    {
        "type": "error",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 26,
        "column": 0,
        "endLine": 26,
        "endColumn": 31,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.rtree'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 26,
        "column": 0,
        "endLine": 26,
        "endColumn": 31,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 27,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from grass.lib import gis' instead",
        "message-id": "R0402"
    },
    {
        "type": "error",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 27,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.gis'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 27,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "SpatioTemporalTopologyBuilder._build_rtree",
        "line": 526,
        "column": 8,
        "endLine": 528,
        "endColumn": 52,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-enumerate",
        "message": "Consider using enumerate instead of iterating with range and len",
        "message-id": "C0200"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "SpatioTemporalTopologyBuilder.build",
        "line": 532,
        "column": 20,
        "endLine": 532,
        "endColumn": 25,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "invalid-name",
        "message": "Argument name \"mapsA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "SpatioTemporalTopologyBuilder.build",
        "line": 532,
        "column": 27,
        "endLine": 532,
        "endColumn": 32,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "invalid-name",
        "message": "Argument name \"mapsB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "SpatioTemporalTopologyBuilder.build",
        "line": 576,
        "column": 8,
        "endLine": 593,
        "endColumn": 60,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-enumerate",
        "message": "Consider using enumerate instead of iterating with range and len",
        "message-id": "C0200"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "SpatioTemporalTopologyBuilder.build",
        "line": 587,
        "column": 16,
        "endLine": 587,
        "endColumn": 17,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "invalid-name",
        "message": "Variable name \"A\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "SpatioTemporalTopologyBuilder.build",
        "line": 588,
        "column": 16,
        "endLine": 588,
        "endColumn": 17,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "SpatioTemporalTopologyBuilder._set_first",
        "line": 391,
        "column": 8,
        "endLine": 391,
        "endColumn": 19,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute '_first' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "SpatioTemporalTopologyBuilder._detect_first",
        "line": 398,
        "column": 16,
        "endLine": 398,
        "endColumn": 27,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute '_first' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "set_temoral_relationship",
        "line": 622,
        "column": 0,
        "endLine": 622,
        "endColumn": 28,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "set_temoral_relationship",
        "line": 622,
        "column": 29,
        "endLine": 622,
        "endColumn": 30,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "invalid-name",
        "message": "Argument name \"A\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "set_temoral_relationship",
        "line": 622,
        "column": 32,
        "endLine": 622,
        "endColumn": 33,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "invalid-name",
        "message": "Argument name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "set_temoral_relationship",
        "line": 623,
        "column": 7,
        "endLine": 623,
        "endColumn": 50,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'relation in ('equal', 'equals')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "set_temoral_relationship",
        "line": 639,
        "column": 9,
        "endLine": 639,
        "endColumn": 79,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'relation in ('during', 'starts', 'finishes')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "set_temoral_relationship",
        "line": 654,
        "column": 9,
        "endLine": 654,
        "endColumn": 82,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'relation in ('contains', 'started', 'finished')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "set_temoral_relationship",
        "line": 622,
        "column": 0,
        "endLine": 622,
        "endColumn": 28,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (34/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "set_temoral_relationship",
        "line": 622,
        "column": 0,
        "endLine": 622,
        "endColumn": 28,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (57/50)",
        "message-id": "R0915"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "set_spatial_relationship",
        "line": 688,
        "column": 0,
        "endLine": 688,
        "endColumn": 28,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "set_spatial_relationship",
        "line": 688,
        "column": 29,
        "endLine": 688,
        "endColumn": 30,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "invalid-name",
        "message": "Argument name \"A\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "set_spatial_relationship",
        "line": 688,
        "column": 32,
        "endLine": 688,
        "endColumn": 33,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "invalid-name",
        "message": "Argument name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "set_spatial_relationship",
        "line": 688,
        "column": 0,
        "endLine": 688,
        "endColumn": 28,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (22/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "print_temporal_topology_relationships",
        "line": 734,
        "column": 0,
        "endLine": 734,
        "endColumn": 41,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "useless-return",
        "message": "Useless return at end of function or method",
        "message-id": "R1711"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "print_spatio_temporal_topology_relationships",
        "line": 764,
        "column": 0,
        "endLine": 764,
        "endColumn": 48,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "useless-return",
        "message": "Useless return at end of function or method",
        "message-id": "R1711"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 836,
        "column": 0,
        "endLine": 836,
        "endColumn": 48,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1004,
        "column": 21,
        "endLine": 1004,
        "endColumn": 66,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1006,
        "column": 21,
        "endLine": 1006,
        "endColumn": 62,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1013,
        "column": 21,
        "endLine": 1013,
        "endColumn": 67,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1014,
        "column": 21,
        "endLine": 1014,
        "endColumn": 67,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1015,
        "column": 21,
        "endLine": 1015,
        "endColumn": 64,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1017,
        "column": 21,
        "endLine": 1017,
        "endColumn": 63,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1018,
        "column": 21,
        "endLine": 1018,
        "endColumn": 63,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1019,
        "column": 21,
        "endLine": 1019,
        "endColumn": 60,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1027,
        "column": 16,
        "endLine": 1028,
        "endColumn": 28,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1031,
        "column": 16,
        "endLine": 1032,
        "endColumn": 26,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1035,
        "column": 21,
        "endLine": 1035,
        "endColumn": 84,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1040,
        "column": 21,
        "endLine": 1040,
        "endColumn": 82,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1051,
        "column": 21,
        "endLine": 1051,
        "endColumn": 67,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1052,
        "column": 21,
        "endLine": 1052,
        "endColumn": 67,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1053,
        "column": 21,
        "endLine": 1053,
        "endColumn": 64,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1055,
        "column": 21,
        "endLine": 1055,
        "endColumn": 63,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1056,
        "column": 21,
        "endLine": 1056,
        "endColumn": 63,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1057,
        "column": 21,
        "endLine": 1057,
        "endColumn": 60,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1064,
        "column": 21,
        "endLine": 1064,
        "endColumn": 62,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1066,
        "column": 21,
        "endLine": 1066,
        "endColumn": 58,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1073,
        "column": 21,
        "endLine": 1073,
        "endColumn": 42,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1075,
        "column": 21,
        "endLine": 1075,
        "endColumn": 40,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1079,
        "column": 12,
        "endLine": 1084,
        "endColumn": 26,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "too-many-boolean-expressions",
        "message": "Too many boolean expressions in if statement (6/5)",
        "message-id": "R0916"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1089,
        "column": 21,
        "endLine": 1089,
        "endColumn": 40,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 1091,
        "column": 21,
        "endLine": 1091,
        "endColumn": 38,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 836,
        "column": 0,
        "endLine": 836,
        "endColumn": 48,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (28/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "create_temporal_relation_sql_where_statement",
        "line": 836,
        "column": 0,
        "endLine": 836,
        "endColumn": 48,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (62/50)",
        "message-id": "R0915"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 25,
        "column": 0,
        "endLine": 25,
        "endColumn": 33,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.lib.vector\" should be placed before local imports \"core.init_dbif\", \"abstract_dataset.AbstractDatasetComparisonKeyStartTime\", \"datetime_math.time_delta_to_relative_time_seconds\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 26,
        "column": 0,
        "endLine": 26,
        "endColumn": 31,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.lib.rtree\" should be placed before local imports \"core.init_dbif\", \"abstract_dataset.AbstractDatasetComparisonKeyStartTime\", \"datetime_math.time_delta_to_relative_time_seconds\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.spatio_temporal_relationships",
        "obj": "",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 27,
        "path": "python/grass/temporal/spatio_temporal_relationships.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.lib.gis\" should be placed before local imports \"core.init_dbif\", \"abstract_dataset.AbstractDatasetComparisonKeyStartTime\", \"datetime_math.time_delta_to_relative_time_seconds\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "",
        "line": 38,
        "column": 0,
        "endLine": 38,
        "endColumn": 14,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "invalid-name",
        "message": "Constant name \"proj_file_name\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "",
        "line": 39,
        "column": 0,
        "endLine": 39,
        "endColumn": 14,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "invalid-name",
        "message": "Constant name \"init_file_name\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "",
        "line": 40,
        "column": 0,
        "endLine": 40,
        "endColumn": 18,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "invalid-name",
        "message": "Constant name \"metadata_file_name\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "",
        "line": 41,
        "column": 0,
        "endLine": 41,
        "endColumn": 14,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "invalid-name",
        "message": "Constant name \"read_file_name\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "",
        "line": 42,
        "column": 0,
        "endLine": 42,
        "endColumn": 14,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "invalid-name",
        "message": "Constant name \"list_file_name\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "",
        "line": 43,
        "column": 0,
        "endLine": 43,
        "endColumn": 17,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "invalid-name",
        "message": "Constant name \"tmp_tar_file_name\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_export",
        "obj": "_export_raster_maps_as_gdal",
        "line": 53,
        "column": 0,
        "endLine": 53,
        "endColumn": 31,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_export",
        "obj": "_export_raster_maps_as_gdal",
        "line": 53,
        "column": 0,
        "endLine": 53,
        "endColumn": 31,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (20/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "_export_raster_maps_as_gdal",
        "line": 67,
        "column": 17,
        "endLine": 67,
        "endColumn": 35,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_export",
        "obj": "_export_raster_maps_as_gdal",
        "line": 129,
        "column": 26,
        "endLine": 129,
        "endColumn": 70,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_export",
        "obj": "_export_raster_maps_as_gdal",
        "line": 129,
        "column": 26,
        "endLine": 129,
        "endColumn": 27,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "_export_raster_maps_as_gdal",
        "line": 129,
        "column": 28,
        "endLine": 129,
        "endColumn": 62,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_export",
        "obj": "_export_raster_maps_as_gdal",
        "line": 141,
        "column": 16,
        "endLine": 144,
        "endColumn": 17,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_export",
        "obj": "_export_raster_maps_as_gdal",
        "line": 141,
        "column": 16,
        "endLine": 141,
        "endColumn": 17,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "_export_raster_maps_as_gdal",
        "line": 142,
        "column": 20,
        "endLine": 143,
        "endColumn": 41,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_export",
        "obj": "_export_raster_maps_as_gdal",
        "line": 53,
        "column": 0,
        "endLine": 53,
        "endColumn": 31,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (13/12)",
        "message-id": "R0912"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "_export_raster_maps",
        "line": 161,
        "column": 17,
        "endLine": 161,
        "endColumn": 35,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_export",
        "obj": "_export_raster_maps",
        "line": 170,
        "column": 26,
        "endLine": 170,
        "endColumn": 82,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_export",
        "obj": "_export_raster_maps",
        "line": 170,
        "column": 26,
        "endLine": 170,
        "endColumn": 27,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "_export_raster_maps",
        "line": 170,
        "column": 28,
        "endLine": 170,
        "endColumn": 74,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "_export_vector_maps_as_gml",
        "line": 188,
        "column": 17,
        "endLine": 188,
        "endColumn": 31,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_export",
        "obj": "_export_vector_maps_as_gml",
        "line": 204,
        "column": 16,
        "endLine": 204,
        "endColumn": 85,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_export",
        "obj": "_export_vector_maps_as_gml",
        "line": 204,
        "column": 16,
        "endLine": 204,
        "endColumn": 17,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "_export_vector_maps_as_gml",
        "line": 204,
        "column": 18,
        "endLine": 204,
        "endColumn": 77,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "_export_vector_maps_as_gpkg",
        "line": 224,
        "column": 17,
        "endLine": 224,
        "endColumn": 31,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_export",
        "obj": "_export_vector_maps_as_gpkg",
        "line": 240,
        "column": 16,
        "endLine": 240,
        "endColumn": 86,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_export",
        "obj": "_export_vector_maps_as_gpkg",
        "line": 240,
        "column": 16,
        "endLine": 240,
        "endColumn": 17,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "_export_vector_maps_as_gpkg",
        "line": 240,
        "column": 18,
        "endLine": 240,
        "endColumn": 78,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "_export_vector_maps",
        "line": 264,
        "column": 17,
        "endLine": 264,
        "endColumn": 34,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_export",
        "obj": "_export_vector_maps",
        "line": 273,
        "column": 26,
        "endLine": 273,
        "endColumn": 82,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_export",
        "obj": "_export_vector_maps",
        "line": 273,
        "column": 26,
        "endLine": 273,
        "endColumn": 27,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "_export_vector_maps",
        "line": 273,
        "column": 28,
        "endLine": 273,
        "endColumn": 74,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "_export_raster3d_maps",
        "line": 290,
        "column": 17,
        "endLine": 290,
        "endColumn": 31,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_export",
        "obj": "_export_raster3d_maps",
        "line": 299,
        "column": 26,
        "endLine": 299,
        "endColumn": 83,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_export",
        "obj": "_export_raster3d_maps",
        "line": 299,
        "column": 26,
        "endLine": 299,
        "endColumn": 27,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "_export_raster3d_maps",
        "line": 299,
        "column": 28,
        "endLine": 299,
        "endColumn": 75,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 307,
        "column": 0,
        "endLine": 307,
        "endColumn": 15,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 307,
        "column": 0,
        "endLine": 307,
        "endColumn": 15,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (31/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 308,
        "column": 4,
        "endLine": 308,
        "endColumn": 9,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'input'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 380,
        "column": 16,
        "endLine": 380,
        "endColumn": 41,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 386,
        "column": 15,
        "endLine": 386,
        "endColumn": 57,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'format_ in ('GTiff', 'AAIGrid')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 407,
        "column": 16,
        "endLine": 407,
        "endColumn": 41,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 411,
        "column": 16,
        "endLine": 411,
        "endColumn": 41,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 416,
        "column": 14,
        "endLine": 416,
        "endColumn": 23,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 419,
        "column": 14,
        "endLine": 419,
        "endColumn": 23,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 420,
        "column": 14,
        "endLine": 420,
        "endColumn": 23,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 421,
        "column": 14,
        "endLine": 421,
        "endColumn": 23,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 423,
        "column": 18,
        "endLine": 423,
        "endColumn": 27,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 426,
        "column": 14,
        "endLine": 426,
        "endColumn": 23,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 428,
        "column": 14,
        "endLine": 428,
        "endColumn": 23,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 429,
        "column": 14,
        "endLine": 429,
        "endColumn": 23,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 430,
        "column": 14,
        "endLine": 430,
        "endColumn": 23,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 431,
        "column": 14,
        "endLine": 431,
        "endColumn": 23,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 436,
        "column": 20,
        "endLine": 436,
        "endColumn": 49,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 440,
        "column": 16,
        "endLine": 440,
        "endColumn": 41,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 474,
        "column": 8,
        "endLine": 474,
        "endColumn": 59,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 477,
        "column": 8,
        "endLine": 477,
        "endColumn": 63,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 481,
        "column": 8,
        "endLine": 482,
        "endColumn": 25,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 487,
        "column": 20,
        "endLine": 487,
        "endColumn": 52,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 488,
        "column": 20,
        "endLine": 488,
        "endColumn": 41,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 307,
        "column": 0,
        "endLine": 307,
        "endColumn": 15,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (26/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 307,
        "column": 0,
        "endLine": 307,
        "endColumn": 15,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (99/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 379,
        "column": 10,
        "endLine": 379,
        "endColumn": 47,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 380,
        "column": 16,
        "endLine": 380,
        "endColumn": 41,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 407,
        "column": 16,
        "endLine": 407,
        "endColumn": 41,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 411,
        "column": 16,
        "endLine": 411,
        "endColumn": 41,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 436,
        "column": 20,
        "endLine": 436,
        "endColumn": 49,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 440,
        "column": 16,
        "endLine": 440,
        "endColumn": 41,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 427,
        "column": 30,
        "endLine": 427,
        "endColumn": 33,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'top'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_export",
        "obj": "export_stds",
        "line": 427,
        "column": 35,
        "endLine": 427,
        "endColumn": 41,
        "path": "python/grass/temporal/stds_export.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'bottom'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_import",
        "obj": "",
        "line": 42,
        "column": 0,
        "endLine": 42,
        "endColumn": 14,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "invalid-name",
        "message": "Constant name \"proj_file_name\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_import",
        "obj": "",
        "line": 43,
        "column": 0,
        "endLine": 43,
        "endColumn": 14,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "invalid-name",
        "message": "Constant name \"init_file_name\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_import",
        "obj": "",
        "line": 44,
        "column": 0,
        "endLine": 44,
        "endColumn": 14,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "invalid-name",
        "message": "Constant name \"list_file_name\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_import",
        "obj": "_import_raster_maps_from_gdal",
        "line": 54,
        "column": 0,
        "endLine": 54,
        "endColumn": 33,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "",
        "line": 92,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "_import_raster_maps_from_gdal",
        "line": 92,
        "column": 16,
        "endLine": 92,
        "endColumn": 75,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "_import_raster_maps_from_gdal",
        "line": 92,
        "column": 16,
        "endLine": 92,
        "endColumn": 17,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "",
        "line": 105,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "_import_raster_maps_from_gdal",
        "line": 105,
        "column": 20,
        "endLine": 105,
        "endColumn": 78,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "_import_raster_maps_from_gdal",
        "line": 105,
        "column": 20,
        "endLine": 105,
        "endColumn": 21,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "",
        "line": 135,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "_import_raster_maps",
        "line": 135,
        "column": 16,
        "endLine": 135,
        "endColumn": 70,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "_import_raster_maps",
        "line": 135,
        "column": 16,
        "endLine": 135,
        "endColumn": 17,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "",
        "line": 166,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "_import_vector_maps_from_gml",
        "line": 166,
        "column": 16,
        "endLine": 166,
        "endColumn": 70,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "_import_vector_maps_from_gml",
        "line": 166,
        "column": 16,
        "endLine": 166,
        "endColumn": 17,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "_import_vector_maps_from_gml",
        "line": 147,
        "column": 42,
        "endLine": 147,
        "endColumn": 47,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'overr'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "_import_vector_maps_from_gml",
        "line": 147,
        "column": 64,
        "endLine": 147,
        "endColumn": 68,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'link'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "",
        "line": 197,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "_import_vector_maps",
        "line": 197,
        "column": 16,
        "endLine": 197,
        "endColumn": 70,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "_import_vector_maps",
        "line": 197,
        "column": 16,
        "endLine": 197,
        "endColumn": 17,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 207,
        "column": 0,
        "endLine": 207,
        "endColumn": 15,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (14/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 207,
        "column": 0,
        "endLine": 207,
        "endColumn": 15,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (56/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 208,
        "column": 4,
        "endLine": 208,
        "endColumn": 9,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'input'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 515,
        "column": 8,
        "endLine": 515,
        "endColumn": 10,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'id'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 251,
        "column": 22,
        "endLine": 251,
        "endColumn": 75,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 251,
        "column": 22,
        "endLine": 251,
        "endColumn": 23,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 253,
        "column": 22,
        "endLine": 253,
        "endColumn": 62,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 253,
        "column": 22,
        "endLine": 253,
        "endColumn": 23,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 260,
        "column": 8,
        "endLine": 263,
        "endColumn": 9,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 260,
        "column": 8,
        "endLine": 260,
        "endColumn": 9,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 261,
        "column": 12,
        "endLine": 261,
        "endColumn": 84,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 270,
        "column": 22,
        "endLine": 270,
        "endColumn": 56,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 270,
        "column": 22,
        "endLine": 270,
        "endColumn": 23,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 272,
        "column": 22,
        "endLine": 272,
        "endColumn": 56,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 272,
        "column": 22,
        "endLine": 272,
        "endColumn": 23,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 274,
        "column": 22,
        "endLine": 274,
        "endColumn": 62,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 274,
        "column": 22,
        "endLine": 274,
        "endColumn": 23,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 276,
        "column": 17,
        "endLine": 276,
        "endColumn": 40,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 276,
        "column": 17,
        "endLine": 276,
        "endColumn": 18,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 287,
        "column": 24,
        "endLine": 287,
        "endColumn": 79,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 287,
        "column": 24,
        "endLine": 287,
        "endColumn": 25,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 302,
        "column": 20,
        "endLine": 302,
        "endColumn": 40,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 310,
        "column": 20,
        "endLine": 310,
        "endColumn": 40,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 310,
        "column": 20,
        "endLine": 310,
        "endColumn": 40,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 316,
        "column": 20,
        "endLine": 316,
        "endColumn": 44,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "",
        "line": 327,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 327,
        "column": 20,
        "endLine": 327,
        "endColumn": 80,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 327,
        "column": 20,
        "endLine": 327,
        "endColumn": 21,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 332,
        "column": 20,
        "endLine": 336,
        "endColumn": 21,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 332,
        "column": 20,
        "endLine": 332,
        "endColumn": 21,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "",
        "line": 338,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 338,
        "column": 30,
        "endLine": 338,
        "endColumn": 86,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 338,
        "column": 30,
        "endLine": 338,
        "endColumn": 31,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 353,
        "column": 15,
        "endLine": 353,
        "endColumn": 24,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 345,
        "column": 27,
        "endLine": 345,
        "endColumn": 52,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 345,
        "column": 27,
        "endLine": 345,
        "endColumn": 52,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 355,
        "column": 16,
        "endLine": 355,
        "endColumn": 67,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 355,
        "column": 16,
        "endLine": 355,
        "endColumn": 17,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 367,
        "column": 26,
        "endLine": 367,
        "endColumn": 62,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 367,
        "column": 26,
        "endLine": 367,
        "endColumn": 27,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "",
        "line": 373,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 373,
        "column": 16,
        "endLine": 373,
        "endColumn": 85,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 373,
        "column": 16,
        "endLine": 373,
        "endColumn": 17,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 379,
        "column": 8,
        "endLine": 379,
        "endColumn": 30,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (core.init)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 386,
        "column": 20,
        "endLine": 386,
        "endColumn": 45,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 387,
        "column": 24,
        "endLine": 387,
        "endColumn": 53,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 409,
        "column": 26,
        "endLine": 409,
        "endColumn": 33,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 413,
        "column": 24,
        "endLine": 413,
        "endColumn": 31,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 440,
        "column": 20,
        "endLine": 440,
        "endColumn": 45,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "",
        "line": 457,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 457,
        "column": 16,
        "endLine": 457,
        "endColumn": 79,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 457,
        "column": 16,
        "endLine": 457,
        "endColumn": 17,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 462,
        "column": 26,
        "endLine": 462,
        "endColumn": 77,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 462,
        "column": 26,
        "endLine": 462,
        "endColumn": 27,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 467,
        "column": 8,
        "endLine": 468,
        "endColumn": 37,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "consider-using-get",
        "message": "Consider using dict.get for getting values from a dict if a key is present or a default if not",
        "message-id": "R1715"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 469,
        "column": 8,
        "endLine": 470,
        "endColumn": 36,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "consider-using-get",
        "message": "Consider using dict.get for getting values from a dict if a key is present or a default if not",
        "message-id": "R1715"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "",
        "line": 473,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 473,
        "column": 26,
        "endLine": 473,
        "endColumn": 86,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 473,
        "column": 26,
        "endLine": 473,
        "endColumn": 27,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "",
        "line": 481,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 481,
        "column": 24,
        "endLine": 481,
        "endColumn": 83,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 481,
        "column": 24,
        "endLine": 481,
        "endColumn": 25,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "",
        "line": 489,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 489,
        "column": 24,
        "endLine": 489,
        "endColumn": 83,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 489,
        "column": 24,
        "endLine": 489,
        "endColumn": 25,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "",
        "line": 497,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 497,
        "column": 24,
        "endLine": 497,
        "endColumn": 79,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 497,
        "column": 24,
        "endLine": 497,
        "endColumn": 25,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "",
        "line": 508,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "implicit-str-concat",
        "message": "Implicit string concatenation found in call",
        "message-id": "W1404"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 508,
        "column": 24,
        "endLine": 508,
        "endColumn": 82,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 508,
        "column": 24,
        "endLine": 508,
        "endColumn": 25,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 512,
        "column": 26,
        "endLine": 512,
        "endColumn": 55,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 512,
        "column": 26,
        "endLine": 512,
        "endColumn": 27,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 519,
        "column": 16,
        "endLine": 522,
        "endColumn": 17,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 519,
        "column": 16,
        "endLine": 519,
        "endColumn": 17,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 528,
        "column": 15,
        "endLine": 528,
        "endColumn": 57,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'format_ in ('GTiff', 'AAIGrid')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 550,
        "column": 16,
        "endLine": 553,
        "endColumn": 17,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 550,
        "column": 16,
        "endLine": 550,
        "endColumn": 17,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 565,
        "column": 20,
        "endLine": 565,
        "endColumn": 60,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 565,
        "column": 20,
        "endLine": 565,
        "endColumn": 21,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 571,
        "column": 12,
        "endLine": 571,
        "endColumn": 46,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 571,
        "column": 12,
        "endLine": 571,
        "endColumn": 13,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 610,
        "column": 32,
        "endLine": 610,
        "endColumn": 74,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 610,
        "column": 32,
        "endLine": 610,
        "endColumn": 33,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 207,
        "column": 0,
        "endLine": 207,
        "endColumn": 15,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (56/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 207,
        "column": 0,
        "endLine": 207,
        "endColumn": 15,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (184/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 255,
        "column": 10,
        "endLine": 255,
        "endColumn": 44,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 302,
        "column": 20,
        "endLine": 302,
        "endColumn": 40,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 316,
        "column": 20,
        "endLine": 316,
        "endColumn": 44,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 386,
        "column": 20,
        "endLine": 386,
        "endColumn": 45,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 387,
        "column": 24,
        "endLine": 387,
        "endColumn": 53,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 440,
        "column": 20,
        "endLine": 440,
        "endColumn": 45,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.temporal.stds_import",
        "obj": "import_stds",
        "line": 391,
        "column": 23,
        "endLine": 391,
        "endColumn": 24,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'l'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_import",
        "obj": "",
        "line": 39,
        "column": 0,
        "endLine": 39,
        "endColumn": 30,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.script\" should be placed before local imports \"core.get_current_mapset\", \"register.register_maps_in_space_time_dataset\", \"factory.dataset_factory\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.stds_import",
        "obj": "",
        "line": 40,
        "column": 0,
        "endLine": 40,
        "endColumn": 46,
        "path": "python/grass/temporal/stds_import.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.exceptions.CalledModuleError\" should be placed before local imports \"core.get_current_mapset\", \"register.register_maps_in_space_time_dataset\", \"factory.dataset_factory\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "",
        "line": 588,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "line-too-long",
        "message": "Line too long (122/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "",
        "line": 589,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "",
        "line": 590,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "line-too-long",
        "message": "Line too long (131/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "",
        "line": 614,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "line-too-long",
        "message": "Line too long (148/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (3441/1000)",
        "message-id": "C0302"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "",
        "line": 2909,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "fixme",
        "message": "TODO:  Implement comparison operator for map lists.",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "",
        "line": 2914,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "fixme",
        "message": "TODO:  Implement statement in backward direction:",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "",
        "line": 2934,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "fixme",
        "message": "TODO:  Implement statement in backward direction:",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "",
        "line": 445,
        "column": 0,
        "endLine": 446,
        "endColumn": 8,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "",
        "line": 443,
        "column": 4,
        "endLine": 443,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from ply import lex' instead",
        "message-id": "R0402"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "",
        "line": 443,
        "column": 4,
        "endLine": 443,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "import-error",
        "message": "Unable to import 'ply.lex'",
        "message-id": "E0401"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "",
        "line": 444,
        "column": 4,
        "endLine": 444,
        "endColumn": 27,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from ply import yacc' instead",
        "message-id": "R0402"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "",
        "line": 444,
        "column": 4,
        "endLine": 444,
        "endColumn": 27,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "import-error",
        "message": "Unable to import 'ply.yacc'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraLexer.t_DATETIME",
        "line": 613,
        "column": 4,
        "endLine": 613,
        "endColumn": 18,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Method name \"t_DATETIME\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraLexer.t_DATE",
        "line": 620,
        "column": 4,
        "endLine": 620,
        "endColumn": 14,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Method name \"t_DATE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraLexer.t_TIME",
        "line": 626,
        "column": 4,
        "endLine": 626,
        "endColumn": 14,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Method name \"t_TIME\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraLexer.t_FLOAT",
        "line": 632,
        "column": 4,
        "endLine": 632,
        "endColumn": 15,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Method name \"t_FLOAT\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraLexer.t_INT",
        "line": 638,
        "column": 4,
        "endLine": 638,
        "endColumn": 13,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Method name \"t_INT\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraLexer.t_LIST",
        "line": 645,
        "column": 4,
        "endLine": 645,
        "endColumn": 14,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Method name \"t_LIST\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraLexer.t_NAME",
        "line": 660,
        "column": 4,
        "endLine": 660,
        "endColumn": 14,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Method name \"t_NAME\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraLexer.temporal_symbol",
        "line": 666,
        "column": 4,
        "endLine": 666,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraLexer.temporal_symbol",
        "line": 668,
        "column": 22,
        "endLine": 668,
        "endColumn": 64,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraLexer.temporal_symbol",
        "line": 670,
        "column": 24,
        "endLine": 670,
        "endColumn": 70,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraLexer.temporal_symbol",
        "line": 672,
        "column": 24,
        "endLine": 672,
        "endColumn": 73,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraLexer.t_error",
        "line": 679,
        "column": 4,
        "endLine": 679,
        "endColumn": 15,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraLexer.t_error",
        "line": 681,
        "column": 12,
        "endLine": 681,
        "endColumn": 59,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraLexer.build",
        "line": 686,
        "column": 4,
        "endLine": 686,
        "endColumn": 13,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraLexer.test",
        "line": 692,
        "column": 4,
        "endLine": 692,
        "endColumn": 12,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraLexer.build",
        "line": 687,
        "column": 8,
        "endLine": 687,
        "endColumn": 18,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'lexer' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraLexer.test",
        "line": 693,
        "column": 8,
        "endLine": 693,
        "endColumn": 22,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'name_list' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "GlobalTemporalVar.get_type",
        "line": 721,
        "column": 4,
        "endLine": 721,
        "endColumn": 16,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "GlobalTemporalVar.get_type",
        "line": 722,
        "column": 8,
        "endLine": 733,
        "endColumn": 29,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "GlobalTemporalVar.get_type",
        "line": 730,
        "column": 45,
        "endLine": 730,
        "endColumn": 64,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "use-implicit-booleaness-not-comparison",
        "message": "\"self.topology != []\" can be simplified to \"self.topology\", if it is strictly a sequence, as an empty list is falsey",
        "message-id": "C1803"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "GlobalTemporalVar.get_type",
        "line": 721,
        "column": 4,
        "endLine": 721,
        "endColumn": 16,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "GlobalTemporalVar.get_type_value",
        "line": 735,
        "column": 4,
        "endLine": 735,
        "endColumn": 22,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "FatalError",
        "line": 754,
        "column": 0,
        "endLine": 754,
        "endColumn": 16,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser",
        "line": 762,
        "column": 0,
        "endLine": 762,
        "endColumn": 27,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (30/7)",
        "message-id": "R0902"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.__init__",
        "line": 781,
        "column": 4,
        "endLine": 781,
        "endColumn": 16,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.setup_common_granularity",
        "line": 851,
        "column": 4,
        "endLine": 851,
        "endColumn": 32,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (18/15)",
        "message-id": "R0914"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.setup_common_granularity",
        "line": 879,
        "column": 16,
        "endLine": 882,
        "endColumn": 17,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.setup_common_granularity",
        "line": 879,
        "column": 16,
        "endLine": 879,
        "endColumn": 17,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.setup_common_granularity",
        "line": 922,
        "column": 20,
        "endLine": 925,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.setup_common_granularity",
        "line": 922,
        "column": 20,
        "endLine": 922,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.setup_common_granularity",
        "line": 936,
        "column": 16,
        "endLine": 936,
        "endColumn": 84,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.setup_common_granularity",
        "line": 936,
        "column": 16,
        "endLine": 936,
        "endColumn": 17,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.setup_common_granularity",
        "line": 941,
        "column": 25,
        "endLine": 941,
        "endColumn": 38,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.setup_common_granularity",
        "line": 915,
        "column": 14,
        "endLine": 915,
        "endColumn": 38,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'connection_state_changed'",
        "message-id": "W0612"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.parse",
        "line": 952,
        "column": 4,
        "endLine": 952,
        "endColumn": 13,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.generate_map_name",
        "line": 997,
        "column": 15,
        "endLine": 997,
        "endColumn": 35,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.generate_new_map",
        "line": 1001,
        "column": 4,
        "endLine": 1001,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.generate_new_map",
        "line": 1002,
        "column": 39,
        "endLine": 1002,
        "endColumn": 43,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'copy' from outer scope (line 449)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.overlay_map_extent",
        "line": 1034,
        "column": 33,
        "endLine": 1034,
        "endColumn": 37,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Argument name \"mapA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.overlay_map_extent",
        "line": 1034,
        "column": 39,
        "endLine": 1034,
        "endColumn": 43,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Argument name \"mapB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.overlay_map_extent",
        "line": 1034,
        "column": 4,
        "endLine": 1034,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.overlay_map_extent",
        "line": 1034,
        "column": 72,
        "endLine": 1034,
        "endColumn": 76,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'copy' from outer scope (line 449)",
        "message-id": "W0621"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.overlay_map_extent",
        "line": 1034,
        "column": 4,
        "endLine": 1034,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (25/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.overlay_map_extent",
        "line": 1034,
        "column": 4,
        "endLine": 1034,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (54/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.set_temporal_extent_list",
        "line": 1107,
        "column": 4,
        "endLine": 1107,
        "endColumn": 32,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "dangerous-default-value",
        "message": "Dangerous default value [] as argument",
        "message-id": "W0102"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.set_temporal_extent_list",
        "line": 1157,
        "column": 28,
        "endLine": 1166,
        "endColumn": 70,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "no-else-break",
        "message": "Unnecessary \"elif\" after \"break\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1723"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.set_temporal_extent_list",
        "line": 1123,
        "column": 8,
        "endLine": 1174,
        "endColumn": 29,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.set_temporal_extent_list",
        "line": 1121,
        "column": 8,
        "endLine": 1121,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'temporal_topo_list'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.remove_maps",
        "line": 1192,
        "column": 16,
        "endLine": 1192,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.remove_maps",
        "line": 1195,
        "column": 8,
        "endLine": 1198,
        "endColumn": 54,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "consider-using-dict-items",
        "message": "Consider iterating with .items()",
        "message-id": "C0206"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.remove_maps",
        "line": 1195,
        "column": 19,
        "endLine": 1195,
        "endColumn": 35,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.remove_maps",
        "line": 1197,
        "column": 34,
        "endLine": 1197,
        "endColumn": 82,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.remove_maps",
        "line": 1197,
        "column": 34,
        "endLine": 1197,
        "endColumn": 35,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.remove_maps",
        "line": 1197,
        "column": 36,
        "endLine": 1197,
        "endColumn": 73,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser._remove_maps",
        "line": 1206,
        "column": 8,
        "endLine": 1206,
        "endColumn": 11,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'max'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.check_stds",
        "line": 1222,
        "column": 25,
        "endLine": 1222,
        "endColumn": 30,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'input'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.check_stds",
        "line": 1315,
        "column": 12,
        "endLine": 1315,
        "endColumn": 15,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.check_stds",
        "line": 1246,
        "column": 12,
        "endLine": 1292,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1720"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.check_stds",
        "line": 1248,
        "column": 20,
        "endLine": 1248,
        "endColumn": 61,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.check_stds",
        "line": 1248,
        "column": 20,
        "endLine": 1248,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.check_stds",
        "line": 1279,
        "column": 28,
        "endLine": 1282,
        "endColumn": 29,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.check_stds",
        "line": 1279,
        "column": 28,
        "endLine": 1279,
        "endColumn": 29,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.check_stds",
        "line": 1287,
        "column": 28,
        "endLine": 1290,
        "endColumn": 29,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.check_stds",
        "line": 1287,
        "column": 28,
        "endLine": 1287,
        "endColumn": 29,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.check_stds",
        "line": 1310,
        "column": 28,
        "endLine": 1310,
        "endColumn": 66,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.check_stds",
        "line": 1310,
        "column": 28,
        "endLine": 1310,
        "endColumn": 29,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.check_stds",
        "line": 1222,
        "column": 4,
        "endLine": 1222,
        "endColumn": 18,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (28/12)",
        "message-id": "R0912"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.check_stds",
        "line": 1222,
        "column": 61,
        "endLine": 1222,
        "endColumn": 71,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'check_type'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.build_spatio_temporal_topology_list",
        "line": 1409,
        "column": 8,
        "endLine": 1409,
        "endColumn": 16,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Argument name \"maplistA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.build_spatio_temporal_topology_list",
        "line": 1410,
        "column": 8,
        "endLine": 1410,
        "endColumn": 16,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Argument name \"maplistB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.build_spatio_temporal_topology_list",
        "line": 1407,
        "column": 4,
        "endLine": 1407,
        "endColumn": 43,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "dangerous-default-value",
        "message": "Dangerous default value [] as argument",
        "message-id": "W0102"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.build_spatio_temporal_topology_list",
        "line": 1407,
        "column": 4,
        "endLine": 1407,
        "endColumn": 43,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.build_spatio_temporal_topology_list",
        "line": 1407,
        "column": 4,
        "endLine": 1407,
        "endColumn": 43,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (21/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.build_spatio_temporal_topology_list",
        "line": 1608,
        "column": 8,
        "endLine": 1638,
        "endColumn": 53,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.assign_bool_value",
        "line": 1646,
        "column": 4,
        "endLine": 1646,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "dangerous-default-value",
        "message": "Dangerous default value [] as argument",
        "message-id": "W0102"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.assign_bool_value",
        "line": 1646,
        "column": 4,
        "endLine": 1646,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "dangerous-default-value",
        "message": "Dangerous default value [] as argument",
        "message-id": "W0102"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.assign_bool_value",
        "line": 1663,
        "column": 8,
        "endLine": 1681,
        "endColumn": 29,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.assign_bool_value",
        "line": 1680,
        "column": 38,
        "endLine": 1680,
        "endColumn": 45,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "undefined-loop-variable",
        "message": "Using possibly undefined loop variable 'boolean'",
        "message-id": "W0631"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.assign_bool_value",
        "line": 1682,
        "column": 8,
        "endLine": 1685,
        "endColumn": 30,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'var = bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.compare_bool_value",
        "line": 1690,
        "column": 4,
        "endLine": 1690,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "dangerous-default-value",
        "message": "Dangerous default value [] as argument",
        "message-id": "W0102"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.compare_bool_value",
        "line": 1690,
        "column": 4,
        "endLine": 1690,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "dangerous-default-value",
        "message": "Dangerous default value [] as argument",
        "message-id": "W0102"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.compare_bool_value",
        "line": 1690,
        "column": 4,
        "endLine": 1690,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.compare_bool_value",
        "line": 1690,
        "column": 4,
        "endLine": 1690,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.compare_bool_value",
        "line": 1718,
        "column": 8,
        "endLine": 1743,
        "endColumn": 29,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (7/5)",
        "message-id": "R1702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.compare_bool_value",
        "line": 1750,
        "column": 21,
        "endLine": 1750,
        "endColumn": 46,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "eval-used",
        "message": "Use of eval",
        "message-id": "W0123"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.perform_temporal_selection",
        "line": 1785,
        "column": 14,
        "endLine": 1785,
        "endColumn": 22,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Argument name \"maplistA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.perform_temporal_selection",
        "line": 1785,
        "column": 24,
        "endLine": 1785,
        "endColumn": 32,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Argument name \"maplistB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.perform_temporal_selection",
        "line": 1784,
        "column": 4,
        "endLine": 1784,
        "endColumn": 34,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "dangerous-default-value",
        "message": "Dangerous default value [] as argument",
        "message-id": "W0102"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.perform_temporal_selection",
        "line": 1784,
        "column": 4,
        "endLine": 1784,
        "endColumn": 34,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.set_granularity",
        "line": 1876,
        "column": 30,
        "endLine": 1876,
        "endColumn": 38,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Argument name \"maplistA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.set_granularity",
        "line": 1876,
        "column": 40,
        "endLine": 1876,
        "endColumn": 48,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Argument name \"maplistB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.set_granularity",
        "line": 1876,
        "column": 4,
        "endLine": 1876,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "dangerous-default-value",
        "message": "Dangerous default value [] as argument",
        "message-id": "W0102"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.set_granularity",
        "line": 1876,
        "column": 4,
        "endLine": 1876,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (23/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.set_granularity",
        "line": 1959,
        "column": 8,
        "endLine": 2004,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.set_granularity",
        "line": 1876,
        "column": 4,
        "endLine": 1876,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (21/12)",
        "message-id": "R0912"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.get_temporal_func_dict",
        "line": 2016,
        "column": 37,
        "endLine": 2016,
        "endColumn": 40,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.eval_datetime_str",
        "line": 2125,
        "column": 4,
        "endLine": 2125,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.eval_datetime_str",
        "line": 2128,
        "column": 23,
        "endLine": 2128,
        "endColumn": 50,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "eval-used",
        "message": "Use of eval",
        "message-id": "W0123"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.eval_datetime_str",
        "line": 2130,
        "column": 23,
        "endLine": 2130,
        "endColumn": 50,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "eval-used",
        "message": "Use of eval",
        "message-id": "W0123"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.eval_datetime_str",
        "line": 2132,
        "column": 23,
        "endLine": 2132,
        "endColumn": 51,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "eval-used",
        "message": "Use of eval",
        "message-id": "W0123"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.eval_datetime_str",
        "line": 2134,
        "column": 23,
        "endLine": 2134,
        "endColumn": 51,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "eval-used",
        "message": "Use of eval",
        "message-id": "W0123"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.eval_datetime_str",
        "line": 2136,
        "column": 23,
        "endLine": 2136,
        "endColumn": 51,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "eval-used",
        "message": "Use of eval",
        "message-id": "W0123"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.eval_datetime_str",
        "line": 2138,
        "column": 23,
        "endLine": 2138,
        "endColumn": 51,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "eval-used",
        "message": "Use of eval",
        "message-id": "W0123"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.eval_datetime_str",
        "line": 2140,
        "column": 15,
        "endLine": 2140,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'boolname' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.eval_global_var",
        "line": 2177,
        "column": 27,
        "endLine": 2177,
        "endColumn": 69,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "eval-used",
        "message": "Use of eval",
        "message-id": "W0123"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.eval_global_var",
        "line": 2151,
        "column": 8,
        "endLine": 2151,
        "endColumn": 16,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'boollist'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.eval_map_list",
        "line": 2185,
        "column": 4,
        "endLine": 2185,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "dangerous-default-value",
        "message": "Dangerous default value [] as argument",
        "message-id": "W0102"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.build_condition_list",
        "line": 2211,
        "column": 4,
        "endLine": 2211,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "dangerous-default-value",
        "message": "Dangerous default value [] as argument",
        "message-id": "W0102"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.build_condition_list",
        "line": 2257,
        "column": 16,
        "endLine": 2257,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'iter'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.build_condition_list",
        "line": 2251,
        "column": 13,
        "endLine": 2251,
        "endColumn": 81,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "use-a-generator",
        "message": "Use a generator instead 'all(issubclass(type(ele), AbstractMapDataset) for ele in tvarexpr)'",
        "message-id": "R1729"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.build_condition_list",
        "line": 2257,
        "column": 12,
        "endLine": 2262,
        "endColumn": 88,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "consider-using-enumerate",
        "message": "Consider using enumerate instead of iterating with range and len",
        "message-id": "C0200"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.build_condition_list",
        "line": 2261,
        "column": 19,
        "endLine": 2261,
        "endColumn": 80,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "use-a-generator",
        "message": "Use a generator instead 'all(issubclass(type(ele), list) for ele in [expr, relexpr])'",
        "message-id": "R1729"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.build_condition_list",
        "line": 2266,
        "column": 23,
        "endLine": 2266,
        "endColumn": 87,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "use-a-generator",
        "message": "Use a generator instead 'all(issubclass(type(ele), AbstractMapDataset) for ele in expr)'",
        "message-id": "R1729"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.build_condition_list",
        "line": 2276,
        "column": 27,
        "endLine": 2276,
        "endColumn": 87,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "use-a-generator",
        "message": "Use a generator instead 'all('condition_value' in dir(map_i) for map_i in thenlist)'",
        "message-id": "R1729"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.build_condition_list",
        "line": 2278,
        "column": 28,
        "endLine": 2281,
        "endColumn": 29,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "expression-not-assigned",
        "message": "Expression \"[map_i.condition_value.extend(expr.get_type_value()) for map_i in thenlist]\" is assigned to nothing",
        "message-id": "W0106"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.build_condition_list",
        "line": 2287,
        "column": 28,
        "endLine": 2287,
        "endColumn": 38,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "used-before-assignment",
        "message": "Using variable 'resultlist' before assignment",
        "message-id": "E0601"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.build_condition_list",
        "line": 2211,
        "column": 4,
        "endLine": 2211,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (13/12)",
        "message-id": "R0912"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.build_condition_list",
        "line": 2259,
        "column": 16,
        "endLine": 2259,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'operator'",
        "message-id": "W0612"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.eval_condition_list.recurse_compare",
        "line": 2321,
        "column": 20,
        "endLine": 2324,
        "endColumn": 38,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'var = bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.eval_condition_list.recurse_compare",
        "line": 2331,
        "column": 20,
        "endLine": 2334,
        "endColumn": 38,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'var = bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.eval_condition_list",
        "line": 2361,
        "column": 8,
        "endLine": 2364,
        "endColumn": 29,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_statement_assign",
        "line": 2366,
        "column": 4,
        "endLine": 2366,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (25/15)",
        "message-id": "R0914"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_statement_assign",
        "line": 2406,
        "column": 36,
        "endLine": 2410,
        "endColumn": 37,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_statement_assign",
        "line": 2406,
        "column": 36,
        "endLine": 2406,
        "endColumn": 37,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_statement_assign",
        "line": 2416,
        "column": 36,
        "endLine": 2420,
        "endColumn": 37,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_statement_assign",
        "line": 2416,
        "column": 36,
        "endLine": 2416,
        "endColumn": 37,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_statement_assign",
        "line": 2375,
        "column": 8,
        "endLine": 2595,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_statement_assign",
        "line": 2446,
        "column": 43,
        "endLine": 2446,
        "endColumn": 54,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_statement_assign",
        "line": 2456,
        "column": 43,
        "endLine": 2456,
        "endColumn": 54,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_statement_assign",
        "line": 2466,
        "column": 36,
        "endLine": 2467,
        "endColumn": 77,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_statement_assign",
        "line": 2375,
        "column": 8,
        "endLine": 2595,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_statement_assign",
        "line": 2375,
        "column": 8,
        "endLine": 2595,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (8/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_statement_assign",
        "line": 2375,
        "column": 8,
        "endLine": 2595,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (7/5)",
        "message-id": "R1702"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_statement_assign",
        "line": 2548,
        "column": 36,
        "endLine": 2549,
        "endColumn": 57,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_statement_assign",
        "line": 2375,
        "column": 8,
        "endLine": 2595,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (7/5)",
        "message-id": "R1702"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_statement_assign",
        "line": 2561,
        "column": 36,
        "endLine": 2562,
        "endColumn": 48,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_statement_assign",
        "line": 2375,
        "column": 8,
        "endLine": 2595,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_statement_assign",
        "line": 2574,
        "column": 24,
        "endLine": 2575,
        "endColumn": 58,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_statement_assign",
        "line": 2366,
        "column": 4,
        "endLine": 2366,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (39/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_statement_assign",
        "line": 2366,
        "column": 4,
        "endLine": 2366,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (100/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_tmap_function",
        "line": 2669,
        "column": 12,
        "endLine": 2669,
        "endColumn": 17,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'input'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_tmap_function",
        "line": 2679,
        "column": 16,
        "endLine": 2686,
        "endColumn": 48,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1720"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_tmap_function",
        "line": 2681,
        "column": 24,
        "endLine": 2681,
        "endColumn": 76,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_tmap_function",
        "line": 2681,
        "column": 24,
        "endLine": 2681,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_tmap_function",
        "line": 2689,
        "column": 20,
        "endLine": 2692,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_tmap_function",
        "line": 2689,
        "column": 20,
        "endLine": 2689,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_tmerge_function",
        "line": 2715,
        "column": 12,
        "endLine": 2715,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"maplistA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_tmerge_function",
        "line": 2716,
        "column": 12,
        "endLine": 2716,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"maplistB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_tmerge_function",
        "line": 2720,
        "column": 34,
        "endLine": 2720,
        "endColumn": 62,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_tmerge_function",
        "line": 2720,
        "column": 34,
        "endLine": 2720,
        "endColumn": 35,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_tmerge_function",
        "line": 2724,
        "column": 20,
        "endLine": 2727,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_tmerge_function",
        "line": 2724,
        "column": 20,
        "endLine": 2724,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_tmerge_function",
        "line": 2732,
        "column": 20,
        "endLine": 2735,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_tmerge_function",
        "line": 2732,
        "column": 20,
        "endLine": 2732,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_tmerge_function",
        "line": 2740,
        "column": 16,
        "endLine": 2740,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"typeA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_tmerge_function",
        "line": 2741,
        "column": 16,
        "endLine": 2741,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"typeB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_tmerge_function",
        "line": 2745,
        "column": 24,
        "endLine": 2748,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_tmerge_function",
        "line": 2745,
        "column": 24,
        "endLine": 2745,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_t_hash",
        "line": 2770,
        "column": 12,
        "endLine": 2770,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"maplistA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_t_hash",
        "line": 2771,
        "column": 12,
        "endLine": 2771,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"maplistB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_t_hash2",
        "line": 2786,
        "column": 12,
        "endLine": 2786,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"maplistA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_t_hash2",
        "line": 2787,
        "column": 12,
        "endLine": 2787,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"maplistB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_t_td_var",
        "line": 2818,
        "column": 30,
        "endLine": 2818,
        "endColumn": 32,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "used-before-assignment",
        "message": "Using variable 'td' before assignment",
        "message-id": "E0601"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_t_td_var",
        "line": 2813,
        "column": 32,
        "endLine": 2813,
        "endColumn": 36,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'unit'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_t_var_expr_td_hash",
        "line": 2889,
        "column": 16,
        "endLine": 2893,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_t_var_expr_td_hash",
        "line": 2883,
        "column": 31,
        "endLine": 2883,
        "endColumn": 62,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "eval-used",
        "message": "Use of eval",
        "message-id": "W0123"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_t_var_expr_comp",
        "line": 2973,
        "column": 12,
        "endLine": 2973,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"tvarexprA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_t_var_expr_comp",
        "line": 2974,
        "column": 12,
        "endLine": 2974,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"tvarexprB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_t_var_expr_comp_op",
        "line": 3003,
        "column": 12,
        "endLine": 3003,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"tvarexprA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_t_var_expr_comp_op",
        "line": 3004,
        "column": 12,
        "endLine": 3004,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"tvarexprB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_t_select",
        "line": 3043,
        "column": 12,
        "endLine": 3043,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"maplistA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_t_select",
        "line": 3044,
        "column": 12,
        "endLine": 3044,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"maplistB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_t_not_select",
        "line": 3068,
        "column": 12,
        "endLine": 3068,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"maplistA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_t_not_select",
        "line": 3069,
        "column": 12,
        "endLine": 3069,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"maplistB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_t_select_operator",
        "line": 3103,
        "column": 12,
        "endLine": 3103,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"maplistA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_t_select_operator",
        "line": 3104,
        "column": 12,
        "endLine": 3104,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"maplistB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_t_select_operator",
        "line": 3108,
        "column": 12,
        "endLine": 3111,
        "endColumn": 32,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'var = bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_t_buff",
        "line": 3300,
        "column": 16,
        "endLine": 3300,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_t_buff",
        "line": 3307,
        "column": 36,
        "endLine": 3307,
        "endColumn": 45,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'increment' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_t_shift",
        "line": 3365,
        "column": 73,
        "endLine": 3365,
        "endColumn": 82,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'increment' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_expr_time_const",
        "line": 3407,
        "column": 19,
        "endLine": 3407,
        "endColumn": 59,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "chained-comparison",
        "message": "Simplify chained comparison between the operands",
        "message-id": "R1716"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_error",
        "line": 3427,
        "column": 4,
        "endLine": 3427,
        "endColumn": 15,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_error",
        "line": 3429,
        "column": 8,
        "endLine": 3435,
        "endColumn": 56,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1720"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.p_error",
        "line": 3431,
        "column": 16,
        "endLine": 3432,
        "endColumn": 22,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.setup_common_granularity",
        "line": 942,
        "column": 12,
        "endLine": 942,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'granularity' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.setup_common_granularity",
        "line": 946,
        "column": 12,
        "endLine": 946,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'granularity' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.parse",
        "line": 971,
        "column": 8,
        "endLine": 971,
        "endColumn": 18,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'lexer' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.parse",
        "line": 973,
        "column": 8,
        "endLine": 973,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'parser' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.parse",
        "line": 975,
        "column": 8,
        "endLine": 975,
        "endColumn": 22,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'overwrite' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.parse",
        "line": 976,
        "column": 8,
        "endLine": 976,
        "endColumn": 18,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'count' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.parse",
        "line": 977,
        "column": 8,
        "endLine": 977,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'stdstype' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.parse",
        "line": 978,
        "column": 8,
        "endLine": 978,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'maptype' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.parse",
        "line": 979,
        "column": 8,
        "endLine": 979,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'mapclass' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.parse",
        "line": 980,
        "column": 8,
        "endLine": 980,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'basename' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser.parse",
        "line": 981,
        "column": 8,
        "endLine": 981,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'expression' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_algebra",
        "obj": "TemporalAlgebraParser",
        "line": 762,
        "column": 0,
        "endLine": 762,
        "endColumn": 27,
        "path": "python/grass/temporal/temporal_algebra.py",
        "symbol": "too-many-public-methods",
        "message": "Too many public methods (52/20)",
        "message-id": "R0904"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_extent",
        "obj": "",
        "line": 1093,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_extent",
        "obj": "",
        "line": 1360,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_extent",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1593/1000)",
        "message-id": "C0302"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.intersect",
        "line": 179,
        "column": 11,
        "endLine": 179,
        "endColumn": 54,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'relation in ('after', 'before')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.intersect",
        "line": 201,
        "column": 8,
        "endLine": 208,
        "endColumn": 65,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.intersect",
        "line": 91,
        "column": 4,
        "endLine": 91,
        "endColumn": 17,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.disjoint_union",
        "line": 390,
        "column": 8,
        "endLine": 397,
        "endColumn": 65,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.disjoint_union",
        "line": 210,
        "column": 4,
        "endLine": 210,
        "endColumn": 22,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (16/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.disjoint_union",
        "line": 210,
        "column": 4,
        "endLine": 210,
        "endColumn": 22,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.union",
        "line": 426,
        "column": 11,
        "endLine": 426,
        "endColumn": 54,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'relation in ('after', 'before')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.starts",
        "line": 458,
        "column": 8,
        "endLine": 464,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'return bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.starts",
        "line": 458,
        "column": 8,
        "endLine": 464,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.started",
        "line": 492,
        "column": 8,
        "endLine": 498,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'return bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.started",
        "line": 492,
        "column": 8,
        "endLine": 498,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.finishes",
        "line": 526,
        "column": 8,
        "endLine": 532,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'return bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.finishes",
        "line": 526,
        "column": 8,
        "endLine": 532,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.finished",
        "line": 560,
        "column": 8,
        "endLine": 566,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'return bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.finished",
        "line": 560,
        "column": 8,
        "endLine": 566,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.after",
        "line": 592,
        "column": 12,
        "endLine": 595,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'return bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.after",
        "line": 592,
        "column": 12,
        "endLine": 595,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.after",
        "line": 597,
        "column": 8,
        "endLine": 600,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'return bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.after",
        "line": 597,
        "column": 8,
        "endLine": 600,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.before",
        "line": 626,
        "column": 12,
        "endLine": 629,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'return bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.before",
        "line": 626,
        "column": 12,
        "endLine": 629,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.before",
        "line": 631,
        "column": 8,
        "endLine": 634,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'return bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.before",
        "line": 631,
        "column": 8,
        "endLine": 634,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.adjacent",
        "line": 670,
        "column": 8,
        "endLine": 675,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'return bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.adjacent",
        "line": 670,
        "column": 8,
        "endLine": 675,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.follows",
        "line": 703,
        "column": 8,
        "endLine": 706,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'return bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.follows",
        "line": 703,
        "column": 8,
        "endLine": 706,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.precedes",
        "line": 736,
        "column": 8,
        "endLine": 739,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'return bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.precedes",
        "line": 736,
        "column": 8,
        "endLine": 739,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.during",
        "line": 769,
        "column": 12,
        "endLine": 775,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'return bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.during",
        "line": 769,
        "column": 12,
        "endLine": 775,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.during",
        "line": 777,
        "column": 8,
        "endLine": 783,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'return bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.during",
        "line": 777,
        "column": 8,
        "endLine": 783,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.contains",
        "line": 814,
        "column": 12,
        "endLine": 820,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'return bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.contains",
        "line": 814,
        "column": 12,
        "endLine": 820,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.contains",
        "line": 822,
        "column": 8,
        "endLine": 828,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'return bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.contains",
        "line": 822,
        "column": 8,
        "endLine": 828,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.equal",
        "line": 854,
        "column": 12,
        "endLine": 857,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'return bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.equal",
        "line": 854,
        "column": 12,
        "endLine": 857,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.equal",
        "line": 862,
        "column": 8,
        "endLine": 868,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'return bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.equal",
        "line": 862,
        "column": 8,
        "endLine": 868,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.overlaps",
        "line": 903,
        "column": 8,
        "endLine": 910,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'return bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.overlaps",
        "line": 903,
        "column": 8,
        "endLine": 910,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.overlapped",
        "line": 946,
        "column": 8,
        "endLine": 953,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'return bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.overlapped",
        "line": 946,
        "column": 8,
        "endLine": 953,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.temporal_relation",
        "line": 955,
        "column": 4,
        "endLine": 955,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (19/6)",
        "message-id": "R0911"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.temporal_relation",
        "line": 955,
        "column": 4,
        "endLine": 955,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (18/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.get_id",
        "line": 1039,
        "column": 8,
        "endLine": 1042,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.get_start_time",
        "line": 1047,
        "column": 8,
        "endLine": 1050,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.get_end_time",
        "line": 1055,
        "column": 8,
        "endLine": 1058,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.print_shell_info",
        "line": 1073,
        "column": 14,
        "endLine": 1073,
        "endColumn": 31,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent.print_shell_info",
        "line": 1074,
        "column": 14,
        "endLine": 1074,
        "endColumn": 29,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "TemporalExtent",
        "line": 28,
        "column": 0,
        "endLine": 28,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "too-many-public-methods",
        "message": "Too many public methods (26/20)",
        "message-id": "R0904"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_extent",
        "obj": "RasterAbsoluteTime",
        "line": 1105,
        "column": 0,
        "endLine": 1105,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_extent",
        "obj": "Raster3DAbsoluteTime",
        "line": 1112,
        "column": 0,
        "endLine": 1112,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_extent",
        "obj": "VectorAbsoluteTime",
        "line": 1119,
        "column": 0,
        "endLine": 1119,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "STDSAbsoluteTime.__init__",
        "line": 1172,
        "column": 4,
        "endLine": 1172,
        "endColumn": 16,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "STDSAbsoluteTime.get_granularity",
        "line": 1206,
        "column": 8,
        "endLine": 1209,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "STDSAbsoluteTime.get_map_time",
        "line": 1222,
        "column": 8,
        "endLine": 1225,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_extent",
        "obj": "STDSAbsoluteTime.print_shell_info",
        "line": 1241,
        "column": 14,
        "endLine": 1241,
        "endColumn": 32,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_extent",
        "obj": "STRDSAbsoluteTime",
        "line": 1248,
        "column": 0,
        "endLine": 1248,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_extent",
        "obj": "STR3DSAbsoluteTime",
        "line": 1255,
        "column": 0,
        "endLine": 1255,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_extent",
        "obj": "STVDSAbsoluteTime",
        "line": 1262,
        "column": 0,
        "endLine": 1262,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "RelativeTemporalExtent.__init__",
        "line": 1309,
        "column": 4,
        "endLine": 1309,
        "endColumn": 16,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "RelativeTemporalExtent.get_unit",
        "line": 1330,
        "column": 8,
        "endLine": 1333,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_extent",
        "obj": "RelativeTemporalExtent.temporal_relation",
        "line": 1335,
        "column": 4,
        "endLine": 1335,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "arguments-renamed",
        "message": "Parameter 'extent' has been renamed to 'map' in overriding 'RelativeTemporalExtent.temporal_relation' method",
        "message-id": "W0237"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_extent",
        "obj": "RelativeTemporalExtent.temporal_relation",
        "line": 1335,
        "column": 32,
        "endLine": 1335,
        "endColumn": 35,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_extent",
        "obj": "RasterRelativeTime",
        "line": 1374,
        "column": 0,
        "endLine": 1374,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_extent",
        "obj": "Raster3DRelativeTime",
        "line": 1381,
        "column": 0,
        "endLine": 1381,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_extent",
        "obj": "VectorRelativeTime",
        "line": 1388,
        "column": 0,
        "endLine": 1388,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "STDSRelativeTime.__init__",
        "line": 1445,
        "column": 4,
        "endLine": 1445,
        "endColumn": 16,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "STDSRelativeTime.get_granularity",
        "line": 1480,
        "column": 8,
        "endLine": 1483,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "STDSRelativeTime.get_map_time",
        "line": 1496,
        "column": 8,
        "endLine": 1499,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_extent",
        "obj": "STRDSRelativeTime",
        "line": 1522,
        "column": 0,
        "endLine": 1522,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "STRDSRelativeTime.__init__",
        "line": 1523,
        "column": 4,
        "endLine": 1523,
        "endColumn": 16,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_extent",
        "obj": "STR3DSRelativeTime",
        "line": 1544,
        "column": 0,
        "endLine": 1544,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "STR3DSRelativeTime.__init__",
        "line": 1545,
        "column": 4,
        "endLine": 1545,
        "endColumn": 16,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_extent",
        "obj": "STVDSRelativeTime",
        "line": 1566,
        "column": 0,
        "endLine": 1566,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_extent",
        "obj": "STVDSRelativeTime.__init__",
        "line": 1567,
        "column": 4,
        "endLine": 1567,
        "endColumn": 16,
        "path": "python/grass/temporal/temporal_extent.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_granularity",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1310/1000)",
        "message-id": "C0302"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_granularity",
        "obj": "",
        "line": 1249,
        "column": 5,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "fixme",
        "message": "TODO check the leap second",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_granularity",
        "obj": "check_granularity_string",
        "line": 85,
        "column": 4,
        "endLine": 85,
        "endColumn": 17,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "pointless-statement",
        "message": "Statement seems to have no effect",
        "message-id": "W0104"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_granularity",
        "obj": "check_granularity_string",
        "line": 93,
        "column": 8,
        "endLine": 94,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_granularity",
        "obj": "check_granularity_string",
        "line": 100,
        "column": 8,
        "endLine": 101,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_granularity",
        "obj": "check_granularity_string",
        "line": 105,
        "column": 8,
        "endLine": 106,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "check_granularity_string",
        "line": 39,
        "column": 0,
        "endLine": 39,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (7/6)",
        "message-id": "R0911"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_granularity",
        "obj": "check_granularity_string",
        "line": 99,
        "column": 12,
        "endLine": 99,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'integer'",
        "message-id": "W0612"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_granularity",
        "obj": "get_time_tuple_function._get_map_time_tuple",
        "line": 139,
        "column": 15,
        "endLine": 139,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'time_tuple' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "get_time_tuple_function",
        "line": 147,
        "column": 4,
        "endLine": 150,
        "endColumn": 34,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "_is_after",
        "line": 180,
        "column": 8,
        "endLine": 183,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'return bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "_is_after",
        "line": 180,
        "column": 8,
        "endLine": 183,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "_is_after",
        "line": 185,
        "column": 4,
        "endLine": 188,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "simplifiable-if-statement",
        "message": "The if statement can be replaced with 'return bool(test)'",
        "message-id": "R1703"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "_is_after",
        "line": 185,
        "column": 4,
        "endLine": 188,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_absolute_time_granularity",
        "line": 354,
        "column": 0,
        "endLine": 354,
        "endColumn": 37,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (19/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_absolute_time_granularity",
        "line": 475,
        "column": 12,
        "endLine": 482,
        "endColumn": 29,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "consider-using-dict-items",
        "message": "Consider iterating with .items()",
        "message-id": "C0206"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_absolute_time_granularity",
        "line": 493,
        "column": 12,
        "endLine": 500,
        "endColumn": 29,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "consider-using-dict-items",
        "message": "Consider iterating with .items()",
        "message-id": "C0206"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_absolute_time_granularity",
        "line": 354,
        "column": 0,
        "endLine": 354,
        "endColumn": 37,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (23/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_common_absolute_time_granularity",
        "line": 784,
        "column": 12,
        "endLine": 787,
        "endColumn": 33,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_common_absolute_time_granularity",
        "line": 797,
        "column": 12,
        "endLine": 800,
        "endColumn": 33,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_common_absolute_time_granularity",
        "line": 810,
        "column": 12,
        "endLine": 813,
        "endColumn": 31,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_common_absolute_time_granularity",
        "line": 823,
        "column": 12,
        "endLine": 826,
        "endColumn": 30,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_common_absolute_time_granularity",
        "line": 836,
        "column": 12,
        "endLine": 839,
        "endColumn": 32,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_common_absolute_time_granularity",
        "line": 581,
        "column": 0,
        "endLine": 581,
        "endColumn": 44,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (17/6)",
        "message-id": "R0911"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_common_absolute_time_granularity",
        "line": 581,
        "column": 0,
        "endLine": 581,
        "endColumn": 44,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (31/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_common_absolute_time_granularity_simple",
        "line": 847,
        "column": 0,
        "endLine": 847,
        "endColumn": 51,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (18/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_common_absolute_time_granularity_simple",
        "line": 951,
        "column": 12,
        "endLine": 952,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "consider-using-min-builtin",
        "message": "Consider using 'min_gran = min(min_gran, 0)' instead of unnecessary if block",
        "message-id": "R1730"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_common_absolute_time_granularity_simple",
        "line": 953,
        "column": 12,
        "endLine": 954,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "consider-using-max-builtin",
        "message": "Consider using 'max_gran = max(max_gran, 0)' instead of unnecessary if block",
        "message-id": "R1731"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_common_absolute_time_granularity_simple",
        "line": 960,
        "column": 12,
        "endLine": 961,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "consider-using-min-builtin",
        "message": "Consider using 'min_gran = min(min_gran, 1)' instead of unnecessary if block",
        "message-id": "R1730"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_common_absolute_time_granularity_simple",
        "line": 962,
        "column": 12,
        "endLine": 963,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "consider-using-max-builtin",
        "message": "Consider using 'max_gran = max(max_gran, 1)' instead of unnecessary if block",
        "message-id": "R1731"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_common_absolute_time_granularity_simple",
        "line": 969,
        "column": 12,
        "endLine": 970,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "consider-using-min-builtin",
        "message": "Consider using 'min_gran = min(min_gran, 2)' instead of unnecessary if block",
        "message-id": "R1730"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_common_absolute_time_granularity_simple",
        "line": 971,
        "column": 12,
        "endLine": 972,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "consider-using-max-builtin",
        "message": "Consider using 'max_gran = max(max_gran, 2)' instead of unnecessary if block",
        "message-id": "R1731"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_common_absolute_time_granularity_simple",
        "line": 978,
        "column": 12,
        "endLine": 979,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "consider-using-min-builtin",
        "message": "Consider using 'min_gran = min(min_gran, 3)' instead of unnecessary if block",
        "message-id": "R1730"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_common_absolute_time_granularity_simple",
        "line": 980,
        "column": 12,
        "endLine": 981,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "consider-using-max-builtin",
        "message": "Consider using 'max_gran = max(max_gran, 3)' instead of unnecessary if block",
        "message-id": "R1731"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_common_absolute_time_granularity_simple",
        "line": 987,
        "column": 12,
        "endLine": 988,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "consider-using-min-builtin",
        "message": "Consider using 'min_gran = min(min_gran, 4)' instead of unnecessary if block",
        "message-id": "R1730"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_common_absolute_time_granularity_simple",
        "line": 989,
        "column": 12,
        "endLine": 990,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "consider-using-max-builtin",
        "message": "Consider using 'max_gran = max(max_gran, 4)' instead of unnecessary if block",
        "message-id": "R1731"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_common_absolute_time_granularity_simple",
        "line": 996,
        "column": 12,
        "endLine": 997,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "consider-using-min-builtin",
        "message": "Consider using 'min_gran = min(min_gran, 5)' instead of unnecessary if block",
        "message-id": "R1730"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_common_absolute_time_granularity_simple",
        "line": 998,
        "column": 12,
        "endLine": 999,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "consider-using-max-builtin",
        "message": "Consider using 'max_gran = max(max_gran, 5)' instead of unnecessary if block",
        "message-id": "R1731"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_common_absolute_time_granularity_simple",
        "line": 847,
        "column": 0,
        "endLine": 847,
        "endColumn": 51,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "too-many-return-statements",
        "message": "Too many return statements (7/6)",
        "message-id": "R0911"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_common_absolute_time_granularity_simple",
        "line": 847,
        "column": 0,
        "endLine": 847,
        "endColumn": 51,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (47/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_common_absolute_time_granularity_simple",
        "line": 847,
        "column": 0,
        "endLine": 847,
        "endColumn": 51,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (150/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "compute_common_absolute_time_granularity_simple",
        "line": 847,
        "column": 0,
        "endLine": 847,
        "endColumn": 51,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "gran_singular_unit",
        "line": 1135,
        "column": 8,
        "endLine": 1147,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_granularity",
        "obj": "gran_singular_unit",
        "line": 1140,
        "column": 20,
        "endLine": 1140,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_granularity",
        "obj": "gran_singular_unit",
        "line": 1142,
        "column": 16,
        "endLine": 1145,
        "endColumn": 17,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_granularity",
        "obj": "gran_singular_unit",
        "line": 1142,
        "column": 16,
        "endLine": 1142,
        "endColumn": 17,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_granularity",
        "obj": "gran_singular_unit",
        "line": 1149,
        "column": 14,
        "endLine": 1149,
        "endColumn": 47,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_granularity",
        "obj": "gran_singular_unit",
        "line": 1149,
        "column": 14,
        "endLine": 1149,
        "endColumn": 15,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_granularity",
        "obj": "gran_singular_unit",
        "line": 1134,
        "column": 8,
        "endLine": 1134,
        "endColumn": 14,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'output'",
        "message-id": "W0612"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "gran_plural_unit",
        "line": 1180,
        "column": 8,
        "endLine": 1191,
        "endColumn": 13,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_granularity",
        "obj": "gran_plural_unit",
        "line": 1187,
        "column": 16,
        "endLine": 1190,
        "endColumn": 17,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_granularity",
        "obj": "gran_plural_unit",
        "line": 1187,
        "column": 16,
        "endLine": 1187,
        "endColumn": 17,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_granularity",
        "obj": "gran_plural_unit",
        "line": 1193,
        "column": 14,
        "endLine": 1193,
        "endColumn": 47,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_granularity",
        "obj": "gran_plural_unit",
        "line": 1193,
        "column": 14,
        "endLine": 1193,
        "endColumn": 15,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "gran_plural_unit",
        "line": 1156,
        "column": 0,
        "endLine": 1156,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_granularity",
        "obj": "gran_plural_unit",
        "line": 1179,
        "column": 8,
        "endLine": 1179,
        "endColumn": 14,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'output'",
        "message-id": "W0612"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "gran_to_gran._return",
        "line": 1241,
        "column": 8,
        "endLine": 1247,
        "endColumn": 44,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "gran_to_gran._return",
        "line": 1244,
        "column": 12,
        "endLine": 1247,
        "endColumn": 44,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_granularity",
        "obj": "gran_to_gran",
        "line": 1250,
        "column": 4,
        "endLine": 1270,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_granularity",
        "obj": "gran_to_gran",
        "line": 1266,
        "column": 14,
        "endLine": 1266,
        "endColumn": 72,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_granularity",
        "obj": "gran_to_gran",
        "line": 1266,
        "column": 14,
        "endLine": 1266,
        "endColumn": 15,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_granularity",
        "obj": "gran_to_gran",
        "line": 1269,
        "column": 14,
        "endLine": 1269,
        "endColumn": 47,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_granularity",
        "obj": "gran_to_gran",
        "line": 1269,
        "column": 14,
        "endLine": 1269,
        "endColumn": 15,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_granularity",
        "obj": "gcd_list",
        "line": 1294,
        "column": 13,
        "endLine": 1294,
        "endColumn": 17,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'list'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_granularity",
        "obj": "",
        "line": 23,
        "column": 0,
        "endLine": 23,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"functools.reduce\" should be placed before local imports \"datetime_math.compute_datetime_delta\", \"abstract_map_dataset.AbstractMapDataset\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_granularity",
        "obj": "",
        "line": 24,
        "column": 0,
        "endLine": 24,
        "endColumn": 35,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"collections.OrderedDict\" should be placed before local imports \"datetime_math.compute_datetime_delta\", \"abstract_map_dataset.AbstractMapDataset\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_granularity",
        "obj": "",
        "line": 25,
        "column": 0,
        "endLine": 25,
        "endColumn": 10,
        "path": "python/grass/temporal/temporal_granularity.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"ast\" should be placed before local imports \"datetime_math.compute_datetime_delta\", \"abstract_map_dataset.AbstractMapDataset\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "",
        "line": 119,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "line-too-long",
        "message": "Line too long (126/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "",
        "line": 139,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_operator",
        "obj": "",
        "line": 144,
        "column": 4,
        "endLine": 144,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from ply import lex' instead",
        "message-id": "R0402"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_operator",
        "obj": "",
        "line": 145,
        "column": 4,
        "endLine": 145,
        "endColumn": 27,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from ply import yacc' instead",
        "message-id": "R0402"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorLexer.t_NAME",
        "line": 236,
        "column": 4,
        "endLine": 236,
        "endColumn": 14,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "invalid-name",
        "message": "Method name \"t_NAME\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorLexer.temporal_symbol",
        "line": 241,
        "column": 4,
        "endLine": 241,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorLexer.temporal_symbol",
        "line": 243,
        "column": 22,
        "endLine": 243,
        "endColumn": 60,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorLexer.temporal_symbol",
        "line": 245,
        "column": 13,
        "endLine": 245,
        "endColumn": 48,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 't.value in ('l', 'left')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorLexer.temporal_symbol",
        "line": 248,
        "column": 13,
        "endLine": 248,
        "endColumn": 49,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 't.value in ('r', 'right')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorLexer.temporal_symbol",
        "line": 251,
        "column": 13,
        "endLine": 251,
        "endColumn": 49,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 't.value in ('u', 'union')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorLexer.temporal_symbol",
        "line": 254,
        "column": 13,
        "endLine": 254,
        "endColumn": 52,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 't.value in ('d', 'disjoint')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorLexer.temporal_symbol",
        "line": 257,
        "column": 13,
        "endLine": 257,
        "endColumn": 53,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 't.value in ('i', 'intersect')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorLexer.t_error",
        "line": 265,
        "column": 4,
        "endLine": 265,
        "endColumn": 15,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorLexer.t_error",
        "line": 267,
        "column": 12,
        "endLine": 267,
        "endColumn": 59,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorLexer.build",
        "line": 272,
        "column": 4,
        "endLine": 272,
        "endColumn": 13,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorLexer.test",
        "line": 278,
        "column": 4,
        "endLine": 278,
        "endColumn": 12,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorLexer.build",
        "line": 273,
        "column": 8,
        "endLine": 273,
        "endColumn": 18,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'lexer' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorLexer.test",
        "line": 279,
        "column": 8,
        "endLine": 279,
        "endColumn": 22,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'name_list' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser",
        "line": 292,
        "column": 0,
        "endLine": 292,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (9/7)",
        "message-id": "R0902"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.parse",
        "line": 330,
        "column": 16,
        "endLine": 330,
        "endColumn": 54,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_error",
        "line": 337,
        "column": 4,
        "endLine": 337,
        "endColumn": 15,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_error",
        "line": 339,
        "column": 12,
        "endLine": 340,
        "endColumn": 42,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_relation_operator",
        "line": 354,
        "column": 8,
        "endLine": 365,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1720"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_relation_operator",
        "line": 354,
        "column": 11,
        "endLine": 354,
        "endColumn": 40,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "unnecessary-negation",
        "message": "Consider changing \"not self.optype == 'relation'\" to \"self.optype != 'relation'\"",
        "message-id": "C0117"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_relation_operator",
        "line": 355,
        "column": 30,
        "endLine": 355,
        "endColumn": 68,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_relation_bool_operator",
        "line": 376,
        "column": 8,
        "endLine": 388,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1720"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_relation_bool_operator",
        "line": 376,
        "column": 11,
        "endLine": 376,
        "endColumn": 39,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "unnecessary-negation",
        "message": "Consider changing \"not self.optype == 'boolean'\" to \"self.optype != 'boolean'\"",
        "message-id": "C0117"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_relation_bool_operator",
        "line": 377,
        "column": 30,
        "endLine": 377,
        "endColumn": 67,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_relation_bool_combi_operator",
        "line": 403,
        "column": 8,
        "endLine": 415,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1720"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_relation_bool_combi_operator",
        "line": 403,
        "column": 11,
        "endLine": 403,
        "endColumn": 39,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "unnecessary-negation",
        "message": "Consider changing \"not self.optype == 'boolean'\" to \"self.optype != 'boolean'\"",
        "message-id": "C0117"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_relation_bool_combi_operator",
        "line": 404,
        "column": 30,
        "endLine": 404,
        "endColumn": 67,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_relation_bool_combi_operator2",
        "line": 426,
        "column": 8,
        "endLine": 438,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1720"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_relation_bool_combi_operator2",
        "line": 426,
        "column": 11,
        "endLine": 426,
        "endColumn": 39,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "unnecessary-negation",
        "message": "Consider changing \"not self.optype == 'boolean'\" to \"self.optype != 'boolean'\"",
        "message-id": "C0117"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_relation_bool_combi_operator2",
        "line": 427,
        "column": 30,
        "endLine": 427,
        "endColumn": 67,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_relation_bool_combi_operator3",
        "line": 453,
        "column": 8,
        "endLine": 465,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1720"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_relation_bool_combi_operator3",
        "line": 453,
        "column": 11,
        "endLine": 453,
        "endColumn": 39,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "unnecessary-negation",
        "message": "Consider changing \"not self.optype == 'boolean'\" to \"self.optype != 'boolean'\"",
        "message-id": "C0117"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_relation_bool_combi_operator3",
        "line": 454,
        "column": 30,
        "endLine": 454,
        "endColumn": 68,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_select_relation_operator",
        "line": 479,
        "column": 8,
        "endLine": 501,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1720"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_select_relation_operator",
        "line": 479,
        "column": 11,
        "endLine": 479,
        "endColumn": 38,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "unnecessary-negation",
        "message": "Consider changing \"not self.optype == 'select'\" to \"self.optype != 'select'\"",
        "message-id": "C0117"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_select_relation_operator",
        "line": 480,
        "column": 30,
        "endLine": 480,
        "endColumn": 66,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_hash_relation_operator",
        "line": 515,
        "column": 8,
        "endLine": 537,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1720"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_hash_relation_operator",
        "line": 515,
        "column": 11,
        "endLine": 515,
        "endColumn": 36,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "unnecessary-negation",
        "message": "Consider changing \"not self.optype == 'hash'\" to \"self.optype != 'hash'\"",
        "message-id": "C0117"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_hash_relation_operator",
        "line": 516,
        "column": 30,
        "endLine": 516,
        "endColumn": 64,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_raster_relation_operator",
        "line": 551,
        "column": 8,
        "endLine": 573,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1720"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_raster_relation_operator",
        "line": 551,
        "column": 11,
        "endLine": 551,
        "endColumn": 38,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "unnecessary-negation",
        "message": "Consider changing \"not self.optype == 'raster'\" to \"self.optype != 'raster'\"",
        "message-id": "C0117"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_raster_relation_operator",
        "line": 552,
        "column": 30,
        "endLine": 552,
        "endColumn": 66,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_overlay_relation_operator",
        "line": 587,
        "column": 8,
        "endLine": 609,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1720"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_overlay_relation_operator",
        "line": 587,
        "column": 11,
        "endLine": 587,
        "endColumn": 39,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "unnecessary-negation",
        "message": "Consider changing \"not self.optype == 'overlay'\" to \"self.optype != 'overlay'\"",
        "message-id": "C0117"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.p_overlay_relation_operator",
        "line": 588,
        "column": 30,
        "endLine": 588,
        "endColumn": 67,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.parse",
        "line": 326,
        "column": 8,
        "endLine": 326,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'optype' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_operator",
        "obj": "TemporalOperatorParser.parse",
        "line": 333,
        "column": 8,
        "endLine": 333,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_operator.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'expression' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster3d_algebra",
        "obj": "",
        "line": 15,
        "column": 4,
        "endLine": 15,
        "endColumn": 27,
        "path": "python/grass/temporal/temporal_raster3d_algebra.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from ply import yacc' instead",
        "message-id": "R0402"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster3d_algebra",
        "obj": "TemporalRaster3DAlgebraParser",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 35,
        "path": "python/grass/temporal/temporal_raster3d_algebra.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (11/7)",
        "message-id": "R0902"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster3d_algebra",
        "obj": "TemporalRaster3DAlgebraParser.__init__",
        "line": 30,
        "column": 4,
        "endLine": 30,
        "endColumn": 16,
        "path": "python/grass/temporal/temporal_raster3d_algebra.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster3d_algebra",
        "obj": "TemporalRaster3DAlgebraParser.parse",
        "line": 54,
        "column": 4,
        "endLine": 54,
        "endColumn": 13,
        "path": "python/grass/temporal/temporal_raster3d_algebra.py",
        "symbol": "arguments-differ",
        "message": "Number of parameters was 7 in 'TemporalAlgebraParser.parse' and is now 4 in overriding 'TemporalRaster3DAlgebraParser.parse' method",
        "message-id": "W0221"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster3d_algebra",
        "obj": "TemporalRaster3DAlgebraParser.parse",
        "line": 65,
        "column": 15,
        "endLine": 65,
        "endColumn": 81,
        "path": "python/grass/temporal/temporal_raster3d_algebra.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'tok.type in ('STVDS', 'STRDS', 'STR3DS')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster3d_algebra",
        "obj": "TemporalRaster3DAlgebraParser.parse",
        "line": 66,
        "column": 34,
        "endLine": 66,
        "endColumn": 58,
        "path": "python/grass/temporal/temporal_raster3d_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster3d_algebra",
        "obj": "TemporalRaster3DAlgebraParser.p_ts_neighbor_operation",
        "line": 90,
        "column": 4,
        "endLine": 90,
        "endColumn": 31,
        "path": "python/grass/temporal/temporal_raster3d_algebra.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster3d_algebra",
        "obj": "TemporalRaster3DAlgebraParser.p_ts_neighbor_operation",
        "line": 124,
        "column": 19,
        "endLine": 124,
        "endColumn": 59,
        "path": "python/grass/temporal/temporal_raster3d_algebra.py",
        "symbol": "chained-comparison",
        "message": "Simplify chained comparison between the operands",
        "message-id": "R1716"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster3d_algebra",
        "obj": "TemporalRaster3DAlgebraParser.p_ts_neighbor_operation",
        "line": 133,
        "column": 36,
        "endLine": 133,
        "endColumn": 40,
        "path": "python/grass/temporal/temporal_raster3d_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster3d_algebra",
        "obj": "TemporalRaster3DAlgebraParser.p_ts_neighbor_operation",
        "line": 135,
        "column": 36,
        "endLine": 135,
        "endColumn": 40,
        "path": "python/grass/temporal/temporal_raster3d_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster3d_algebra",
        "obj": "TemporalRaster3DAlgebraParser.p_ts_neighbor_operation",
        "line": 137,
        "column": 36,
        "endLine": 137,
        "endColumn": 50,
        "path": "python/grass/temporal/temporal_raster3d_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster3d_algebra",
        "obj": "TemporalRaster3DAlgebraParser.p_ts_neighbor_operation",
        "line": 144,
        "column": 36,
        "endLine": 144,
        "endColumn": 50,
        "path": "python/grass/temporal/temporal_raster3d_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_raster3d_algebra",
        "obj": "TemporalRaster3DAlgebraParser.p_ts_neighbor_operation",
        "line": 151,
        "column": 39,
        "endLine": 151,
        "endColumn": 48,
        "path": "python/grass/temporal/temporal_raster3d_algebra.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'cmdstring' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster3d_algebra",
        "obj": "TemporalRaster3DAlgebraParser.parse",
        "line": 68,
        "column": 8,
        "endLine": 68,
        "endColumn": 18,
        "path": "python/grass/temporal/temporal_raster3d_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'lexer' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster3d_algebra",
        "obj": "TemporalRaster3DAlgebraParser.parse",
        "line": 70,
        "column": 8,
        "endLine": 70,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster3d_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'parser' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster3d_algebra",
        "obj": "TemporalRaster3DAlgebraParser.parse",
        "line": 72,
        "column": 8,
        "endLine": 72,
        "endColumn": 22,
        "path": "python/grass/temporal/temporal_raster3d_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'overwrite' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster3d_algebra",
        "obj": "TemporalRaster3DAlgebraParser.parse",
        "line": 73,
        "column": 8,
        "endLine": 73,
        "endColumn": 18,
        "path": "python/grass/temporal/temporal_raster3d_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'count' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster3d_algebra",
        "obj": "TemporalRaster3DAlgebraParser.parse",
        "line": 74,
        "column": 8,
        "endLine": 74,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_raster3d_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'stdstype' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster3d_algebra",
        "obj": "TemporalRaster3DAlgebraParser.parse",
        "line": 75,
        "column": 8,
        "endLine": 75,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_raster3d_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'maptype' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster3d_algebra",
        "obj": "TemporalRaster3DAlgebraParser.parse",
        "line": 76,
        "column": 8,
        "endLine": 76,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_raster3d_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'mapclass' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster3d_algebra",
        "obj": "TemporalRaster3DAlgebraParser.parse",
        "line": 77,
        "column": 8,
        "endLine": 77,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_raster3d_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'basename' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster3d_algebra",
        "obj": "TemporalRaster3DAlgebraParser.parse",
        "line": 78,
        "column": 8,
        "endLine": 78,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_raster3d_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'expression' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster3d_algebra",
        "obj": "",
        "line": 23,
        "column": 0,
        "endLine": 23,
        "endColumn": 37,
        "path": "python/grass/temporal/temporal_raster3d_algebra.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.pygrass.modules\" should be placed before local import \"temporal_raster_base_algebra.TemporalRasterBaseAlgebraParser\"",
        "message-id": "C0411"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_algebra",
        "obj": "",
        "line": 56,
        "column": 4,
        "endLine": 56,
        "endColumn": 27,
        "path": "python/grass/temporal/temporal_raster_algebra.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from ply import yacc' instead",
        "message-id": "R0402"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_algebra",
        "obj": "TemporalRasterAlgebraParser",
        "line": 68,
        "column": 0,
        "endLine": 68,
        "endColumn": 33,
        "path": "python/grass/temporal/temporal_raster_algebra.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (11/7)",
        "message-id": "R0902"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_algebra",
        "obj": "TemporalRasterAlgebraParser.__init__",
        "line": 71,
        "column": 4,
        "endLine": 71,
        "endColumn": 16,
        "path": "python/grass/temporal/temporal_raster_algebra.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_algebra",
        "obj": "TemporalRasterAlgebraParser.parse",
        "line": 100,
        "column": 4,
        "endLine": 100,
        "endColumn": 13,
        "path": "python/grass/temporal/temporal_raster_algebra.py",
        "symbol": "arguments-differ",
        "message": "Number of parameters was 7 in 'TemporalAlgebraParser.parse' and is now 4 in overriding 'TemporalRasterAlgebraParser.parse' method",
        "message-id": "W0221"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_algebra",
        "obj": "TemporalRasterAlgebraParser.parse",
        "line": 111,
        "column": 15,
        "endLine": 111,
        "endColumn": 81,
        "path": "python/grass/temporal/temporal_raster_algebra.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'tok.type in ('STVDS', 'STRDS', 'STR3DS')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_algebra",
        "obj": "TemporalRasterAlgebraParser.parse",
        "line": 112,
        "column": 34,
        "endLine": 112,
        "endColumn": 58,
        "path": "python/grass/temporal/temporal_raster_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_raster_algebra",
        "obj": "TemporalRasterAlgebraParser.p_ts_neighbour_operation",
        "line": 167,
        "column": 40,
        "endLine": 167,
        "endColumn": 51,
        "path": "python/grass/temporal/temporal_raster_algebra.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 't_neighbour' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_algebra",
        "obj": "TemporalRasterAlgebraParser.p_ts_neighbour_operation",
        "line": 168,
        "column": 19,
        "endLine": 168,
        "endColumn": 59,
        "path": "python/grass/temporal/temporal_raster_algebra.py",
        "symbol": "chained-comparison",
        "message": "Simplify chained comparison between the operands",
        "message-id": "R1716"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_algebra",
        "obj": "TemporalRasterAlgebraParser.p_ts_neighbour_operation",
        "line": 177,
        "column": 36,
        "endLine": 177,
        "endColumn": 40,
        "path": "python/grass/temporal/temporal_raster_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_algebra",
        "obj": "TemporalRasterAlgebraParser.p_ts_neighbour_operation",
        "line": 179,
        "column": 36,
        "endLine": 179,
        "endColumn": 40,
        "path": "python/grass/temporal/temporal_raster_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_algebra",
        "obj": "TemporalRasterAlgebraParser.p_ts_neighbour_operation",
        "line": 181,
        "column": 36,
        "endLine": 181,
        "endColumn": 47,
        "path": "python/grass/temporal/temporal_raster_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_algebra",
        "obj": "TemporalRasterAlgebraParser.p_ts_neighbour_operation",
        "line": 187,
        "column": 36,
        "endLine": 187,
        "endColumn": 47,
        "path": "python/grass/temporal/temporal_raster_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_raster_algebra",
        "obj": "TemporalRasterAlgebraParser.p_ts_neighbour_operation",
        "line": 193,
        "column": 39,
        "endLine": 193,
        "endColumn": 48,
        "path": "python/grass/temporal/temporal_raster_algebra.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'cmdstring' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_algebra",
        "obj": "TemporalRasterAlgebraParser.parse",
        "line": 114,
        "column": 8,
        "endLine": 114,
        "endColumn": 18,
        "path": "python/grass/temporal/temporal_raster_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'lexer' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_algebra",
        "obj": "TemporalRasterAlgebraParser.parse",
        "line": 116,
        "column": 8,
        "endLine": 116,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'parser' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_algebra",
        "obj": "TemporalRasterAlgebraParser.parse",
        "line": 118,
        "column": 8,
        "endLine": 118,
        "endColumn": 22,
        "path": "python/grass/temporal/temporal_raster_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'overwrite' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_algebra",
        "obj": "TemporalRasterAlgebraParser.parse",
        "line": 119,
        "column": 8,
        "endLine": 119,
        "endColumn": 18,
        "path": "python/grass/temporal/temporal_raster_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'count' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_algebra",
        "obj": "TemporalRasterAlgebraParser.parse",
        "line": 120,
        "column": 8,
        "endLine": 120,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_raster_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'stdstype' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_algebra",
        "obj": "TemporalRasterAlgebraParser.parse",
        "line": 121,
        "column": 8,
        "endLine": 121,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_raster_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'maptype' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_algebra",
        "obj": "TemporalRasterAlgebraParser.parse",
        "line": 122,
        "column": 8,
        "endLine": 122,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_raster_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'mapclass' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_algebra",
        "obj": "TemporalRasterAlgebraParser.parse",
        "line": 123,
        "column": 8,
        "endLine": 123,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_raster_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'basename' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_algebra",
        "obj": "TemporalRasterAlgebraParser.parse",
        "line": 124,
        "column": 8,
        "endLine": 124,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_raster_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'expression' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_algebra",
        "obj": "",
        "line": 64,
        "column": 0,
        "endLine": 64,
        "endColumn": 37,
        "path": "python/grass/temporal/temporal_raster_algebra.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.pygrass.modules\" should be placed before local import \"temporal_raster_base_algebra.TemporalRasterBaseAlgebraParser\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "",
        "line": 122,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "line-too-long",
        "message": "Line too long (123/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "",
        "line": 1894,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "",
        "line": 1896,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "",
        "line": 1898,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "",
        "line": 1900,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "",
        "line": 1902,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "",
        "line": 1904,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "",
        "line": 1906,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "",
        "line": 1908,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (2064/1000)",
        "message-id": "C0302"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterAlgebraLexer.temporal_symbol",
        "line": 132,
        "column": 22,
        "endLine": 132,
        "endColumn": 70,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterAlgebraLexer.temporal_symbol",
        "line": 134,
        "column": 24,
        "endLine": 134,
        "endColumn": 76,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterAlgebraLexer.temporal_symbol",
        "line": 136,
        "column": 24,
        "endLine": 136,
        "endColumn": 79,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterAlgebraLexer.temporal_symbol",
        "line": 138,
        "column": 24,
        "endLine": 138,
        "endColumn": 75,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterAlgebraLexer.temporal_symbol",
        "line": 140,
        "column": 24,
        "endLine": 140,
        "endColumn": 71,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.__init__",
        "line": 169,
        "column": 4,
        "endLine": 169,
        "endColumn": 16,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.check_null",
        "line": 192,
        "column": 4,
        "endLine": 192,
        "endColumn": 18,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.build_spatio_temporal_topology_list",
        "line": 199,
        "column": 4,
        "endLine": 199,
        "endColumn": 43,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "dangerous-default-value",
        "message": "Dangerous default value [] as argument",
        "message-id": "W0102"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.build_spatio_temporal_topology_list",
        "line": 199,
        "column": 4,
        "endLine": 199,
        "endColumn": 43,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "arguments-renamed",
        "message": "Parameter 'compop' has been renamed to 'compare_cmd' in overriding 'TemporalRasterBaseAlgebraParser.build_spatio_temporal_topology_list' method",
        "message-id": "W0237"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.build_spatio_temporal_topology_list",
        "line": 199,
        "column": 4,
        "endLine": 199,
        "endColumn": 43,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "arguments-renamed",
        "message": "Parameter 'aggregate' has been renamed to 'compop' in overriding 'TemporalRasterBaseAlgebraParser.build_spatio_temporal_topology_list' method",
        "message-id": "W0237"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.build_spatio_temporal_topology_list",
        "line": 199,
        "column": 4,
        "endLine": 199,
        "endColumn": 43,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (13/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.build_spatio_temporal_topology_list",
        "line": 199,
        "column": 4,
        "endLine": 199,
        "endColumn": 43,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (25/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.build_spatio_temporal_topology_list",
        "line": 199,
        "column": 4,
        "endLine": 199,
        "endColumn": 43,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (14/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.build_spatio_temporal_topology_list",
        "line": 306,
        "column": 8,
        "endLine": 349,
        "endColumn": 53,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.build_command_string.sub_cmdstring",
        "line": 390,
        "column": 16,
        "endLine": 391,
        "endColumn": 35,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.build_command_string",
        "line": 400,
        "column": 24,
        "endLine": 400,
        "endColumn": 36,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.build_command_string",
        "line": 404,
        "column": 24,
        "endLine": 404,
        "endColumn": 32,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.build_command_string",
        "line": 410,
        "column": 20,
        "endLine": 410,
        "endColumn": 87,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.build_command_string",
        "line": 413,
        "column": 24,
        "endLine": 413,
        "endColumn": 36,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.compare_cmd_value",
        "line": 416,
        "column": 4,
        "endLine": 416,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "dangerous-default-value",
        "message": "Dangerous default value [] as argument",
        "message-id": "W0102"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.compare_cmd_value",
        "line": 416,
        "column": 4,
        "endLine": 416,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "dangerous-default-value",
        "message": "Dangerous default value [] as argument",
        "message-id": "W0102"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.compare_cmd_value",
        "line": 416,
        "column": 4,
        "endLine": 416,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.compare_cmd_value",
        "line": 416,
        "column": 4,
        "endLine": 416,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.compare_cmd_value",
        "line": 461,
        "column": 8,
        "endLine": 489,
        "endColumn": 29,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.compare_cmd_value",
        "line": 461,
        "column": 8,
        "endLine": 489,
        "endColumn": 29,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.compare_cmd_value",
        "line": 416,
        "column": 4,
        "endLine": 416,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (15/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.compare_cmd_value",
        "line": 416,
        "column": 4,
        "endLine": 416,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.operator_cmd_value",
        "line": 500,
        "column": 4,
        "endLine": 500,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "dangerous-default-value",
        "message": "Dangerous default value [] as argument",
        "message-id": "W0102"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.operator_cmd_value",
        "line": 500,
        "column": 4,
        "endLine": 500,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "dangerous-default-value",
        "message": "Dangerous default value [] as argument",
        "message-id": "W0102"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.operator_cmd_value",
        "line": 515,
        "column": 8,
        "endLine": 515,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'spatial_relations'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.set_temporal_extent_list",
        "line": 550,
        "column": 4,
        "endLine": 550,
        "endColumn": 32,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "dangerous-default-value",
        "message": "Dangerous default value [] as argument",
        "message-id": "W0102"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.set_temporal_extent_list",
        "line": 550,
        "column": 4,
        "endLine": 550,
        "endColumn": 32,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.set_temporal_extent_list",
        "line": 550,
        "column": 4,
        "endLine": 550,
        "endColumn": 32,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (18/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.set_temporal_extent_list",
        "line": 612,
        "column": 28,
        "endLine": 630,
        "endColumn": 65,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "no-else-break",
        "message": "Unnecessary \"elif\" after \"break\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1723"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.set_temporal_extent_list",
        "line": 578,
        "column": 8,
        "endLine": 632,
        "endColumn": 29,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (7/5)",
        "message-id": "R1702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.set_temporal_extent_list",
        "line": 576,
        "column": 8,
        "endLine": 576,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'temporal_topo_list'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.build_condition_cmd_list",
        "line": 642,
        "column": 4,
        "endLine": 642,
        "endColumn": 32,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "dangerous-default-value",
        "message": "Dangerous default value [] as argument",
        "message-id": "W0102"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.build_condition_cmd_list",
        "line": 642,
        "column": 4,
        "endLine": 642,
        "endColumn": 32,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "dangerous-default-value",
        "message": "Dangerous default value [] as argument",
        "message-id": "W0102"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.build_condition_cmd_list",
        "line": 642,
        "column": 4,
        "endLine": 642,
        "endColumn": 32,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.build_condition_cmd_list",
        "line": 642,
        "column": 4,
        "endLine": 642,
        "endColumn": 32,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.build_condition_cmd_list",
        "line": 722,
        "column": 8,
        "endLine": 748,
        "endColumn": 29,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.build_condition_cmd_list",
        "line": 642,
        "column": 4,
        "endLine": 642,
        "endColumn": 32,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.build_condition_cmd_list",
        "line": 650,
        "column": 8,
        "endLine": 650,
        "endColumn": 12,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'null'",
        "message-id": "W0613"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_statement_assign",
        "line": 750,
        "column": 4,
        "endLine": 750,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (22/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_statement_assign",
        "line": 790,
        "column": 35,
        "endLine": 790,
        "endColumn": 46,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_statement_assign",
        "line": 798,
        "column": 35,
        "endLine": 798,
        "endColumn": 46,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_statement_assign",
        "line": 809,
        "column": 28,
        "endLine": 810,
        "endColumn": 69,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_statement_assign",
        "line": 831,
        "column": 35,
        "endLine": 831,
        "endColumn": 46,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_statement_assign",
        "line": 839,
        "column": 35,
        "endLine": 839,
        "endColumn": 46,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_statement_assign",
        "line": 851,
        "column": 42,
        "endLine": 851,
        "endColumn": 56,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "no-member",
        "message": "Instance of 'TemporalRasterBaseAlgebraParser' has no 'm_mapcalc' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_statement_assign",
        "line": 869,
        "column": 42,
        "endLine": 869,
        "endColumn": 56,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "no-member",
        "message": "Instance of 'TemporalRasterBaseAlgebraParser' has no 'm_mapcalc' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_statement_assign",
        "line": 881,
        "column": 40,
        "endLine": 881,
        "endColumn": 86,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_statement_assign",
        "line": 881,
        "column": 40,
        "endLine": 881,
        "endColumn": 41,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_statement_assign",
        "line": 881,
        "column": 42,
        "endLine": 881,
        "endColumn": 68,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_statement_assign",
        "line": 756,
        "column": 8,
        "endLine": 953,
        "endColumn": 34,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_statement_assign",
        "line": 932,
        "column": 28,
        "endLine": 933,
        "endColumn": 49,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_statement_assign",
        "line": 750,
        "column": 4,
        "endLine": 750,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (34/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_statement_assign",
        "line": 750,
        "column": 4,
        "endLine": 750,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (99/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_statement_assign",
        "line": 891,
        "column": 22,
        "endLine": 891,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'unused'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_statement_assign",
        "line": 941,
        "column": 24,
        "endLine": 941,
        "endColumn": 31,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'success'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_expr_spmap_function",
        "line": 966,
        "column": 12,
        "endLine": 966,
        "endColumn": 17,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'input'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_expr_spmap_function",
        "line": 976,
        "column": 16,
        "endLine": 986,
        "endColumn": 46,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1720"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_expr_spmap_function",
        "line": 978,
        "column": 24,
        "endLine": 978,
        "endColumn": 76,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_expr_spmap_function",
        "line": 978,
        "column": 24,
        "endLine": 978,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_expr_spmap_function",
        "line": 985,
        "column": 32,
        "endLine": 985,
        "endColumn": 38,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith1_operation",
        "line": 1067,
        "column": 16,
        "endLine": 1067,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith1_operation",
        "line": 1023,
        "column": 8,
        "endLine": 1023,
        "endColumn": 16,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"maplistA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith1_operation",
        "line": 1024,
        "column": 8,
        "endLine": 1024,
        "endColumn": 16,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"maplistB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith1_operation",
        "line": 1048,
        "column": 24,
        "endLine": 1048,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'name'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith1_operation_numeric1",
        "line": 1117,
        "column": 16,
        "endLine": 1117,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith1_operation_numeric1",
        "line": 1106,
        "column": 32,
        "endLine": 1106,
        "endColumn": 44,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith1_operation_numeric1",
        "line": 1108,
        "column": 32,
        "endLine": 1108,
        "endColumn": 44,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith1_operation_numeric2",
        "line": 1167,
        "column": 16,
        "endLine": 1167,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith1_operation_numeric2",
        "line": 1156,
        "column": 32,
        "endLine": 1156,
        "endColumn": 44,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith1_operation_numeric2",
        "line": 1158,
        "column": 32,
        "endLine": 1158,
        "endColumn": 44,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith2_operation",
        "line": 1236,
        "column": 16,
        "endLine": 1236,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith2_operation",
        "line": 1191,
        "column": 8,
        "endLine": 1191,
        "endColumn": 16,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"maplistA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith2_operation",
        "line": 1192,
        "column": 8,
        "endLine": 1192,
        "endColumn": 16,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"maplistB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith2_operation",
        "line": 1216,
        "column": 24,
        "endLine": 1216,
        "endColumn": 28,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'name'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith2_operation_numeric1",
        "line": 1278,
        "column": 16,
        "endLine": 1278,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith2_operation_numeric1",
        "line": 1267,
        "column": 32,
        "endLine": 1267,
        "endColumn": 44,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith2_operation_numeric1",
        "line": 1269,
        "column": 32,
        "endLine": 1269,
        "endColumn": 44,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith2_operation_numeric2",
        "line": 1320,
        "column": 16,
        "endLine": 1320,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith2_operation_numeric2",
        "line": 1309,
        "column": 32,
        "endLine": 1309,
        "endColumn": 44,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith2_operation_numeric2",
        "line": 1311,
        "column": 32,
        "endLine": 1311,
        "endColumn": 44,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith1_operation_relation",
        "line": 1359,
        "column": 16,
        "endLine": 1359,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith1_operation_relation",
        "line": 1338,
        "column": 12,
        "endLine": 1338,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"maplistA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith1_operation_relation",
        "line": 1339,
        "column": 12,
        "endLine": 1339,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"maplistB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith1_operation_relation",
        "line": 1356,
        "column": 15,
        "endLine": 1356,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'resultlist' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith1_operation_relation",
        "line": 1340,
        "column": 43,
        "endLine": 1340,
        "endColumn": 52,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'aggregate'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith2_operation_relation",
        "line": 1398,
        "column": 16,
        "endLine": 1398,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith2_operation_relation",
        "line": 1377,
        "column": 12,
        "endLine": 1377,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"maplistA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith2_operation_relation",
        "line": 1378,
        "column": 12,
        "endLine": 1378,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"maplistB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith2_operation_relation",
        "line": 1395,
        "column": 15,
        "endLine": 1395,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'resultlist' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith2_operation_relation",
        "line": 1379,
        "column": 43,
        "endLine": 1379,
        "endColumn": 52,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'aggregate'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_arith_operation_numeric_string",
        "line": 1414,
        "column": 20,
        "endLine": 1414,
        "endColumn": 32,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_mapcalc_operation1",
        "line": 1468,
        "column": 16,
        "endLine": 1468,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_mapcalc_operation1",
        "line": 1457,
        "column": 32,
        "endLine": 1457,
        "endColumn": 40,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_mapcalc_operation1",
        "line": 1459,
        "column": 32,
        "endLine": 1459,
        "endColumn": 40,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_mapexpr_operation",
        "line": 1480,
        "column": 24,
        "endLine": 1480,
        "endColumn": 32,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_var_expr_1",
        "line": 1512,
        "column": 16,
        "endLine": 1512,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_var_expr_1",
        "line": 1501,
        "column": 32,
        "endLine": 1501,
        "endColumn": 40,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_var_expr_1",
        "line": 1503,
        "column": 32,
        "endLine": 1503,
        "endColumn": 40,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_var_expr_2",
        "line": 1540,
        "column": 16,
        "endLine": 1540,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_var_expr_2",
        "line": 1529,
        "column": 32,
        "endLine": 1529,
        "endColumn": 45,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_var_expr_2",
        "line": 1531,
        "column": 32,
        "endLine": 1531,
        "endColumn": 45,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_var_expr_3",
        "line": 1568,
        "column": 16,
        "endLine": 1568,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_var_expr_3",
        "line": 1557,
        "column": 32,
        "endLine": 1557,
        "endColumn": 42,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_var_expr_3",
        "line": 1559,
        "column": 32,
        "endLine": 1559,
        "endColumn": 42,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_var_expr_4",
        "line": 1596,
        "column": 16,
        "endLine": 1596,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_var_expr_4",
        "line": 1585,
        "column": 32,
        "endLine": 1585,
        "endColumn": 36,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_var_expr_4",
        "line": 1587,
        "column": 32,
        "endLine": 1587,
        "endColumn": 36,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_var_expr_comp",
        "line": 1631,
        "column": 16,
        "endLine": 1631,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_var_expr_comp",
        "line": 1608,
        "column": 12,
        "endLine": 1608,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s_var_exprA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_var_expr_comp",
        "line": 1609,
        "column": 12,
        "endLine": 1609,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s_var_exprB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_var_expr_comp_op",
        "line": 1665,
        "column": 16,
        "endLine": 1665,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_var_expr_comp_op",
        "line": 1642,
        "column": 12,
        "endLine": 1642,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s_var_exprA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_var_expr_comp_op",
        "line": 1643,
        "column": 12,
        "endLine": 1643,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s_var_exprB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_expr_condition_if",
        "line": 1691,
        "column": 16,
        "endLine": 1691,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_numeric_condition_if",
        "line": 1722,
        "column": 16,
        "endLine": 1722,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_numeric_condition_if",
        "line": 1713,
        "column": 57,
        "endLine": 1713,
        "endColumn": 65,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'numinput' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_expr_condition_if_relation",
        "line": 1750,
        "column": 16,
        "endLine": 1750,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_expr_condition_if_relation",
        "line": 1733,
        "column": 19,
        "endLine": 1733,
        "endColumn": 27,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'temporal'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_expr_condition_if_relation",
        "line": 1733,
        "column": 29,
        "endLine": 1733,
        "endColumn": 37,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'function'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_expr_condition_if_relation",
        "line": 1733,
        "column": 39,
        "endLine": 1733,
        "endColumn": 50,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'aggregation'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_expr_condition_elif",
        "line": 1783,
        "column": 16,
        "endLine": 1783,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_numeric_condition_elif",
        "line": 1831,
        "column": 16,
        "endLine": 1831,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_numeric_condition_elif",
        "line": 1813,
        "column": 22,
        "endLine": 1813,
        "endColumn": 29,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "used-before-assignment",
        "message": "Using variable 'numthen' before assignment",
        "message-id": "E0601"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_numeric_condition_elif",
        "line": 1814,
        "column": 22,
        "endLine": 1814,
        "endColumn": 29,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "used-before-assignment",
        "message": "Using variable 'numelse' before assignment",
        "message-id": "E0601"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_numeric_expr_condition_elif",
        "line": 1886,
        "column": 16,
        "endLine": 1886,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_numeric_expr_condition_elif",
        "line": 1875,
        "column": 12,
        "endLine": 1875,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "used-before-assignment",
        "message": "Using variable 'theninput' before assignment",
        "message-id": "E0601"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_numeric_expr_condition_elif",
        "line": 1876,
        "column": 12,
        "endLine": 1876,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "used-before-assignment",
        "message": "Using variable 'elseinput' before assignment",
        "message-id": "E0601"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_numeric_expr_condition_elif_relation",
        "line": 1944,
        "column": 16,
        "endLine": 1944,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_numeric_expr_condition_elif_relation",
        "line": 1933,
        "column": 12,
        "endLine": 1933,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "used-before-assignment",
        "message": "Using variable 'theninput' before assignment",
        "message-id": "E0601"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_numeric_expr_condition_elif_relation",
        "line": 1934,
        "column": 12,
        "endLine": 1934,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "used-before-assignment",
        "message": "Using variable 'elseinput' before assignment",
        "message-id": "E0601"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_numeric_expr_condition_elif_relation",
        "line": 1910,
        "column": 19,
        "endLine": 1910,
        "endColumn": 27,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'temporal'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_numeric_expr_condition_elif_relation",
        "line": 1910,
        "column": 29,
        "endLine": 1910,
        "endColumn": 37,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'function'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_numeric_expr_condition_elif_relation",
        "line": 1910,
        "column": 39,
        "endLine": 1910,
        "endColumn": 50,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'aggregation'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_expr_condition_elif_relation",
        "line": 1980,
        "column": 16,
        "endLine": 1980,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_expr_condition_elif_relation",
        "line": 1959,
        "column": 19,
        "endLine": 1959,
        "endColumn": 27,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'temporal'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_expr_condition_elif_relation",
        "line": 1959,
        "column": 29,
        "endLine": 1959,
        "endColumn": 37,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'function'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_s_expr_condition_elif_relation",
        "line": 1959,
        "column": 39,
        "endLine": 1959,
        "endColumn": 50,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'aggregation'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_ts_var_expr1",
        "line": 2006,
        "column": 12,
        "endLine": 2006,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s_var_exprA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_ts_var_expr1",
        "line": 2007,
        "column": 12,
        "endLine": 2007,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s_var_exprB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_ts_var_expr1",
        "line": 2027,
        "column": 15,
        "endLine": 2027,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'resultlist' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_hash_operation",
        "line": 2057,
        "column": 16,
        "endLine": 2057,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_hash_operation",
        "line": 2048,
        "column": 28,
        "endLine": 2048,
        "endColumn": 34,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_hash_operation",
        "line": 2048,
        "column": 38,
        "endLine": 2048,
        "endColumn": 44,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'n_maps' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser.p_hash_operation",
        "line": 2046,
        "column": 16,
        "endLine": 2046,
        "endColumn": 24,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'mapinput'",
        "message-id": "W0612"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_raster_base_algebra",
        "obj": "TemporalRasterBaseAlgebraParser",
        "line": 147,
        "column": 0,
        "endLine": 147,
        "endColumn": 37,
        "path": "python/grass/temporal/temporal_raster_base_algebra.py",
        "symbol": "too-many-public-methods",
        "message": "Too many public methods (37/20)",
        "message-id": "R0904"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "",
        "line": 510,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.get_number_of_temporal_relations",
        "line": 163,
        "column": 8,
        "endLine": 164,
        "endColumn": 34,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.get_number_of_temporal_relations",
        "line": 167,
        "column": 8,
        "endLine": 168,
        "endColumn": 36,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.get_number_of_temporal_relations",
        "line": 171,
        "column": 8,
        "endLine": 172,
        "endColumn": 37,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.get_number_of_temporal_relations",
        "line": 175,
        "column": 8,
        "endLine": 176,
        "endColumn": 37,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.get_number_of_temporal_relations",
        "line": 179,
        "column": 8,
        "endLine": 180,
        "endColumn": 39,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.get_number_of_temporal_relations",
        "line": 183,
        "column": 8,
        "endLine": 184,
        "endColumn": 35,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.get_number_of_temporal_relations",
        "line": 187,
        "column": 8,
        "endLine": 188,
        "endColumn": 37,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.get_number_of_temporal_relations",
        "line": 191,
        "column": 8,
        "endLine": 192,
        "endColumn": 35,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.get_number_of_temporal_relations",
        "line": 195,
        "column": 8,
        "endLine": 196,
        "endColumn": 36,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.get_number_of_temporal_relations",
        "line": 199,
        "column": 8,
        "endLine": 200,
        "endColumn": 37,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.get_number_of_temporal_relations",
        "line": 203,
        "column": 8,
        "endLine": 204,
        "endColumn": 37,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.set_next",
        "line": 220,
        "column": 23,
        "endLine": 220,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.set_prev",
        "line": 232,
        "column": 23,
        "endLine": 232,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.append_equal",
        "line": 264,
        "column": 27,
        "endLine": 264,
        "endColumn": 30,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.append_starts",
        "line": 284,
        "column": 28,
        "endLine": 284,
        "endColumn": 31,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.append_started",
        "line": 303,
        "column": 29,
        "endLine": 303,
        "endColumn": 32,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.append_finishes",
        "line": 322,
        "column": 30,
        "endLine": 322,
        "endColumn": 33,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.append_finished",
        "line": 341,
        "column": 30,
        "endLine": 341,
        "endColumn": 33,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.append_overlaps",
        "line": 360,
        "column": 30,
        "endLine": 360,
        "endColumn": 33,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.append_overlapped",
        "line": 379,
        "column": 32,
        "endLine": 379,
        "endColumn": 35,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.append_follows",
        "line": 398,
        "column": 29,
        "endLine": 398,
        "endColumn": 32,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.append_precedes",
        "line": 417,
        "column": 30,
        "endLine": 417,
        "endColumn": 33,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.append_during",
        "line": 436,
        "column": 28,
        "endLine": 436,
        "endColumn": 31,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.append_contains",
        "line": 457,
        "column": 30,
        "endLine": 457,
        "endColumn": 33,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector._generate_map_list_string",
        "line": 488,
        "column": 26,
        "endLine": 488,
        "endColumn": 31,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.print_temporal_topology_info",
        "line": 506,
        "column": 4,
        "endLine": 506,
        "endColumn": 36,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (13/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.print_temporal_topology_shell_info",
        "line": 573,
        "column": 4,
        "endLine": 573,
        "endColumn": 42,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (13/12)",
        "message-id": "R0912"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.set_temporal_topology_build_true",
        "line": 210,
        "column": 8,
        "endLine": 210,
        "endColumn": 35,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute '_has_temporal_topology' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector.set_temporal_topology_build_false",
        "line": 214,
        "column": 8,
        "endLine": 214,
        "endColumn": 35,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute '_has_temporal_topology' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_topology_dataset_connector",
        "obj": "TemporalTopologyDatasetConnector",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 38,
        "path": "python/grass/temporal/temporal_topology_dataset_connector.py",
        "symbol": "too-many-public-methods",
        "message": "Too many public methods (34/20)",
        "message-id": "R0904"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "",
        "line": 98,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "line-too-long",
        "message": "Line too long (126/100)",
        "message-id": "C0301"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "",
        "line": 46,
        "column": 4,
        "endLine": 46,
        "endColumn": 27,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from ply import yacc' instead",
        "message-id": "R0402"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraLexer.temporal_symbol",
        "line": 103,
        "column": 22,
        "endLine": 103,
        "endColumn": 70,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraLexer.temporal_symbol",
        "line": 105,
        "column": 24,
        "endLine": 105,
        "endColumn": 76,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraLexer.temporal_symbol",
        "line": 107,
        "column": 24,
        "endLine": 107,
        "endColumn": 79,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraLexer.temporal_symbol",
        "line": 109,
        "column": 24,
        "endLine": 109,
        "endColumn": 79,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser",
        "line": 116,
        "column": 0,
        "endLine": 116,
        "endColumn": 33,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (14/7)",
        "message-id": "R0902"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.parse",
        "line": 153,
        "column": 4,
        "endLine": 153,
        "endColumn": 13,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "arguments-differ",
        "message": "Number of parameters was 7 in 'TemporalAlgebraParser.parse' and is now 4 in overriding 'TemporalVectorAlgebraParser.parse' method",
        "message-id": "W0221"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.parse",
        "line": 164,
        "column": 15,
        "endLine": 164,
        "endColumn": 81,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'tok.type in ('STVDS', 'STRDS', 'STR3DS')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.parse",
        "line": 165,
        "column": 34,
        "endLine": 165,
        "endColumn": 58,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.build_spatio_temporal_topology_list",
        "line": 180,
        "column": 4,
        "endLine": 180,
        "endColumn": 43,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "dangerous-default-value",
        "message": "Dangerous default value [] as argument",
        "message-id": "W0102"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.build_spatio_temporal_topology_list",
        "line": 180,
        "column": 4,
        "endLine": 180,
        "endColumn": 43,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "arguments-renamed",
        "message": "Parameter 'compop' has been renamed to 'compare_cmd' in overriding 'TemporalVectorAlgebraParser.build_spatio_temporal_topology_list' method",
        "message-id": "W0237"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.build_spatio_temporal_topology_list",
        "line": 180,
        "column": 4,
        "endLine": 180,
        "endColumn": 43,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "arguments-renamed",
        "message": "Parameter 'aggregate' has been renamed to 'compop' in overriding 'TemporalVectorAlgebraParser.build_spatio_temporal_topology_list' method",
        "message-id": "W0237"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.build_spatio_temporal_topology_list",
        "line": 180,
        "column": 4,
        "endLine": 180,
        "endColumn": 43,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (13/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.build_spatio_temporal_topology_list",
        "line": 180,
        "column": 4,
        "endLine": 180,
        "endColumn": 43,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (24/15)",
        "message-id": "R0914"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.build_spatio_temporal_topology_list",
        "line": 272,
        "column": 16,
        "endLine": 272,
        "endColumn": 38,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "no-member",
        "message": "Instance of 'TemporalVectorAlgebraParser' has no 'compare_cmd_value' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.build_spatio_temporal_topology_list",
        "line": 180,
        "column": 4,
        "endLine": 180,
        "endColumn": 43,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (14/12)",
        "message-id": "R0912"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.build_spatio_temporal_topology_list",
        "line": 191,
        "column": 8,
        "endLine": 191,
        "endColumn": 11,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'new'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.build_spatio_temporal_topology_list",
        "line": 234,
        "column": 8,
        "endLine": 234,
        "endColumn": 22,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'complementdict'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.overlay_cmd_value",
        "line": 297,
        "column": 4,
        "endLine": 297,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "dangerous-default-value",
        "message": "Dangerous default value [] as argument",
        "message-id": "W0102"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.overlay_cmd_value",
        "line": 297,
        "column": 4,
        "endLine": 297,
        "endColumn": 25,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.overlay_cmd_value",
        "line": 330,
        "column": 31,
        "endLine": 330,
        "endColumn": 36,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.set_temporal_extent_list",
        "line": 360,
        "column": 4,
        "endLine": 360,
        "endColumn": 32,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "dangerous-default-value",
        "message": "Dangerous default value [] as argument",
        "message-id": "W0102"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.set_temporal_extent_list",
        "line": 400,
        "column": 24,
        "endLine": 405,
        "endColumn": 66,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "no-else-break",
        "message": "Unnecessary \"elif\" after \"break\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1723"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_statement_assign",
        "line": 416,
        "column": 4,
        "endLine": 416,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (26/15)",
        "message-id": "R0914"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_statement_assign",
        "line": 438,
        "column": 28,
        "endLine": 441,
        "endColumn": 29,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_statement_assign",
        "line": 438,
        "column": 28,
        "endLine": 438,
        "endColumn": 29,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_statement_assign",
        "line": 468,
        "column": 35,
        "endLine": 468,
        "endColumn": 44,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_statement_assign",
        "line": 462,
        "column": 44,
        "endLine": 462,
        "endColumn": 59,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "broad-exception-raised",
        "message": "Raising too general exception: Exception",
        "message-id": "W0719"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_statement_assign",
        "line": 467,
        "column": 44,
        "endLine": 467,
        "endColumn": 59,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "broad-exception-raised",
        "message": "Raising too general exception: Exception",
        "message-id": "W0719"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_statement_assign",
        "line": 423,
        "column": 8,
        "endLine": 589,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (9/5)",
        "message-id": "R1702"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_statement_assign",
        "line": 479,
        "column": 36,
        "endLine": 479,
        "endColumn": 65,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_statement_assign",
        "line": 479,
        "column": 36,
        "endLine": 479,
        "endColumn": 37,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_statement_assign",
        "line": 423,
        "column": 8,
        "endLine": 589,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_statement_assign",
        "line": 423,
        "column": 8,
        "endLine": 589,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_statement_assign",
        "line": 523,
        "column": 36,
        "endLine": 524,
        "endColumn": 77,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_statement_assign",
        "line": 423,
        "column": 8,
        "endLine": 589,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_statement_assign",
        "line": 567,
        "column": 36,
        "endLine": 570,
        "endColumn": 37,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_statement_assign",
        "line": 567,
        "column": 36,
        "endLine": 567,
        "endColumn": 37,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_statement_assign",
        "line": 571,
        "column": 59,
        "endLine": 571,
        "endColumn": 62,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "undefined-loop-variable",
        "message": "Using possibly undefined loop variable 'cmd'",
        "message-id": "W0631"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_statement_assign",
        "line": 423,
        "column": 8,
        "endLine": 589,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_statement_assign",
        "line": 416,
        "column": 4,
        "endLine": 416,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (32/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_statement_assign",
        "line": 416,
        "column": 4,
        "endLine": 416,
        "endColumn": 26,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (92/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_statement_assign",
        "line": 582,
        "column": 24,
        "endLine": 582,
        "endColumn": 31,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'success'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_overlay_operation",
        "line": 616,
        "column": 12,
        "endLine": 616,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"maplistA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_overlay_operation",
        "line": 617,
        "column": 12,
        "endLine": 617,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"maplistB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_overlay_operation_relation",
        "line": 647,
        "column": 12,
        "endLine": 647,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"maplistA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_overlay_operation_relation",
        "line": 648,
        "column": 12,
        "endLine": 648,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "invalid-name",
        "message": "Variable name \"maplistB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_overlay_operation_relation",
        "line": 649,
        "column": 43,
        "endLine": 649,
        "endColumn": 52,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'aggregate'",
        "message-id": "W0612"
    },
    {
        "type": "error",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_buffer_operation",
        "line": 697,
        "column": 41,
        "endLine": 697,
        "endColumn": 50,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'buff_type' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.p_error",
        "line": 722,
        "column": 12,
        "endLine": 722,
        "endColumn": 63,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.parse",
        "line": 167,
        "column": 8,
        "endLine": 167,
        "endColumn": 18,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'lexer' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.parse",
        "line": 169,
        "column": 8,
        "endLine": 169,
        "endColumn": 19,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'parser' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.parse",
        "line": 171,
        "column": 8,
        "endLine": 171,
        "endColumn": 22,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'overwrite' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.parse",
        "line": 172,
        "column": 8,
        "endLine": 172,
        "endColumn": 18,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'count' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.parse",
        "line": 173,
        "column": 8,
        "endLine": 173,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'stdstype' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.parse",
        "line": 174,
        "column": 8,
        "endLine": 174,
        "endColumn": 20,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'maptype' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.parse",
        "line": 175,
        "column": 8,
        "endLine": 175,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'mapclass' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.parse",
        "line": 176,
        "column": 8,
        "endLine": 176,
        "endColumn": 21,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'basename' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "TemporalVectorAlgebraParser.parse",
        "line": 177,
        "column": 8,
        "endLine": 177,
        "endColumn": 23,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'expression' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "convention",
        "module": "grass.temporal.temporal_vector_algebra",
        "obj": "",
        "line": 52,
        "column": 0,
        "endLine": 52,
        "endColumn": 11,
        "path": "python/grass/temporal/temporal_vector_algebra.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"copy\" should be placed before first party import \"grass.pygrass.modules\" ",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1681/1000)",
        "message-id": "C0302"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.unit_tests",
        "obj": "",
        "line": 14,
        "column": 0,
        "endLine": 14,
        "endColumn": 32,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from grass.script import core' instead",
        "message-id": "R0402"
    },
    {
        "type": "error",
        "module": "grass.temporal.unit_tests",
        "obj": "",
        "line": 24,
        "column": 0,
        "endLine": 27,
        "endColumn": 1,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "no-name-in-module",
        "message": "No name 'adjust_datetime_to_granularity' in module 'grass.temporal.temporal_granularity'",
        "message-id": "E0611"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.unit_tests",
        "obj": "",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 33,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from grass.lib import vector' instead",
        "message-id": "R0402"
    },
    {
        "type": "error",
        "module": "grass.temporal.unit_tests",
        "obj": "",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 33,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.vector'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.temporal.unit_tests",
        "obj": "",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 33,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.unit_tests",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 31,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from grass.lib import rtree' instead",
        "message-id": "R0402"
    },
    {
        "type": "error",
        "module": "grass.temporal.unit_tests",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 31,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.rtree'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.temporal.unit_tests",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 31,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.unit_tests",
        "obj": "",
        "line": 31,
        "column": 0,
        "endLine": 31,
        "endColumn": 27,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from grass.lib import gis' instead",
        "message-id": "R0402"
    },
    {
        "type": "error",
        "module": "grass.temporal.unit_tests",
        "obj": "",
        "line": 31,
        "column": 0,
        "endLine": 31,
        "endColumn": 27,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "import-error",
        "message": "Unable to import 'grass.lib.gis'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "grass.temporal.unit_tests",
        "obj": "",
        "line": 31,
        "column": 0,
        "endLine": 31,
        "endColumn": 27,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "no-name-in-module",
        "message": "No name 'lib' in module 'grass'",
        "message-id": "E0611"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_increment_datetime_by_string",
        "line": 40,
        "column": 0,
        "endLine": 40,
        "endColumn": 37,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_increment_datetime_by_string",
        "line": 55,
        "column": 19,
        "endLine": 55,
        "endColumn": 54,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_increment_datetime_by_string",
        "line": 71,
        "column": 19,
        "endLine": 71,
        "endColumn": 54,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_increment_datetime_by_string",
        "line": 87,
        "column": 19,
        "endLine": 87,
        "endColumn": 54,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_increment_datetime_by_string",
        "line": 103,
        "column": 19,
        "endLine": 103,
        "endColumn": 54,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_adjust_datetime_to_granularity",
        "line": 109,
        "column": 0,
        "endLine": 109,
        "endColumn": 39,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_adjust_datetime_to_granularity",
        "line": 119,
        "column": 19,
        "endLine": 119,
        "endColumn": 67,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_adjust_datetime_to_granularity",
        "line": 129,
        "column": 19,
        "endLine": 129,
        "endColumn": 67,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_adjust_datetime_to_granularity",
        "line": 139,
        "column": 19,
        "endLine": 139,
        "endColumn": 67,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_adjust_datetime_to_granularity",
        "line": 149,
        "column": 19,
        "endLine": 149,
        "endColumn": 67,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_adjust_datetime_to_granularity",
        "line": 159,
        "column": 19,
        "endLine": 159,
        "endColumn": 67,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_adjust_datetime_to_granularity",
        "line": 169,
        "column": 19,
        "endLine": 169,
        "endColumn": 67,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_adjust_datetime_to_granularity",
        "line": 179,
        "column": 19,
        "endLine": 179,
        "endColumn": 67,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_adjust_datetime_to_granularity",
        "line": 189,
        "column": 19,
        "endLine": 189,
        "endColumn": 67,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_adjust_datetime_to_granularity",
        "line": 201,
        "column": 19,
        "endLine": 201,
        "endColumn": 67,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_adjust_datetime_to_granularity",
        "line": 211,
        "column": 19,
        "endLine": 211,
        "endColumn": 67,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_adjust_datetime_to_granularity",
        "line": 221,
        "column": 19,
        "endLine": 221,
        "endColumn": 67,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.unit_tests",
        "obj": "test_adjust_datetime_to_granularity",
        "line": 109,
        "column": 0,
        "endLine": 109,
        "endColumn": 39,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (68/50)",
        "message-id": "R0915"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 227,
        "column": 0,
        "endLine": 227,
        "endColumn": 31,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 240,
        "column": 19,
        "endLine": 240,
        "endColumn": 55,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 254,
        "column": 19,
        "endLine": 254,
        "endColumn": 55,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 268,
        "column": 19,
        "endLine": 268,
        "endColumn": 55,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 282,
        "column": 19,
        "endLine": 282,
        "endColumn": 55,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 296,
        "column": 19,
        "endLine": 296,
        "endColumn": 55,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 310,
        "column": 19,
        "endLine": 310,
        "endColumn": 55,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 324,
        "column": 19,
        "endLine": 324,
        "endColumn": 55,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 338,
        "column": 19,
        "endLine": 338,
        "endColumn": 55,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 352,
        "column": 19,
        "endLine": 352,
        "endColumn": 55,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 366,
        "column": 19,
        "endLine": 366,
        "endColumn": 55,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 380,
        "column": 19,
        "endLine": 380,
        "endColumn": 55,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 394,
        "column": 19,
        "endLine": 394,
        "endColumn": 55,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 408,
        "column": 19,
        "endLine": 408,
        "endColumn": 55,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 422,
        "column": 19,
        "endLine": 422,
        "endColumn": 55,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 436,
        "column": 19,
        "endLine": 436,
        "endColumn": 55,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 450,
        "column": 19,
        "endLine": 450,
        "endColumn": 55,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 464,
        "column": 19,
        "endLine": 464,
        "endColumn": 55,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 478,
        "column": 19,
        "endLine": 478,
        "endColumn": 55,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 492,
        "column": 19,
        "endLine": 492,
        "endColumn": 55,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 507,
        "column": 19,
        "endLine": 507,
        "endColumn": 55,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 522,
        "column": 19,
        "endLine": 522,
        "endColumn": 55,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 537,
        "column": 19,
        "endLine": 537,
        "endColumn": 55,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 552,
        "column": 19,
        "endLine": 552,
        "endColumn": 55,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 567,
        "column": 19,
        "endLine": 567,
        "endColumn": 55,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 227,
        "column": 0,
        "endLine": 227,
        "endColumn": 31,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (24/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_datetime_delta",
        "line": 227,
        "column": 0,
        "endLine": 227,
        "endColumn": 31,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (222/50)",
        "message-id": "R0915"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_absolute_time_granularity",
        "line": 570,
        "column": 0,
        "endLine": 570,
        "endColumn": 42,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_absolute_time_granularity",
        "line": 579,
        "column": 8,
        "endLine": 579,
        "endColumn": 11,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_absolute_time_granularity",
        "line": 585,
        "column": 19,
        "endLine": 585,
        "endColumn": 62,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_absolute_time_granularity",
        "line": 600,
        "column": 19,
        "endLine": 600,
        "endColumn": 62,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_absolute_time_granularity",
        "line": 615,
        "column": 19,
        "endLine": 615,
        "endColumn": 62,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_absolute_time_granularity",
        "line": 630,
        "column": 19,
        "endLine": 630,
        "endColumn": 62,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_absolute_time_granularity",
        "line": 645,
        "column": 19,
        "endLine": 645,
        "endColumn": 62,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_absolute_time_granularity",
        "line": 660,
        "column": 19,
        "endLine": 660,
        "endColumn": 62,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_absolute_time_granularity",
        "line": 676,
        "column": 19,
        "endLine": 676,
        "endColumn": 62,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_absolute_time_granularity",
        "line": 692,
        "column": 19,
        "endLine": 692,
        "endColumn": 62,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_absolute_time_granularity",
        "line": 707,
        "column": 19,
        "endLine": 707,
        "endColumn": 62,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_absolute_time_granularity",
        "line": 722,
        "column": 19,
        "endLine": 722,
        "endColumn": 62,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_absolute_time_granularity",
        "line": 738,
        "column": 19,
        "endLine": 738,
        "endColumn": 62,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_absolute_time_granularity",
        "line": 754,
        "column": 19,
        "endLine": 754,
        "endColumn": 62,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_absolute_time_granularity",
        "line": 770,
        "column": 19,
        "endLine": 770,
        "endColumn": 62,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_absolute_time_granularity",
        "line": 787,
        "column": 19,
        "endLine": 787,
        "endColumn": 62,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_absolute_time_granularity",
        "line": 804,
        "column": 19,
        "endLine": 804,
        "endColumn": 62,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_absolute_time_granularity",
        "line": 819,
        "column": 19,
        "endLine": 819,
        "endColumn": 62,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_absolute_time_granularity",
        "line": 834,
        "column": 19,
        "endLine": 834,
        "endColumn": 62,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_absolute_time_granularity",
        "line": 860,
        "column": 19,
        "endLine": 860,
        "endColumn": 62,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_absolute_time_granularity",
        "line": 884,
        "column": 19,
        "endLine": 884,
        "endColumn": 62,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_absolute_time_granularity",
        "line": 570,
        "column": 0,
        "endLine": 570,
        "endColumn": 42,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (40/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.unit_tests",
        "obj": "test_compute_absolute_time_granularity",
        "line": 570,
        "column": 0,
        "endLine": 570,
        "endColumn": 42,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (248/50)",
        "message-id": "R0915"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_extent_intersection",
        "line": 890,
        "column": 0,
        "endLine": 890,
        "endColumn": 36,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_extent_intersection",
        "line": 893,
        "column": 4,
        "endLine": 893,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"A\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_extent_intersection",
        "line": 895,
        "column": 4,
        "endLine": 895,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_extent_intersection",
        "line": 897,
        "column": 4,
        "endLine": 897,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"C\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_extent_intersection",
        "line": 901,
        "column": 8,
        "endLine": 906,
        "endColumn": 37,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "too-many-boolean-expressions",
        "message": "Too many boolean expressions in if statement (6/5)",
        "message-id": "R0916"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_extent_intersection",
        "line": 910,
        "column": 4,
        "endLine": 910,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_extent_intersection",
        "line": 912,
        "column": 4,
        "endLine": 912,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"C\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_extent_intersection",
        "line": 916,
        "column": 8,
        "endLine": 921,
        "endColumn": 37,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "too-many-boolean-expressions",
        "message": "Too many boolean expressions in if statement (6/5)",
        "message-id": "R0916"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_extent_intersection",
        "line": 925,
        "column": 4,
        "endLine": 925,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_extent_intersection",
        "line": 927,
        "column": 4,
        "endLine": 927,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"C\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_extent_intersection",
        "line": 931,
        "column": 8,
        "endLine": 936,
        "endColumn": 37,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "too-many-boolean-expressions",
        "message": "Too many boolean expressions in if statement (6/5)",
        "message-id": "R0916"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_extent_intersection",
        "line": 940,
        "column": 4,
        "endLine": 940,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_extent_intersection",
        "line": 942,
        "column": 4,
        "endLine": 942,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"C\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_extent_intersection",
        "line": 946,
        "column": 8,
        "endLine": 951,
        "endColumn": 37,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "too-many-boolean-expressions",
        "message": "Too many boolean expressions in if statement (6/5)",
        "message-id": "R0916"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_extent_intersection",
        "line": 955,
        "column": 4,
        "endLine": 955,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_extent_intersection",
        "line": 957,
        "column": 4,
        "endLine": 957,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"C\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_extent_intersection",
        "line": 961,
        "column": 8,
        "endLine": 966,
        "endColumn": 37,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "too-many-boolean-expressions",
        "message": "Too many boolean expressions in if statement (6/5)",
        "message-id": "R0916"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 974,
        "column": 0,
        "endLine": 974,
        "endColumn": 26,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 977,
        "column": 4,
        "endLine": 977,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"A\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 979,
        "column": 4,
        "endLine": 979,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 985,
        "column": 19,
        "endLine": 985,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 987,
        "column": 4,
        "endLine": 987,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 993,
        "column": 19,
        "endLine": 993,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 998,
        "column": 19,
        "endLine": 998,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1000,
        "column": 4,
        "endLine": 1000,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1006,
        "column": 19,
        "endLine": 1006,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1011,
        "column": 19,
        "endLine": 1011,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1016,
        "column": 19,
        "endLine": 1016,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1021,
        "column": 19,
        "endLine": 1021,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1023,
        "column": 4,
        "endLine": 1023,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1029,
        "column": 19,
        "endLine": 1029,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1034,
        "column": 19,
        "endLine": 1034,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1039,
        "column": 19,
        "endLine": 1039,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1041,
        "column": 4,
        "endLine": 1041,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1046,
        "column": 19,
        "endLine": 1046,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1048,
        "column": 4,
        "endLine": 1048,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1054,
        "column": 19,
        "endLine": 1054,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1059,
        "column": 19,
        "endLine": 1059,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1061,
        "column": 4,
        "endLine": 1061,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1067,
        "column": 19,
        "endLine": 1067,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1069,
        "column": 4,
        "endLine": 1069,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1075,
        "column": 19,
        "endLine": 1075,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1080,
        "column": 19,
        "endLine": 1080,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1082,
        "column": 4,
        "endLine": 1082,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1088,
        "column": 19,
        "endLine": 1088,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1093,
        "column": 19,
        "endLine": 1093,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1095,
        "column": 4,
        "endLine": 1095,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1102,
        "column": 19,
        "endLine": 1102,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1107,
        "column": 19,
        "endLine": 1107,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1109,
        "column": 4,
        "endLine": 1109,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1116,
        "column": 19,
        "endLine": 1116,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1118,
        "column": 4,
        "endLine": 1118,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1125,
        "column": 19,
        "endLine": 1125,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1127,
        "column": 4,
        "endLine": 1127,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"A\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1129,
        "column": 4,
        "endLine": 1129,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1135,
        "column": 19,
        "endLine": 1135,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1140,
        "column": 19,
        "endLine": 1140,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1142,
        "column": 4,
        "endLine": 1142,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"A\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1144,
        "column": 4,
        "endLine": 1144,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1150,
        "column": 19,
        "endLine": 1150,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1155,
        "column": 19,
        "endLine": 1155,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1157,
        "column": 4,
        "endLine": 1157,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"A\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1159,
        "column": 4,
        "endLine": 1159,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1165,
        "column": 19,
        "endLine": 1165,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1170,
        "column": 19,
        "endLine": 1170,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1172,
        "column": 4,
        "endLine": 1172,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"A\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1174,
        "column": 4,
        "endLine": 1174,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1180,
        "column": 19,
        "endLine": 1180,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1185,
        "column": 19,
        "endLine": 1185,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1187,
        "column": 4,
        "endLine": 1187,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"A\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1189,
        "column": 4,
        "endLine": 1189,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1195,
        "column": 19,
        "endLine": 1195,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1200,
        "column": 19,
        "endLine": 1200,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1202,
        "column": 4,
        "endLine": 1202,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"A\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1204,
        "column": 4,
        "endLine": 1204,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1210,
        "column": 19,
        "endLine": 1210,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1215,
        "column": 19,
        "endLine": 1215,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1217,
        "column": 4,
        "endLine": 1217,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"A\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1219,
        "column": 4,
        "endLine": 1219,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1225,
        "column": 19,
        "endLine": 1225,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1230,
        "column": 19,
        "endLine": 1230,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1232,
        "column": 4,
        "endLine": 1232,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"A\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1234,
        "column": 4,
        "endLine": 1234,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1240,
        "column": 19,
        "endLine": 1240,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1242,
        "column": 4,
        "endLine": 1242,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"A\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1244,
        "column": 4,
        "endLine": 1244,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1250,
        "column": 19,
        "endLine": 1250,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1252,
        "column": 4,
        "endLine": 1252,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"A\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1254,
        "column": 4,
        "endLine": 1254,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1260,
        "column": 19,
        "endLine": 1260,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1262,
        "column": 4,
        "endLine": 1262,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"A\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1264,
        "column": 4,
        "endLine": 1264,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1270,
        "column": 19,
        "endLine": 1270,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1272,
        "column": 4,
        "endLine": 1272,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"A\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1274,
        "column": 4,
        "endLine": 1274,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1280,
        "column": 19,
        "endLine": 1280,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1282,
        "column": 4,
        "endLine": 1282,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"A\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1284,
        "column": 4,
        "endLine": 1284,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1290,
        "column": 19,
        "endLine": 1290,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1292,
        "column": 4,
        "endLine": 1292,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"A\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1294,
        "column": 4,
        "endLine": 1294,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1300,
        "column": 19,
        "endLine": 1300,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1302,
        "column": 4,
        "endLine": 1302,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"A\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1304,
        "column": 4,
        "endLine": 1304,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1310,
        "column": 19,
        "endLine": 1310,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1312,
        "column": 4,
        "endLine": 1312,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"A\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1314,
        "column": 4,
        "endLine": 1314,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1320,
        "column": 19,
        "endLine": 1320,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1322,
        "column": 4,
        "endLine": 1322,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"A\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1324,
        "column": 4,
        "endLine": 1324,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1330,
        "column": 19,
        "endLine": 1330,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1332,
        "column": 4,
        "endLine": 1332,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"A\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1334,
        "column": 4,
        "endLine": 1334,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1340,
        "column": 19,
        "endLine": 1340,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1342,
        "column": 4,
        "endLine": 1342,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"A\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1344,
        "column": 4,
        "endLine": 1344,
        "endColumn": 5,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"B\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 1350,
        "column": 19,
        "endLine": 1350,
        "endColumn": 47,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 974,
        "column": 0,
        "endLine": 974,
        "endColumn": 26,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (48/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.unit_tests",
        "obj": "test_spatial_relations",
        "line": 974,
        "column": 0,
        "endLine": 974,
        "endColumn": 26,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (297/50)",
        "message-id": "R0915"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_temporal_topology_builder",
        "line": 1356,
        "column": 0,
        "endLine": 1356,
        "endColumn": 34,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_temporal_topology_builder",
        "line": 1357,
        "column": 4,
        "endLine": 1357,
        "endColumn": 13,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"map_listA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_temporal_topology_builder",
        "line": 1380,
        "column": 14,
        "endLine": 1380,
        "endColumn": 20,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_temporal_topology_builder",
        "line": 1384,
        "column": 16,
        "endLine": 1384,
        "endColumn": 63,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_temporal_topology_builder",
        "line": 1389,
        "column": 4,
        "endLine": 1389,
        "endColumn": 13,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "invalid-name",
        "message": "Variable name \"map_listB\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_temporal_topology_builder",
        "line": 1422,
        "column": 14,
        "endLine": 1422,
        "endColumn": 20,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_temporal_topology_builder",
        "line": 1426,
        "column": 16,
        "endLine": 1426,
        "endColumn": 63,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_temporal_topology_builder",
        "line": 1436,
        "column": 14,
        "endLine": 1436,
        "endColumn": 20,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_temporal_topology_builder",
        "line": 1440,
        "column": 16,
        "endLine": 1440,
        "endColumn": 63,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_temporal_topology_builder",
        "line": 1447,
        "column": 14,
        "endLine": 1447,
        "endColumn": 20,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.unit_tests",
        "obj": "test_temporal_topology_builder",
        "line": 1356,
        "column": 0,
        "endLine": 1356,
        "endColumn": 34,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (17/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.unit_tests",
        "obj": "test_temporal_topology_builder",
        "line": 1356,
        "column": 0,
        "endLine": 1356,
        "endColumn": 34,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (80/50)",
        "message-id": "R0915"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "test_map_list_sorting",
        "line": 1469,
        "column": 0,
        "endLine": 1469,
        "endColumn": 25,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 33,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.lib.vector\" should be placed before local imports \"abstract_dataset.AbstractDatasetComparisonKeyStartTime\", \"core.init\", \"datetime_math.increment_datetime_by_string\" (...) \"spatial_extent.SpatialExtent\", \"spatio_temporal_relationships.SpatioTemporalTopologyBuilder\", \"temporal_granularity.adjust_datetime_to_granularity\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 31,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.lib.rtree\" should be placed before local imports \"abstract_dataset.AbstractDatasetComparisonKeyStartTime\", \"core.init\", \"datetime_math.increment_datetime_by_string\" (...) \"spatial_extent.SpatialExtent\", \"spatio_temporal_relationships.SpatioTemporalTopologyBuilder\", \"temporal_granularity.adjust_datetime_to_granularity\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "",
        "line": 31,
        "column": 0,
        "endLine": 31,
        "endColumn": 27,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "wrong-import-order",
        "message": "first party import \"grass.lib.gis\" should be placed before local imports \"abstract_dataset.AbstractDatasetComparisonKeyStartTime\", \"core.init\", \"datetime_math.increment_datetime_by_string\" (...) \"spatial_extent.SpatialExtent\", \"spatio_temporal_relationships.SpatioTemporalTopologyBuilder\", \"temporal_granularity.adjust_datetime_to_granularity\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "grass.temporal.unit_tests",
        "obj": "",
        "line": 32,
        "column": 0,
        "endLine": 32,
        "endColumn": 24,
        "path": "python/grass/temporal/unit_tests.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"ctypes.byref\" should be placed before first party imports \"grass.script.core\", \"grass.lib.vector\", \"grass.lib.rtree\", \"grass.lib.gis\" and local imports \"abstract_dataset.AbstractDatasetComparisonKeyStartTime\", \"core.init\", \"datetime_math.increment_datetime_by_string\" (...) \"spatial_extent.SpatialExtent\", \"spatio_temporal_relationships.SpatioTemporalTopologyBuilder\", \"temporal_granularity.adjust_datetime_to_granularity\"",
        "message-id": "C0411"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.univar_statistics",
        "obj": "compute_univar_stats",
        "line": 37,
        "column": 0,
        "endLine": 37,
        "endColumn": 24,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (17/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.temporal.univar_statistics",
        "obj": "compute_univar_stats",
        "line": 50,
        "column": 4,
        "endLine": 50,
        "endColumn": 6,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'id'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "grass.temporal.univar_statistics",
        "obj": "compute_univar_stats",
        "line": 68,
        "column": 12,
        "endLine": 73,
        "endColumn": 13,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.univar_statistics",
        "obj": "compute_univar_stats",
        "line": 68,
        "column": 12,
        "endLine": 68,
        "endColumn": 13,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "grass.temporal.univar_statistics",
        "obj": "compute_univar_stats",
        "line": 69,
        "column": 16,
        "endLine": 70,
        "endColumn": 26,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.temporal.univar_statistics",
        "obj": "compute_univar_stats",
        "line": 90,
        "column": 29,
        "endLine": 90,
        "endColumn": 33,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'zone' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_gridded_dataset_univar_statistics",
        "line": 116,
        "column": 0,
        "endLine": 116,
        "endColumn": 43,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (12/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_gridded_dataset_univar_statistics",
        "line": 116,
        "column": 0,
        "endLine": 116,
        "endColumn": 43,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (24/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_gridded_dataset_univar_statistics",
        "line": 117,
        "column": 4,
        "endLine": 117,
        "endColumn": 8,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_gridded_dataset_univar_statistics",
        "line": 118,
        "column": 4,
        "endLine": 118,
        "endColumn": 9,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'input'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_gridded_dataset_univar_statistics",
        "line": 161,
        "column": 19,
        "endLine": 161,
        "endColumn": 36,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "error",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_gridded_dataset_univar_statistics",
        "line": 184,
        "column": 12,
        "endLine": 190,
        "endColumn": 13,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_gridded_dataset_univar_statistics",
        "line": 184,
        "column": 12,
        "endLine": 184,
        "endColumn": 13,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_gridded_dataset_univar_statistics",
        "line": 116,
        "column": 0,
        "endLine": 116,
        "endColumn": 43,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (17/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_gridded_dataset_univar_statistics",
        "line": 161,
        "column": 19,
        "endLine": 161,
        "endColumn": 36,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_vector_dataset_univar_statistics",
        "line": 283,
        "column": 0,
        "endLine": 283,
        "endColumn": 42,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (10/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_vector_dataset_univar_statistics",
        "line": 283,
        "column": 0,
        "endLine": 283,
        "endColumn": 42,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (23/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_vector_dataset_univar_statistics",
        "line": 284,
        "column": 4,
        "endLine": 284,
        "endColumn": 9,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'input'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_vector_dataset_univar_statistics",
        "line": 284,
        "column": 34,
        "endLine": 284,
        "endColumn": 38,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_vector_dataset_univar_statistics",
        "line": 311,
        "column": 8,
        "endLine": 311,
        "endColumn": 10,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'id'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_vector_dataset_univar_statistics",
        "line": 306,
        "column": 19,
        "endLine": 306,
        "endColumn": 36,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "error",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_vector_dataset_univar_statistics",
        "line": 320,
        "column": 12,
        "endLine": 320,
        "endColumn": 60,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_vector_dataset_univar_statistics",
        "line": 320,
        "column": 12,
        "endLine": 320,
        "endColumn": 13,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_vector_dataset_univar_statistics",
        "line": 333,
        "column": 12,
        "endLine": 333,
        "endColumn": 59,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_vector_dataset_univar_statistics",
        "line": 333,
        "column": 12,
        "endLine": 333,
        "endColumn": 13,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_vector_dataset_univar_statistics",
        "line": 390,
        "column": 12,
        "endLine": 390,
        "endColumn": 20,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'out_file' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "error",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_vector_dataset_univar_statistics",
        "line": 419,
        "column": 23,
        "endLine": 419,
        "endColumn": 72,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_vector_dataset_univar_statistics",
        "line": 419,
        "column": 23,
        "endLine": 419,
        "endColumn": 24,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_vector_dataset_univar_statistics",
        "line": 443,
        "column": 11,
        "endLine": 443,
        "endColumn": 48,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with 'in' by using 'type in ('point', 'centroid')'. Use a set instead if elements are hashable.",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_vector_dataset_univar_statistics",
        "line": 283,
        "column": 0,
        "endLine": 283,
        "endColumn": 42,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (25/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_vector_dataset_univar_statistics",
        "line": 283,
        "column": 0,
        "endLine": 283,
        "endColumn": 42,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (72/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "grass.temporal.univar_statistics",
        "obj": "print_vector_dataset_univar_statistics",
        "line": 306,
        "column": 19,
        "endLine": 306,
        "endColumn": 36,
        "path": "python/grass/temporal/univar_statistics.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.utils.download",
        "obj": "",
        "line": 44,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "fixme",
        "message": "TODO: Possibly migrate to shutil.unpack_archive.",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.utils.download",
        "obj": "",
        "line": 88,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "fixme",
        "message": "TODO: Possibly migrate to shutil.unpack_archive.",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "grass.utils.download",
        "obj": "",
        "line": 145,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "fixme",
        "message": "TODO: remove the hardcoded location/extension, use general name",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "grass.utils.download",
        "obj": "extract_tar",
        "line": 67,
        "column": 18,
        "endLine": 67,
        "endColumn": 73,
        "path": "python/grass/utils/download.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.utils.download",
        "obj": "extract_tar",
        "line": 67,
        "column": 18,
        "endLine": 67,
        "endColumn": 19,
        "path": "python/grass/utils/download.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.utils.download",
        "obj": "extract_tar",
        "line": 76,
        "column": 12,
        "endLine": 76,
        "endColumn": 48,
        "path": "python/grass/utils/download.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.utils.download",
        "obj": "extract_tar",
        "line": 76,
        "column": 12,
        "endLine": 76,
        "endColumn": 13,
        "path": "python/grass/utils/download.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.utils.download",
        "obj": "extract_tar",
        "line": 80,
        "column": 12,
        "endLine": 80,
        "endColumn": 48,
        "path": "python/grass/utils/download.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.utils.download",
        "obj": "extract_tar",
        "line": 80,
        "column": 12,
        "endLine": 80,
        "endColumn": 13,
        "path": "python/grass/utils/download.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "extract_tar",
        "line": 52,
        "column": 14,
        "endLine": 52,
        "endColumn": 32,
        "path": "python/grass/utils/download.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "grass.utils.download",
        "obj": "extract_zip",
        "line": 110,
        "column": 8,
        "endLine": 110,
        "endColumn": 75,
        "path": "python/grass/utils/download.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise DownloadError(_('ZIP file is unreadable: {0}').format(error)) from error'",
        "message-id": "W0707"
    },
    {
        "type": "error",
        "module": "grass.utils.download",
        "obj": "extract_zip",
        "line": 110,
        "column": 28,
        "endLine": 110,
        "endColumn": 60,
        "path": "python/grass/utils/download.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.utils.download",
        "obj": "extract_zip",
        "line": 110,
        "column": 28,
        "endLine": 110,
        "endColumn": 29,
        "path": "python/grass/utils/download.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "extract_zip",
        "line": 96,
        "column": 19,
        "endLine": 96,
        "endColumn": 50,
        "path": "python/grass/utils/download.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "grass.utils.download",
        "obj": "_move_extracted_files",
        "line": 122,
        "column": 10,
        "endLine": 122,
        "endColumn": 37,
        "path": "python/grass/utils/download.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "grass.utils.download",
        "obj": "download_and_extract",
        "line": 154,
        "column": 10,
        "endLine": 154,
        "endColumn": 22,
        "path": "python/grass/utils/download.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "error",
        "module": "grass.utils.download",
        "obj": "download_and_extract",
        "line": 156,
        "column": 25,
        "endLine": 156,
        "endColumn": 85,
        "path": "python/grass/utils/download.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.utils.download",
        "obj": "download_and_extract",
        "line": 156,
        "column": 25,
        "endLine": 156,
        "endColumn": 26,
        "path": "python/grass/utils/download.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "grass.utils.download",
        "obj": "download_and_extract",
        "line": 157,
        "column": 24,
        "endLine": 159,
        "endColumn": 5,
        "path": "python/grass/utils/download.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.utils.download",
        "obj": "download_and_extract",
        "line": 157,
        "column": 24,
        "endLine": 157,
        "endColumn": 25,
        "path": "python/grass/utils/download.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.utils.download",
        "obj": "download_and_extract",
        "line": 165,
        "column": 12,
        "endLine": 170,
        "endColumn": 13,
        "path": "python/grass/utils/download.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise DownloadError(http_error_message.format(url=source, code=err)) from err'",
        "message-id": "W0707"
    },
    {
        "type": "warning",
        "module": "grass.utils.download",
        "obj": "download_and_extract",
        "line": 172,
        "column": 12,
        "endLine": 172,
        "endColumn": 69,
        "path": "python/grass/utils/download.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'except URLError as exc' and 'raise DownloadError(url_error_message.format(url=source)) from exc'",
        "message-id": "W0707"
    },
    {
        "type": "error",
        "module": "grass.utils.download",
        "obj": "download_and_extract",
        "line": 175,
        "column": 16,
        "endLine": 177,
        "endColumn": 17,
        "path": "python/grass/utils/download.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.utils.download",
        "obj": "download_and_extract",
        "line": 175,
        "column": 16,
        "endLine": 175,
        "endColumn": 17,
        "path": "python/grass/utils/download.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "warning",
        "module": "grass.utils.download",
        "obj": "download_and_extract",
        "line": 186,
        "column": 12,
        "endLine": 191,
        "endColumn": 13,
        "path": "python/grass/utils/download.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise DownloadError(http_error_message.format(url=source, code=err)) from err'",
        "message-id": "W0707"
    },
    {
        "type": "warning",
        "module": "grass.utils.download",
        "obj": "download_and_extract",
        "line": 193,
        "column": 12,
        "endLine": 193,
        "endColumn": 69,
        "path": "python/grass/utils/download.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'except URLError as exc' and 'raise DownloadError(url_error_message.format(url=source)) from exc'",
        "message-id": "W0707"
    },
    {
        "type": "error",
        "module": "grass.utils.download",
        "obj": "download_and_extract",
        "line": 197,
        "column": 28,
        "endLine": 197,
        "endColumn": 53,
        "path": "python/grass/utils/download.py",
        "symbol": "not-callable",
        "message": "_ is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "grass.utils.download",
        "obj": "download_and_extract",
        "line": 197,
        "column": 28,
        "endLine": 197,
        "endColumn": 29,
        "path": "python/grass/utils/download.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable '_'",
        "message-id": "E0602"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (grass.grassdb.checks -> grass.script -> grass.script.core -> grass.script.setup)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (grass.script -> grass.script.core -> grass.script.setup)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (grass.grassdb.checks -> grass.script -> grass.script.setup)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (grass.pygrass.utils -> grass.pygrass.vector.geometry)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (grass.pygrass.gis.region -> grass.pygrass.utils)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (grass.pygrass.vector.abstract -> grass.pygrass.vector.find)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (grass.grassdb.checks -> grass.script -> grass.script.raster3d -> grass.script.core -> grass.script.setup)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (grass.pygrass.gis.region -> grass.pygrass.vector -> grass.pygrass.vector.geometry -> grass.pygrass.utils)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (grass.grassdb.checks -> grass.script -> grass.script.core -> grass.script.setup -> grass.grassdb.manage)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (grass.pygrass.gis.region -> grass.pygrass.vector -> grass.pygrass.vector.abstract -> grass.pygrass.utils)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (grass.pygrass.gis.region -> grass.pygrass.vector -> grass.pygrass.vector.abstract -> grass.pygrass.vector.table -> grass.pygrass.utils)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (grass.grassdb.checks -> grass.script -> grass.script.vector -> grass.script.core -> grass.script.setup)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (grass.grassdb.checks -> grass.script -> grass.script.db -> grass.script.vector -> grass.script.core -> grass.script.setup)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (grass.grassdb.checks -> grass.script -> grass.script.raster -> grass.script.core -> grass.script.setup)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (grass.pygrass.gis -> grass.pygrass.utils -> grass.pygrass.gis.region -> grass.pygrass.vector)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (grass.grassdb.checks -> grass.script -> grass.script.core -> grass.grassdb.manage)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (grass.pygrass.gis.region -> grass.pygrass.vector -> grass.pygrass.vector.abstract -> grass.pygrass.vector.find -> grass.pygrass.vector.geometry -> grass.pygrass.utils)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.imaging.images2ims:[52:92]\n==grass.imaging.images2swf:[98:140]\n    images2 = []\n\n    for im in images:\n        if PIL and isinstance(im, PIL.Image.Image):\n            # We assume PIL images are alright\n            images2.append(im)\n\n        elif np and isinstance(im, np.ndarray):\n            # Check and convert dtype\n            if im.dtype == np.uint8:\n                images2.append(im)  # Ok\n            elif im.dtype in [np.float32, np.float64]:\n                theMax = im.max()\n                if theMax > 128 and theMax < 300:\n                    pass  # assume 0:255\n                else:\n                    im = im.copy()\n                    im[im < 0] = 0\n                    im[im > 1] = 1\n                    im *= 255\n                images2.append(im.astype(np.uint8))\n            else:\n                im = im.astype(np.uint8)\n                images2.append(im)\n            # Check size\n            if im.ndim == 2:\n                pass  # ok\n            elif im.ndim == 3:\n                if im.shape[2] not in [3, 4]:\n                    raise ValueError(\"This array can not represent an image.\")\n            else:\n                raise ValueError(\"This array can not represent an image.\")\n        else:\n            raise ValueError(\"Invalid image type: \" + str(type(im)))\n\n    # Done\n    return images2\n\n\ndef _getFilenameParts(filename):",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_algebra:[1119:1152]\n==grass.temporal.temporal_raster_base_algebra:[574:611]\n        resultdict = {}\n        temporal_topo_list, spatial_topo_list = self._check_topology(topolist=topolist)\n\n        for map_i in maplist:\n            # Loop over temporal related maps and create overlay modules.\n            tbrelations = map_i.get_temporal_relations()\n            # Generate an intermediate map for the result map list.\n            map_new = self.generate_new_map(\n                base_map=map_i, bool_op=\"and\", copy=True, rename=True\n            )\n            # Combine temporal and spatial extents of intermediate map with related\n            # maps.\n            for topo in topolist:\n                if topo in tbrelations.keys():\n                    for map_j in tbrelations[topo]:\n                        if (\n                            self._check_spatial_topology_relation(\n                                spatial_topo_list, map_i, map_j\n                            )\n                            is True\n                        ):\n                            if temporal == \"r\":\n                                # Generate an intermediate map for the result map list.\n                                map_new = self.generate_new_map(\n                                    base_map=map_i,\n                                    bool_op=\"and\",\n                                    copy=True,\n                                    rename=True,\n                                )\n                            # Create overlaid map extent.\n                            returncode = self.overlay_map_extent(\n                                map_new, map_j, \"and\", temp_op=temporal\n                            )",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_algebra:[1613:1660]\n==grass.temporal.temporal_raster_base_algebra:[324:378]\n                )\n\n            temporal_relations = map_i.get_temporal_relations()\n            spatial_relations = map_i.get_spatial_relations()\n\n            for temporal_topology in temporal_topo_list:\n                if temporal_topology.upper() in temporal_relations.keys():\n                    if (\n                        self._check_spatial_topology_entries(\n                            spatial_topo_list, spatial_relations\n                        )\n                        is True\n                    ):\n                        if count_map:\n                            relationmaplist = temporal_relations[\n                                temporal_topology.upper()\n                            ]\n                            gvar = GlobalTemporalVar()\n                            gvar.td = len(relationmaplist)\n                            if \"map_value\" in dir(map_i):\n                                map_i.map_value.append(gvar)\n                            else:\n                                map_i.map_value = gvar\n                        # Use unique identifier, since map names may be equal\n                        resultdict[map_i.uid] = map_i\n                        # map_i.print_info()\n\n        resultlist = resultdict.values()\n\n        # Sort list of maps chronological.\n        resultlist = sorted(resultlist, key=AbstractDatasetComparisonKeyStartTime)\n\n        return resultlist\n\n    def build_command_string(self, map_i, relmap, operator=None, cmd_type=None):\n        \"\"\"This function build the r.mapcalc command string for conditionals,\n        spatial variable combinations and boolean comparisons.\n\n        For Example: 'if(a1 == 1, b1, c2)' or 'exist(a1) && sin(b1)'\n\n        :param map_i: map object with temporal extent and built relations.\n        :param relmap: map object with defined temporal relation to map_i.\n        :param operator: String representing operator between two spatial variables\n                        (&&,||,+,-,*,/).\n        :param cmd_type: map object with defined temporal relation to map_i:\n                        condition, conclusion or operator.\n\n        :return: the resulting command string for conditionals or spatial variable\n            combinations\n        \"\"\"\n\n        def sub_cmdstring(map_i):\n            \"\"\"This function search for command string in a map object and\n            return substitute string (contained commandstring or map name)\"\"\"",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.imaging.images2gif:[122:148]\n==grass.imaging.images2ims:[68:92]\n                im = im.copy()\n                im[im < 0] = 0\n                im[im > 1] = 1\n                im *= 255\n                images2.append(im.astype(np.uint8))\n            else:\n                im = im.astype(np.uint8)\n                images2.append(im)\n            # Check size\n            if im.ndim == 2:\n                pass  # ok\n            elif im.ndim == 3:\n                if im.shape[2] not in [3, 4]:\n                    raise ValueError(\"This array can not represent an image.\")\n            else:\n                raise ValueError(\"This array can not represent an image.\")\n        else:\n            raise ValueError(\"Invalid image type: \" + str(type(im)))\n\n    # Done\n    return images2\n\n\ndef intToBin(i):\n    \"\"\"Integer to two bytes\"\"\"\n    # divide in two parts (bytes)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.extract:[288:304]\n==grass.temporal.mapcalc:[384:401]\n            names = \"\"\n            count = 0\n            for map in empty_maps:\n                if count == 0:\n                    names += \"%s\" % (map.get_name())\n                else:\n                    names += \",%s\" % (map.get_name())\n                count += 1\n            if type == \"raster\":\n                gscript.run_command(\n                    \"g.remove\", flags=\"f\", type=\"raster\", name=names, quiet=True\n                )\n            elif type == \"raster3d\":\n                gscript.run_command(\n                    \"g.remove\", flags=\"f\", type=\"raster_3d\", name=names, quiet=True\n                )\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_algebra:[675:702]\n==grass.temporal.temporal_operator:[261:291]\n        return t\n\n    # Handle errors.\n    def t_error(self, t):\n        raise SyntaxError(\n            \"syntax error on line %d position %i near '%s'\"\n            % (t.lineno, t.lexpos, t.value)\n        )\n\n    # Build the lexer\n    def build(self, **kwargs):\n        self.lexer = lex.lex(\n            module=self, optimize=False, nowarn=True, debug=0, **kwargs\n        )\n\n    # Just for testing\n    def test(self, data):\n        self.name_list = {}\n        print(data)\n        self.lexer.input(data)\n        while True:\n            tok = self.lexer.token()\n            if not tok:\n                break\n            print(tok)\n\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_algebra:[2666:2686]\n==grass.temporal.temporal_raster_base_algebra:[963:984]\n        if self.run:\n            # Check input map.\n            input = t[3]\n            if not isinstance(input, list):\n                # Check for mapset in given stds input.\n                if input.find(\"@\") >= 0:\n                    id_input = input\n                else:\n                    id_input = input + \"@\" + self.mapset\n                # Create empty map dataset.\n                map_i = dataset_factory(self.maptype, id_input)\n                # Check for occurrence of space time dataset.\n                if map_i.map_exists() is False:\n                    raise FatalError(\n                        _(\"%s map <%s> not found in GRASS spatial database\")\n                        % (map_i.get_type(), id_input)\n                    )\n                else:\n                    # Select dataset entry from database.\n                    map_i.select(dbif=self.dbif)\n                    # Create command list for map object.",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_algebra:[1593:1615]\n==grass.temporal.temporal_raster_base_algebra:[291:312]\n        temporal_topo_list, spatial_topo_list = self._check_topology(topolist=topolist)\n\n        resultdict = {}\n        # Create temporal topology for maplistA to maplistB.\n        tb = SpatioTemporalTopologyBuilder()\n        # Build spatio-temporal topology\n        if len(spatial_topo_list) > 0:\n            # Dictionary with different spatial variables used for topology builder.\n            spatialdict = {\"strds\": \"2D\", \"stvds\": \"2D\", \"str3ds\": \"3D\"}\n            tb.build(maplistA, maplistB, spatial=spatialdict[self.stdstype])\n        else:\n            tb.build(maplistA, maplistB)\n        # Iterate through maps in maplistA and search for relationships given\n        # in topolist.\n        for map_i in maplistA:\n            if assign_val:\n                self.assign_bool_value(map_i, temporal_topo_list, spatial_topo_list)\n            elif compare_bool:\n                self.compare_bool_value(\n                    map_i, compop, aggregate, temporal_topo_list, spatial_topo_list\n                )",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_raster3d_algebra:[51:73]\n==grass.temporal.temporal_raster_algebra:[97:119]\n        self.m_mremove = pymod.Module(\"g.remove\")\n\n    def parse(self, expression, basename=None, overwrite=False):\n        # Check for space time dataset type definitions from temporal algebra\n        l = TemporalRasterAlgebraLexer()\n        l.build()\n        l.lexer.input(expression)\n\n        while True:\n            tok = l.lexer.token()\n            if not tok:\n                break\n\n            if tok.type == \"STVDS\" or tok.type == \"STRDS\" or tok.type == \"STR3DS\":\n                raise SyntaxError(\"Syntax error near '%s'\" % (tok.type))\n\n        self.lexer = TemporalRasterAlgebraLexer()\n        self.lexer.build()\n        self.parser = yacc.yacc(module=self, debug=self.debug, write_tables=False)\n\n        self.overwrite = overwrite\n        self.count = 0",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.extract:[307:337]\n==grass.temporal.mapcalc:[399:474]\n                )\n\n    dbif.close()\n\n\n###############################################################################\n\n\ndef run_mapcalc2d(expr):\n    \"\"\"Helper function to run r.mapcalc in parallel\"\"\"\n    try:\n        gscript.run_command(\n            \"r.mapcalc\", expression=expr, overwrite=gscript.overwrite(), quiet=True\n        )\n    except CalledModuleError:\n        exit(1)\n\n\ndef run_mapcalc3d(expr):\n    \"\"\"Helper function to run r3.mapcalc in parallel\"\"\"\n    try:\n        gscript.run_command(\n            \"r3.mapcalc\", expression=expr, overwrite=gscript.overwrite(), quiet=True\n        )\n    except CalledModuleError:\n        exit(1)\n\n\ndef run_vector_extraction(input, output, layer, type, where):\n    \"\"\"Helper function to run r.mapcalc in parallel\"\"\"",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_algebra:[1927:1941]\n==grass.temporal.temporal_vector_algebra:[220:233]\n        topologylist = [\n            \"EQUAL\",\n            \"FOLLOWS\",\n            \"PRECEDES\",\n            \"OVERLAPS\",\n            \"OVERLAPPED\",\n            \"DURING\",\n            \"STARTS\",\n            \"FINISHES\",\n            \"CONTAINS\",\n            \"STARTED\",\n            \"FINISHED\",\n        ]",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.gunittest.checkers:[123:141]\n==grass.script.core:[1087:1105]\n            not_float = False\n            not_int = False\n\n            # Convert values into correct types\n            # We first try integer then float\n            try:\n                value_converted = int(value)\n            except ValueError:\n                not_int = True\n            if not_int:\n                try:\n                    value_converted = float(value)\n                except ValueError:\n                    not_float = True\n\n            if not_int and not_float:\n                value_converted = value.strip()\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_algebra:[2531:2547]\n==grass.temporal.temporal_raster_base_algebra:[916:931]\n                                if (\n                                    map_i.metadata.get_min() is None\n                                    and map_i.metadata.get_max() is None\n                                ):\n                                    if not self.register_null:\n                                        self.removable_maps[map_i.get_name()] = map_i\n                                        continue\n\n                            if map_i.is_in_db(dbif) and self.overwrite:\n                                # Update map in temporal database.\n                                if self.dry_run is False:\n                                    map_i.update_all(dbif)\n                            elif map_i.is_in_db(dbif) and self.overwrite is False:\n                                # Raise error if map exists and no overwrite flag is\n                                # given.\n                                self.msgr.fatal(",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.pygrass.gis.__init__:[493:512]\n==grass.pygrass.gis.region:[665:684]\nif __name__ == \"__main__\":\n    import doctest\n    from grass.pygrass import utils\n    from grass.script.core import run_command\n\n    utils.create_test_vector_map(test_vector_name)\n    run_command(\"g.region\", n=50, s=0, e=60, w=0, res=1)\n    run_command(\"r.mapcalc\", expression=\"%s = 1\" % (test_raster_name), overwrite=True)\n    run_command(\"g.region\", n=40, s=0, e=40, w=0, res=2)\n\n    doctest.testmod()\n\n    # Remove the generated vector map, if exist\n    mset = utils.get_mapset_vector(test_vector_name, mapset=\"\")\n    if mset:\n        run_command(\"g.remove\", flags=\"f\", type=\"vector\", name=test_vector_name)\n    mset = utils.get_mapset_raster(test_raster_name, mapset=\"\")\n    if mset:\n        run_command(\"g.remove\", flags=\"f\", type=\"raster\", name=test_raster_name)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_algebra:[825:837]\n==grass.temporal.temporal_vector_algebra:[221:233]\n            \"EQUAL\",\n            \"FOLLOWS\",\n            \"PRECEDES\",\n            \"OVERLAPS\",\n            \"OVERLAPPED\",\n            \"DURING\",\n            \"STARTS\",\n            \"FINISHES\",\n            \"CONTAINS\",\n            \"STARTED\",\n            \"FINISHED\",\n        ]",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.spatial_topology_dataset_connector:[295:310]\n==grass.temporal.temporal_topology_dataset_connector:[478:493]\n        count = 0\n        string = \"\"\n        for map_ in map_list:\n            if line_wrap and count > 0 and count % 3 == 0:\n                string += \"\\n | ............................ \"\n                count = 0\n            if count == 0:\n                string += map_.get_id()\n            else:\n                string += \",%s\" % map_.get_id()\n            count += 1\n\n        return string\n\n    # Set the properties",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.abstract_space_time_dataset:[1020:1032]\n==grass.temporal.aggregation:[86:98]\n            where = create_temporal_relation_sql_where_statement(\n                start,\n                end,\n                use_start,\n                use_during,\n                use_overlap,\n                use_contain,\n                use_equal,\n                use_follows,\n                use_precedes,\n            )\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_algebra:[2434:2445]\n==grass.temporal.temporal_raster_base_algebra:[778:789]\n                            )\n\n                            if (\n                                map_i.is_time_absolute() is True\n                                and self.time_suffix\n                                and granularity is not None\n                                and self.time_suffix == \"gran\"\n                            ):\n                                suffix = create_suffix_from_datetime(\n                                    map_i.temporal_extent.get_start_time(), granularity\n                                )",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_raster_base_algebra:[341:378]\n==grass.temporal.temporal_vector_algebra:[281:309]\n                        gvar = GlobalTemporalVar()\n                        gvar.td = len(relationmaplist)\n                        if \"map_value\" in dir(map_i):\n                            map_i.map_value.append(gvar)\n                        else:\n                            map_i.map_value = gvar\n                    # Use unique identifier, since map names may be equal\n                    resultdict[map_i.uid] = map_i\n        resultlist = resultdict.values()\n\n        # Sort list of maps chronological.\n        resultlist = sorted(resultlist, key=AbstractDatasetComparisonKeyStartTime)\n\n        return resultlist\n\n    def overlay_cmd_value(self, map_i, tbrelations, function, topolist=[\"EQUAL\"]):\n        \"\"\"Function to evaluate two map lists by given overlay operator.\n\n        :param map_i: Map object with temporal extent.\n        :param tbrelations: List of temporal relation to map_i.\n        :param topolist: List of strings for given temporal relations.\n        :param function: Overlay operator, &|+^~.\n\n        :return: Map object with command list with  operators that has been\n                      evaluated by implicit aggregration.\n        \"\"\"\n        # Build comandlist list with elements from related maps and given relation\n        # operator.",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.jupyter.setup:[98:111]\n==grass.script.setup:[312:324]\n        mapset_path = resolve_mapset_path(path=path, location=location, mapset=mapset)\n        if not is_mapset_valid(mapset_path):\n            raise ValueError(\n                _(\"Mapset {path} is not valid: {reason}\").format(\n                    path=mapset_path.path,\n                    reason=get_mapset_invalid_reason(\n                        mapset_path.directory, mapset_path.location, mapset_path.mapset\n                    ),\n                )\n            )\n        # This requires direct session file modification using g.gisenv because\n        # g.mapset locks the mapset which is not how init and finish behave.\n        # For code simplicity, we just change all even when only mapset is changed.",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_raster_algebra:[82:93]\n==grass.temporal.temporal_raster_base_algebra:[180:192]\n            self,\n            pid=pid,\n            run=run,\n            debug=debug,\n            spatial=spatial,\n            register_null=register_null,\n            dry_run=dry_run,\n            nprocs=nprocs,\n            time_suffix=time_suffix,\n        )\n\n    def check_null(self, t):",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.script.raster3d:[101:111]\n==grass.script.raster:[136:146]\n            file=\"-\",\n            stdin=e,\n            env=env,\n            seed=seed,\n            quiet=quiet,\n            superquiet=superquiet,\n            verbose=verbose,\n            overwrite=overwrite,\n        )\n    except CalledModuleError:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_algebra:[1156:1185]\n==grass.temporal.temporal_vector_algebra:[399:422]\n                        if returncode == 0:\n                            break\n                        # Append map to result map list.\n                        elif returncode == 1:\n                            # resultlist.append(map_new)\n                            resultdict[map_new.get_id()] = map_new\n                    if returncode == 0:\n                        break\n            # Append map to result map list.\n            # if returncode == 1:\n            #    resultlist.append(map_new)\n        # Get sorted map objects as values from result dictionary.\n        resultlist = resultdict.values()\n        resultlist = sorted(resultlist, key=AbstractDatasetComparisonKeyStartTime)\n        return resultlist\n\n    def p_statement_assign(self, t):\n        # The expression should always return a list of maps.\n        \"\"\"\n        statement : stds EQUALS expr\n\n        \"\"\"\n        # Execute the command lists",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_algebra:[1941:1954]\n==grass.temporal.temporal_vector_algebra:[248:263]\n        for topo in topolist:\n            if topo.upper() not in topologylist:\n                raise SyntaxError(\"Unpermitted temporal relation name '\" + topo + \"'\")\n\n        # Create temporal topology for maplistA to maplistB.\n        tb = SpatioTemporalTopologyBuilder()\n        # Dictionary with different spatial variables used for topology builder.\n        spatialdict = {\"strds\": \"2D\", \"stvds\": \"2D\", \"str3ds\": \"3D\"}\n        # Build spatial temporal topology\n        if self.spatial:\n            tb.build(maplistA, maplistB, spatial=spatialdict[self.stdstype])\n        else:\n            tb.build(maplistA, maplistB)\n        # Iterate through maps in maplistA and search for relationships given\n        # in topolist.",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_algebra:[768:777]\n==grass.temporal.temporal_vector_algebra:[122:131]\n    precedence = (\n        (\n            \"left\",\n            \"T_SELECT_OPERATOR\",\n            \"T_SELECT\",\n            \"T_NOT_SELECT\",\n            \"T_HASH_OPERATOR\",\n            \"HASH\",\n        ),  # 1",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_raster3d_algebra:[123:135]\n==grass.temporal.temporal_raster_algebra:[167:179]\n                if new_index < max_index and new_index >= 0:\n                    map_i_t_extent = map_i.get_temporal_extent()\n                    # Get neighbouring map and set temporal extent.\n                    map_n = maplist[new_index]\n                    # Generate an intermediate map for the result map list.\n                    map_new = self.generate_new_map(map_n, bool_op=\"and\", copy=True)\n                    map_new.set_temporal_extent(map_i_t_extent)\n                    # Create r.mapcalc expression string for the operation.\n                    if \"cmd_list\" in dir(map_new) and len(t) == 5:\n                        cmdstring = \"%s\" % (map_new.cmd_list)\n                    elif \"cmd_list\" not in dir(map_new) and len(t) == 5:\n                        cmdstring = \"%s\" % (map_n.get_id())",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_raster3d_algebra:[39:48]\n==grass.temporal.temporal_raster_algebra:[81:90]\n        TemporalRasterBaseAlgebraParser.__init__(\n            self,\n            pid=pid,\n            run=run,\n            debug=debug,\n            spatial=spatial,\n            register_null=register_null,\n            dry_run=dry_run,\n            nprocs=nprocs,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_algebra:[2505:2515]\n==grass.temporal.temporal_raster_base_algebra:[897:906]\n                        \"absolute\",\n                        t[1],\n                        t[1],\n                        \"mean\",\n                        self.dbif,\n                        overwrite=self.overwrite,\n                    )\n                for map_i in register_list:\n                    # Put the map into the process dictionary",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_algebra:[2578:2586]\n==grass.temporal.temporal_raster_base_algebra:[893:901]\n                    if self.dry_run is False:\n                        resultstds = open_new_stds(\n                            t[1],\n                            self.stdstype,\n                            \"absolute\",\n                            t[1],\n                            t[1],\n                            \"mean\",",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_raster3d_algebra:[40:48]\n==grass.temporal.temporal_raster_base_algebra:[180:188]\n            self,\n            pid=pid,\n            run=run,\n            debug=debug,\n            spatial=spatial,\n            register_null=register_null,\n            dry_run=dry_run,\n            nprocs=nprocs,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.imaging.images2gif:[110:122]\n==grass.imaging.images2ims:[52:64]\n    images2 = []\n\n    for im in images:\n        if PIL and isinstance(im, PIL.Image.Image):\n            # We assume PIL images are alright\n            images2.append(im)\n\n        elif np and isinstance(im, np.ndarray):\n            # Check and convert dtype\n            if im.dtype == np.uint8:\n                images2.append(im)  # Ok\n            elif im.dtype in [np.float32, np.float64]:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_raster_algebra:[102:113]\n==grass.temporal.temporal_vector_algebra:[155:166]\n        l.build()\n        l.lexer.input(expression)\n\n        while True:\n            tok = l.lexer.token()\n            if not tok:\n                break\n\n            if tok.type == \"STVDS\" or tok.type == \"STRDS\" or tok.type == \"STR3DS\":\n                raise SyntaxError(\"Syntax error near '%s'\" % (tok.type))\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_algebra:[2548:2558]\n==grass.temporal.temporal_raster_base_algebra:[932:942]\n                                    \"Use overwrite flag.\" % map_i.get_map_id()\n                                )\n                            else:\n                                # Insert map into temporal database.\n                                if self.dry_run is False:\n                                    map_i.insert(dbif)\n\n                        # Register map in result space time dataset.\n                        if self.dry_run is False:\n                            success = resultstds.register_map(map_i, dbif)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_algebra:[1662:1672]\n==grass.temporal.temporal_raster_base_algebra:[520:531]\n        for topo in temporal_topo_list:\n            if topo.upper() in temporal_relations.keys():\n                relationmaplist = temporal_relations[topo.upper()]\n                for relationmap in relationmaplist:\n                    if (\n                        self._check_spatial_topology_relation(\n                            spatial_topo_list, map_i, relationmap\n                        )\n                        is True\n                    ):",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_algebra:[1665:1672]\n==grass.temporal.temporal_raster_base_algebra:[466:473]\n                for relationmap in relationmaplist:\n                    if (\n                        self._check_spatial_topology_relation(\n                            spatial_topo_list, map_i, relationmap\n                        )\n                        is True\n                    ):",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.extract:[249:256]\n==grass.temporal.mapcalc:[360:369]\n                        if (\n                            new_map.metadata.get_min() is None\n                            and new_map.metadata.get_max() is None\n                        ):\n                            if not register_null:\n                                empty_maps.append(new_map)\n                                continue",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.extract:[195:202]\n==grass.temporal.mapcalc:[312:320]\n                proc_count = 0\n                exitcodes = 0\n                for proc in proc_list:\n                    proc.join()\n                    exitcodes += proc.exitcode\n\n                if exitcodes != 0:\n                    dbif.close()",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.abstract_space_time_dataset:[953:962]\n==grass.temporal.aggregation:[48:57]\n        use_start = False\n        use_during = False\n        use_overlap = False\n        use_contain = False\n        use_equal = False\n        use_follows = False\n        use_precedes = False\n\n        # Initialize the methods",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.abstract_map_dataset:[320:330]\n==grass.temporal.abstract_space_time_dataset:[169:184]\n        print(\n            \" +----------------------------------------------------------------------------+\"  # noqa: E501\n        )\n\n    def print_shell_info(self):\n        \"\"\"Print information about this class in shell style\"\"\"\n        self.base.print_shell_info()\n        self.temporal_extent.print_shell_info()\n        self.spatial_extent.print_shell_info()\n        self.metadata.print_shell_info()\n\n    def print_history(self):\n        \"\"\"Print history information about this class in human readable\n        shell style\n        \"\"\"",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.pygrass.rpc.__init__:[211:223]\n==grass.temporal.c_libraries_interface:[1233:1245]\n        conn.close()\n        lock.release()\n\n    CALLBACK = CFUNCTYPE(c_void_p, c_void_p)\n    CALLBACK.restype = c_void_p\n    CALLBACK.argtypes = c_void_p\n\n    cerror_handler = CALLBACK(error_handler)\n\n    libgis.G_add_error_handler(cerror_handler, None)\n\n    # Crerate the function array",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_raster_base_algebra:[603:617]\n==grass.temporal.temporal_vector_algebra:[393:404]\n                            )\n                        # Create overlaid map extent.\n                        returncode = self.overlay_map_extent(\n                            map_new, map_j, \"and\", temp_op=temporal\n                        )\n                        # Stop the loop if no temporal or spatial relationship exist.\n                        if returncode == 0:\n                            break\n                        # Append map to result map list.\n                        elif returncode == 1:\n                            # resultlist.append(map_new)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.pygrass.raster.__init__:[717:727]\n==grass.pygrass.rpc.__init__:[464:474]\nif __name__ == \"__main__\":\n    import doctest\n    from grass.pygrass.modules import Module\n\n    Module(\"g.region\", n=40, s=0, e=40, w=0, res=10)\n    Module(\n        \"r.mapcalc\",\n        expression=\"%s = row() + (10 * col())\" % (test_raster_name),\n        overwrite=True,\n    )",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.gunittest.multirunner:[19:30]\n==grass.script.utils:[160:188]\n    try:\n        # Python >= 3.11\n        encoding = locale.getencoding()\n    except AttributeError:\n        encoding = locale.getdefaultlocale()[1]\n    if not encoding:\n        encoding = \"UTF-8\"\n    return encoding\n\n\ndef decode(bytes_, encoding=None):",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.script.raster3d:[103:110]\n==grass.script.raster:[198:205]\n        env=env,\n        seed=seed,\n        quiet=quiet,\n        superquiet=superquiet,\n        verbose=verbose,\n        overwrite=overwrite,\n    )",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.script.raster3d:[66:100]\n==grass.script.raster:[101:135]\n    return kv\n\n\ndef mapcalc3d(\n    exp,\n    quiet=False,\n    superquiet=False,\n    verbose=False,\n    overwrite=False,\n    seed=None,\n    env=None,\n    **kwargs,\n):\n    \"\"\"Interface to r3.mapcalc.\n\n    :param str exp: expression\n    :param bool quiet: True to run quietly (<tt>--q</tt>)\n    :param bool superquiet: True to run extra quietly (<tt>--qq</tt>)\n    :param bool verbose: True to run verbosely (<tt>--v</tt>)\n    :param bool overwrite: True to enable overwriting the output (<tt>--o</tt>)\n    :param seed: an integer used to seed the random-number generator for the\n                 rand() function, or 'auto' to generate a random seed\n    :param dict env: dictionary of environment variables for child process\n    :param kwargs:\n    \"\"\"\n\n    if seed == \"auto\":\n        seed = hash((os.getpid(), time.time())) % (2**32)\n\n    t = string.Template(exp)\n    e = t.substitute(**kwargs)\n\n    try:\n        write_command(",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.jupyter.map3d:[99:110]\n==grass.jupyter.map:[104:115]\n        self._tmpdir = (\n            tempfile.TemporaryDirectory()  # pylint: disable=consider-using-with\n        )\n\n        def cleanup(tmpdir):\n            tmpdir.cleanup()\n\n        weakref.finalize(self, cleanup, self._tmpdir)\n\n        if filename:\n            self._filename = filename",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_algebra:[2432:2445]\n==grass.temporal.temporal_raster_base_algebra:[817:830]\n                    newident = create_numeric_suffix(\n                        self.basename, count, \"%0\" + str(leadzero)\n                    )\n\n                    if (\n                        map_i.is_time_absolute() is True\n                        and self.time_suffix\n                        and granularity is not None\n                        and self.time_suffix == \"gran\"\n                    ):\n                        suffix = create_suffix_from_datetime(\n                            map_i.temporal_extent.get_start_time(), granularity\n                        )",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_algebra:[2449:2455]\n==grass.temporal.temporal_raster_base_algebra:[791:797]\n                            elif (\n                                map_i.is_time_absolute() is True\n                                and self.time_suffix\n                                and self.time_suffix == \"time\"\n                            ):\n                                suffix = create_time_suffix(map_i)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_algebra:[2383:2391]\n==grass.temporal.temporal_raster_base_algebra:[761:770]\n                granularity = None\n                if len(t[3]) > 0 and self.time_suffix == \"gran\":\n                    map_i = t[3][0]\n                    if map_i.is_time_absolute() is True:\n                        granularity = compute_absolute_time_granularity(t[3])\n\n                # The first loop is to check if the raster maps exists in the database\n                # Compute the size of the numerical suffix\n                num = len(t[3])",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.extract:[217:225]\n==grass.temporal.mapcalc:[339:345]\n            title,\n            description,\n            semantic_type,\n            dbif,\n            gscript.overwrite(),\n        )\n\n        # collect empty maps to remove them",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.pygrass.vector.find:[677:691]\n==grass.pygrass.vector.geometry:[1966:1980]\nif __name__ == \"__main__\":\n    import doctest\n    from grass.pygrass import utils\n\n    utils.create_test_vector_map(test_vector_name)\n    doctest.testmod()\n\n    \"\"\"Remove the generated vector map, if exist\"\"\"\n    from grass.pygrass.utils import get_mapset_vector\n    from grass.script.core import run_command\n\n    mset = get_mapset_vector(test_vector_name, mapset=\"\")\n    if mset:\n        run_command(\"g.remove\", flags=\"f\", type=\"vector\", name=test_vector_name)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.abstract_space_time_dataset:[973:979]\n==grass.temporal.aggregation:[68:75]\n                    use_equal = True\n                if name == \"follows\":\n                    use_follows = True\n                if name == \"precedes\":\n                    use_precedes = True\n        else:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.abstract_space_time_dataset:[964:970]\n==grass.temporal.aggregation:[59:65]\n                if name == \"start\":\n                    use_start = True\n                if name == \"during\":\n                    use_during = True\n                if name == \"overlap\":\n                    use_overlap = True",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.abstract_space_time_dataset:[1000:1007]\n==grass.temporal.aggregation:[49:57]\n            use_during = False\n            use_overlap = False\n            use_contain = False\n            use_equal = False\n            use_follows = False\n            use_precedes = False\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.abstract_space_time_dataset:[954:962]\n==grass.temporal.aggregation:[79:86]\n        use_during = False\n        use_overlap = False\n        use_contain = False\n        use_equal = False\n        use_follows = False\n        use_precedes = False\n\n        # Initialize the methods",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.experimental.mapset:[105:119]\n==grass.script.setup:[405:424]\n        if not self.active:\n            raise ValueError(\n                \"Attempt to use inactive (finished) session as a context manager\"\n            )\n        return self\n\n    def __exit__(self, type, value, traceback):  # pylint: disable=redefined-builtin\n        \"\"\"Exit the context manager context.\n\n        Finishes the existing session.\n        \"\"\"\n        self.finish()\n\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.pygrass.gis.region:[633:639]\n==grass.pygrass.raster.abstract:[212:218]\n            north=self.north,\n            south=self.south,\n            east=self.east,\n            west=self.west,\n            top=self.top,\n            bottom=self.bottom,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.script.raster:[226:233]\n==grass.script.vector:[399:406]\n    coord_list = list()\n    if isinstance(coord, tuple):\n        coord_list.append(\"%f,%f\" % (coord[0], coord[1]))\n    else:\n        for e, n in coord:\n            coord_list.append(\"%f,%f\" % (e, n))\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.pygrass.rpc.__init__:[230:239]\n==grass.temporal.c_libraries_interface:[1269:1278]\n    while True:\n        # Avoid busy waiting\n        conn.poll(None)\n        data = conn.recv()\n        lock.acquire()\n        functions[data[0]](lock, conn, data)\n        lock.release()\n\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.pygrass.vector.__init__:[969:983]\n==grass.pygrass.vector.table:[1290:1304]\nif __name__ == \"__main__\":\n    import doctest\n    from grass.pygrass import utils\n\n    utils.create_test_vector_map(test_vector_name)\n    doctest.testmod()\n\n    \"\"\"Remove the generated vector map, if exist\"\"\"\n    from grass.pygrass.utils import get_mapset_vector\n    from grass.script.core import run_command\n\n    mset = get_mapset_vector(test_vector_name, mapset=\"\")\n    if mset:\n        run_command(\"g.remove\", flags=\"f\", type=\"vector\", name=test_vector_name)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.imaging.images2gif:[669:679]\n==grass.imaging.images2swf:[974:982]\n    if not asNumpy:\n        images2 = images\n        images = []\n        for im in images2:\n            images.append(PIL.Image.fromarray(im))\n\n    # Done\n    return images\n\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_raster_base_algebra:[894:900]\n==grass.temporal.temporal_vector_algebra:[544:550]\n                    resultstds = open_new_stds(\n                        t[1],\n                        self.stdstype,\n                        \"absolute\",\n                        t[1],\n                        t[1],",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.pygrass.gis.__init__:[506:512]\n==grass.pygrass.utils:[607:613]\n    mset = utils.get_mapset_vector(test_vector_name, mapset=\"\")\n    if mset:\n        run_command(\"g.remove\", flags=\"f\", type=\"vector\", name=test_vector_name)\n    mset = utils.get_mapset_raster(test_raster_name, mapset=\"\")\n    if mset:\n        run_command(\"g.remove\", flags=\"f\", type=\"raster\", name=test_raster_name)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.imaging.images2ims:[34:52]\n==grass.imaging.images2swf:[71:82]\ntry:\n    import numpy as np\nexcept ImportError:\n    np = None\n\ntry:\n    import PIL\nexcept ImportError:\n    PIL = None\n\n\ndef checkImages(images):\n    \"\"\"Check numpy images and correct intensity range etc.\n    The same for all movie formats.\n\n    :param images:\n    \"\"\"\n    # Init results",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_raster3d_algebra:[148:161]\n==grass.temporal.temporal_raster_algebra:[190:203]\n                        )\n                    # Set new command list for map.\n                    map_new.cmd_list = cmdstring\n                    # Append map with updated command list to result list.\n                    resultlist.append(map_new)\n\n            t[0] = resultlist\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_raster3d_algebra:[76:101]\n==grass.temporal.temporal_raster_algebra:[122:148]\n        self.basename = basename\n        self.expression = expression\n        self.parser.parse(expression)\n\n        return self.process_chain_dict\n\n    def p_statement_assign(self, t):\n        # The expression should always return a list of maps.\n        \"\"\"\n        statement : stds EQUALS expr\n        \"\"\"\n        TemporalRasterBaseAlgebraParser.p_statement_assign(self, t)\n\n    def p_ts_neighbor_operation(self, t):\n        # Examples:\n        # A[1,0,-1]\n        # B[-2]\n        # C[1,-2,1,3]\n        \"\"\"\n        expr : stds L_SPAREN number COMMA number COMMA number R_SPAREN\n             | stds L_SPAREN number R_SPAREN\n             | stds L_SPAREN number COMMA number COMMA number COMMA number R_SPAREN\n        \"\"\"\n        # Check input stds.\n        maplist = self.check_stds(t[1])",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.list_stds:[327:333]\n==grass.temporal.sampling:[158:164]\n        if end:\n            delta = end - start\n        else:\n            delta = None\n        delta_first = start - first_time\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_algebra:[2974:2980]\n==grass.temporal.temporal_raster_base_algebra:[1609:1615]\n            relations = [\"EQUAL\"]\n            temporal = \"l\"\n            function = t[2] + t[3]\n            aggregate = t[2]\n            # Build conditional values based on topological relationships.\n            complist = self.build_spatio_temporal_topology_list(",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_algebra:[2564:2571]\n==grass.temporal.temporal_raster_base_algebra:[942:949]\n                if self.dry_run is False:\n                    resultstds.update_from_registered_maps(dbif)\n\n                self.process_chain_dict[\"STDS\"][\"name\"] = t[1]\n                self.process_chain_dict[\"STDS\"][\"stdstype\"] = self.stdstype\n                self.process_chain_dict[\"STDS\"][\"temporal_type\"] = \"absolute\"\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.abstract_space_time_dataset:[999:1007]\n==grass.temporal.aggregation:[78:86]\n            use_start = True\n            use_during = False\n            use_overlap = False\n            use_contain = False\n            use_equal = False\n            use_follows = False\n            use_precedes = False\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.pygrass.gis.region:[322:327]\n==grass.pygrass.raster.abstract:[237:242]\n            \"top\",\n            \"bottom\",\n            \"nsres\",\n            \"ewres\",\n            \"tbres\",",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_operator:[219:224]\n==grass.temporal.temporal_raster_base_algebra:[116:121]\n    t_MOD = r\"[\\%]\"\n    t_DIV = r\"[\\/]\"\n    t_MULT = r\"[\\*]\"\n    t_ADD = r\"[\\+]\"\n    t_SUB = r\"[-]\"",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_operator:[190:195]\n==grass.temporal.temporal_raster_base_algebra:[96:101]\n        \"MOD\",\n        \"DIV\",\n        \"MULT\",\n        \"ADD\",\n        \"SUB\",",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.abstract_map_dataset:[1103:1110]\n==grass.temporal.abstract_space_time_dataset:[2746:2754]\n        if execute:\n            dbif.execute_transaction(statement, mapset=mapset)\n            statement = \"\"\n\n        if connection_state_changed:\n            dbif.close()\n\n        # decrease the counter",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_raster_base_algebra:[630:670]\n==grass.temporal.temporal_vector_algebra:[405:422]\n                    if returncode == 0:\n                        break\n            # Append map to result map list.\n            # if returncode == 1:\n            #    resultlist.append(map_new)\n        # Get sorted map objects as values from result dictionary.\n        resultlist = resultdict.values()\n        resultlist = sorted(resultlist, key=AbstractDatasetComparisonKeyStartTime)\n\n        return resultlist\n\n    def build_condition_cmd_list(\n        self,\n        iflist,\n        thenlist,\n        elselist=None,\n        condition_topolist=[\"EQUAL\"],\n        conclusion_topolist=[\"EQUAL\"],\n        temporal=\"l\",\n        null=False,\n    ):\n        \"\"\"This function build the r.mapcalc command strings for spatial conditionals.\n        For Example: 'if(a1 == 1, b1, c2)'\n\n        :param iflist: Map list with temporal extents and command list.\n        :param thenlist: Map list with temporal extents and command list or numeric\n                         string.\n        :param elselist: Map list with temporal extents and command list or numeric\n                         string.\n        :param condition_topolist: List of strings for given temporal relations between\n                                   conditions and conclusions.\n        :param conclusion_topolist: List of strings for given temporal relations between\n                                    conditions (then and else).\n        :param temporal: The temporal operator specifying the temporal\n                         extent operation (intersection, union, disjoint\n                         union, right reference, left reference).\n        :param null: Boolean if null map support should be activated.\n\n        :return: map list with resulting command string for given condition type.\n        \"\"\"",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_raster_base_algebra:[596:602]\n==grass.temporal.temporal_vector_algebra:[385:391]\n                            if temporal == \"r\":\n                                # Generate an intermediate map for the result map list.\n                                map_new = self.generate_new_map(\n                                    base_map=map_i,\n                                    bool_op=\"and\",\n                                    copy=True,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.grassdb.data:[31:36]\n==grass.script.core:[1427:1432]\n        \"g.findfile\",\n        flags=\"n\",\n        element=element,\n        file=name,\n        mapset=mapset,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.imaging.images2gif:[81:91]\n==grass.imaging.images2ims:[34:42]\ntry:\n    import numpy as np\nexcept ImportError:\n    np = None\n\ntry:\n    import PIL\nexcept ImportError:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.temporal.temporal_raster3d_algebra:[116:122]\n==grass.temporal.temporal_raster_algebra:[160:166]\n        if self.run:\n            resultlist = []\n            max_index = len(maplist)\n            for map_i in maplist:\n                # Get map index and temporal extent.\n                map_index = maplist.index(map_i)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "grass.utils.download",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/grass/utils/download.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==grass.jupyter.baseseriesmap:[62:70]\n==grass.jupyter.map:[173:183]\n        if not name.startswith(\"d_\"):\n            raise AttributeError(_(\"Module must begin with 'd_'\"))\n        # Reformat string\n        grass_module = name.replace(\"_\", \".\")\n        # Assert module exists\n        if not shutil.which(grass_module):\n            raise AttributeError(_(\"Cannot find GRASS module {}\").format(grass_module))\n\n        def wrapper(**kwargs):\n            # Run module",
        "message-id": "R0801"
    }
]
