"""
This type stub file was generated by pyright.
"""

import wx

"""
The ``wx.media`` module provides a widget class that allows displaying various
types of media, such as video and audio files and streaming, using native
system components.  The wxWidgets media classes are an optional part of the
build so it may not always be available on your build of wxPython.
"""
MC_NO_AUTORESIZE = ...
MEDIASTATE_STOPPED = ...
MEDIASTATE_PAUSED = ...
MEDIASTATE_PLAYING = ...
MEDIACTRLPLAYERCONTROLS_NONE = ...
MEDIACTRLPLAYERCONTROLS_STEP = ...
MEDIACTRLPLAYERCONTROLS_VOLUME = ...
MEDIACTRLPLAYERCONTROLS_DEFAULT = ...
wxEVT_MEDIA_LOADED = ...
wxEVT_MEDIA_STOP = ...
wxEVT_MEDIA_FINISHED = ...
wxEVT_MEDIA_STATECHANGED = ...
wxEVT_MEDIA_PLAY = ...
wxEVT_MEDIA_PAUSE = ...
class MediaCtrl(wx.Control):
    """
    MediaCtrl()
    MediaCtrl(parent, id=-1, fileName=wx.EmptyString, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, szBackend=wx.EmptyString, validator=wx.DefaultValidator, name="mediaCtrl")
    
    wxMediaCtrl is a class for displaying various types of media, such as
    videos, audio files, natively through native codecs.
    """
    def __init__(self, *args, **kw) -> None:
        """
        MediaCtrl()
        MediaCtrl(parent, id=-1, fileName=wx.EmptyString, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, szBackend=wx.EmptyString, validator=wx.DefaultValidator, name="mediaCtrl")
        
        wxMediaCtrl is a class for displaying various types of media, such as
        videos, audio files, natively through native codecs.
        """
        ...
    
    def Create(self, parent, id=..., fileName=..., pos=..., size=..., style=..., szBackend=..., validator=..., name=...):
        """
        Create(parent, id=-1, fileName=wx.EmptyString, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, szBackend=wx.EmptyString, validator=wx.DefaultValidator, name="mediaCtrl") -> bool
        
        Creates this control.
        """
        ...
    
    def GetBestSize(self):
        """
        GetBestSize() -> wx.Size
        
        Obtains the best size relative to the original/natural size of the
        video, if there is any.
        """
        ...
    
    def GetPlaybackRate(self):
        """
        GetPlaybackRate() -> double
        
        Obtains the playback rate, or speed of the media.
        """
        ...
    
    def GetState(self):
        """
        GetState() -> MediaState
        
        Obtains the state the playback of the media is in.
        """
        ...
    
    def GetVolume(self):
        """
        GetVolume() -> double
        
        Gets the volume of the media from a 0.0 to 1.0 range.
        """
        ...
    
    def Length(self):
        """
        Length() -> FileOffset
        
        Obtains the length - the total amount of time the media has in
        milliseconds.
        """
        ...
    
    def Load(self, fileName):
        """
        Load(fileName) -> bool
        
        Loads the file that fileName refers to.
        """
        ...
    
    def LoadURI(self, uri):
        """
        LoadURI(uri) -> bool
        
        Loads the location that uri refers to.
        """
        ...
    
    def LoadURIWithProxy(self, uri, proxy):
        """
        LoadURIWithProxy(uri, proxy) -> bool
        
        Loads the location that uri refers to with the proxy proxy.
        """
        ...
    
    def Pause(self):
        """
        Pause() -> bool
        
        Pauses playback of the media.
        """
        ...
    
    def Play(self):
        """
        Play() -> bool
        
        Resumes playback of the media.
        """
        ...
    
    def Seek(self, where, mode=...):
        """
        Seek(where, mode=wx.FromStart) -> FileOffset
        
        Seeks to a position within the media.
        """
        ...
    
    def SetPlaybackRate(self, dRate):
        """
        SetPlaybackRate(dRate) -> bool
        
        Sets the playback rate, or speed of the media, to that referred by
        dRate.
        """
        ...
    
    def SetVolume(self, dVolume):
        """
        SetVolume(dVolume) -> bool
        
        Sets the volume of the media from a 0.0 to 1.0 range to that referred
        by dVolume.
        """
        ...
    
    def ShowPlayerControls(self, flags=...):
        """
        ShowPlayerControls(flags=MEDIACTRLPLAYERCONTROLS_DEFAULT) -> bool
        
        A special feature to wxMediaCtrl.
        """
        ...
    
    def Stop(self):
        """
        Stop() -> bool
        
        Stops the media.
        """
        ...
    
    def Tell(self):
        """
        Tell() -> FileOffset
        
        Obtains the current position in time within the media in milliseconds.
        """
        ...
    
    BestSize = ...
    PlaybackRate = ...
    State = ...
    Volume = ...


class MediaEvent(wx.NotifyEvent):
    """
    MediaEvent(commandType=wx.wxEVT_NULL, winid=0)
    
    Event wxMediaCtrl uses.
    """
    def __init__(self, commandType=..., winid=...) -> None:
        """
        MediaEvent(commandType=wx.wxEVT_NULL, winid=0)
        
        Event wxMediaCtrl uses.
        """
        ...
    


USE_MEDIACTRL = ...
EVT_MEDIA_LOADED = ...
EVT_MEDIA_STOP = ...
EVT_MEDIA_FINISHED = ...
EVT_MEDIA_STATECHANGED = ...
EVT_MEDIA_PLAY = ...
EVT_MEDIA_PAUSE = ...
MEDIABACKEND_DIRECTSHOW = ...
MEDIABACKEND_MCI = ...
MEDIABACKEND_QUICKTIME = ...
MEDIABACKEND_GSTREAMER = ...
MEDIABACKEND_REALPLAYER = ...
MEDIABACKEND_WMP10 = ...
