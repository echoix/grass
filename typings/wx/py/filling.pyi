"""
This type stub file was generated by pyright.
"""

import wx
from . import editwindow

"""Filling is the gui tree control through which a user can navigate
the local namespace or any object."""
__author__ = ...
COMMONTYPES = ...
DOCTYPES = ...
SIMPLETYPES = ...
class FillingTree(wx.TreeCtrl):
    """FillingTree based on TreeCtrl."""
    name = ...
    def __init__(self, parent, id=..., pos=..., size=..., style=..., rootObject=..., rootLabel=..., rootIsNamespace=..., static=...) -> None:
        """Create FillingTree instance."""
        ...
    
    def push(self, command, more): # -> None:
        """Receiver for Interpreter.push signal."""
        ...
    
    def OnItemExpanding(self, event): # -> None:
        """Add children to the item."""
        ...
    
    def OnItemCollapsed(self, event): # -> None:
        """Remove all children from the item."""
        ...
    
    def OnSelChanged(self, event): # -> None:
        """Display information about the item."""
        ...
    
    def OnItemActivated(self, event): # -> None:
        """Launch a DirFrame."""
        ...
    
    def objHasChildren(self, obj): # -> bool:
        """Return true if object has children."""
        ...
    
    def objGetChildren(self, obj): # -> dict[Any, Any]:
        """Return dictionary with attributes or contents of object."""
        ...
    
    def addChildren(self, item): # -> None:
        ...
    
    def display(self): # -> None:
        ...
    
    def getFullName(self, item, partial=...):
        """Return a syntactically proper name for item."""
        ...
    
    def setText(self, text): # -> None:
        """Display information about the current selection."""
        ...
    
    def setStatusText(self, text): # -> None:
        """Display status information."""
        ...
    


class FillingText(editwindow.EditWindow):
    """FillingText based on StyledTextCtrl."""
    name = ...
    def __init__(self, parent, id=..., pos=..., size=..., style=..., static=...) -> None:
        """Create FillingText instance."""
        ...
    
    def push(self, command, more): # -> None:
        """Receiver for Interpreter.push signal."""
        ...
    
    def SetText(self, *args, **kwds): # -> None:
        ...
    


class Filling(wx.SplitterWindow):
    """Filling based on wxSplitterWindow."""
    name = ...
    def __init__(self, parent, id=..., pos=..., size=..., style=..., name=..., rootObject=..., rootLabel=..., rootIsNamespace=..., static=...) -> None:
        """Create a Filling instance."""
        ...
    
    def OnChanged(self, event): # -> None:
        ...
    
    def LoadSettings(self, config): # -> None:
        ...
    
    def SaveSettings(self, config): # -> None:
        ...
    


class FillingFrame(wx.Frame):
    """Frame containing the namespace tree component."""
    name = ...
    def __init__(self, parent=..., id=..., title=..., pos=..., size=..., style=..., rootObject=..., rootLabel=..., rootIsNamespace=..., static=...) -> None:
        """Create FillingFrame instance."""
        ...
    


class App(wx.App):
    """PyFilling standalone application."""
    def OnInit(self): # -> Literal[True]:
        ...
    


