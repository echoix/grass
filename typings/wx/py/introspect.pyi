"""
This type stub file was generated by pyright.
"""

"""Provides a variety of introspective-type support functions for
things like call tips and command auto completion."""
__author__ = ...
def getAutoCompleteList(command=..., locals=..., includeMagic=..., includeSingle=..., includeDouble=...): # -> filter[str] | list[str]:
    """Return list of auto-completion options for command.

    The list of options will be based on the locals namespace."""
    ...

def getAttributeNames(obj, includeMagic=..., includeSingle=..., includeDouble=...): # -> filter[str] | list[str]:
    """Return list of unique attributes, including inherited, for obj."""
    ...

def hasattrAlwaysReturnsTrue(obj): # -> bool:
    ...

def getAllAttributeNames(obj): # -> dict[Any, Any]:
    """Return dict of all attributes, including inherited, for an object.

    Recursively walk through a class and all base classes.
    """
    ...

def getCallTip(command=..., locals=...): # -> tuple[Literal[''], Literal[''], Literal['']] | tuple[str | Any, str | Any, str | Any]:
    """For a command, return a tuple of object name, argspec, tip text.

    The call tip information will be based on the locals namespace."""
    ...

def getRoot(command, terminator=...):
    """Return the rightmost root portion of an arbitrary Python command.

    Return only the root portion that can be eval()'d without side
    effects.  The command would normally terminate with a '(' or
    '.'. The terminator and anything after the terminator will be
    dropped."""
    ...

def getTokens(command): # -> list[Any]:
    """Return list of token tuples for command."""
    ...

def rtrimTerminus(command, terminator=...):
    """Return command minus anything that follows the final terminator."""
    ...

def getBaseObject(obj): # -> tuple[BuiltinFunctionType | Callable[..., Any] | MethodType | Any | type[Any] | Callable[..., object], Literal[0, 1]]:
    """Return base object and dropSelf indicator for an object."""
    ...

def getConstructor(obj): # -> None:
    """Return constructor for class object, or None if there isn't one."""
    ...

