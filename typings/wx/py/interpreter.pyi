"""
This type stub file was generated by pyright.
"""

from code import InteractiveInterpreter

"""Interpreter executes Python commands."""
__author__ = ...
class Interpreter(InteractiveInterpreter):
    """Interpreter based on code.InteractiveInterpreter."""
    def __init__(self, locals=..., rawin=..., stdin=..., stdout=..., stderr=..., showInterpIntro=...) -> None:
        """Create an interactive interpreter object."""
        ...
    
    def push(self, command, astMod=...): # -> bool:
        """Send command to the interpreter to be executed.

        Because this may be called recursively, we append a new list
        onto the commandBuffer list and then append commands into
        that.  If the passed in command is part of a multi-line
        command we keep appending the pieces to the last list in
        commandBuffer until we have a complete command. If not, we
        delete that last list."""
        ...
    
    def runsource(self, source): # -> bool:
        """Compile and run source code in the interpreter."""
        ...
    
    def runModule(self, mod): # -> Literal[False]:
        """Compile and run an ast module in the interpreter."""
        ...
    
    def getAutoCompleteKeys(self): # -> list[int]:
        """Return list of auto-completion keycodes."""
        ...
    
    def getAutoCompleteList(self, command=..., *args, **kwds): # -> filter[str] | list[str]:
        """Return list of auto-completion options for a command.

        The list of options will be based on the locals namespace."""
        ...
    
    def getCallTip(self, command=..., *args, **kwds): # -> tuple[Literal[''], Literal[''], Literal['']] | tuple[str | Any, str | Any, str | Any]:
        """Return call tip text for a command.

        Call tip information will be based on the locals namespace."""
        ...
    


class InterpreterAlaCarte(Interpreter):
    """Demo Interpreter."""
    def __init__(self, locals, rawin, stdin, stdout, stderr, ps1=..., ps2=...) -> None:
        """Create an interactive interpreter object."""
        ...
    


