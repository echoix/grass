"""
This type stub file was generated by pyright.
"""

import wx

"""Base frame with menu."""
__author__ = ...
ID_NEW = ...
ID_OPEN = ...
ID_REVERT = ...
ID_CLOSE = ...
ID_SAVE = ...
ID_SAVEAS = ...
ID_PRINT = ...
ID_EXIT = ...
ID_UNDO = ...
ID_REDO = ...
ID_CUT = ...
ID_COPY = ...
ID_PASTE = ...
ID_CLEAR = ...
ID_SELECTALL = ...
ID_EMPTYBUFFER = ...
ID_ABOUT = ...
ID_HELP = ...
ID_AUTOCOMP_SHOW = ...
ID_AUTOCOMP_MAGIC = ...
ID_AUTOCOMP_SINGLE = ...
ID_AUTOCOMP_DOUBLE = ...
ID_CALLTIPS_SHOW = ...
ID_CALLTIPS_INSERT = ...
ID_COPY_PLUS = ...
ID_NAMESPACE = ...
ID_PASTE_PLUS = ...
ID_WRAP = ...
ID_TOGGLE_MAXIMIZE = ...
ID_SHOW_LINENUMBERS = ...
ID_ENABLESHELLMODE = ...
ID_ENABLEAUTOSYMPY = ...
ID_AUTO_SAVESETTINGS = ...
ID_SAVEACOPY = ...
ID_SAVEHISTORY = ...
ID_SAVEHISTORYNOW = ...
ID_CLEARHISTORY = ...
ID_SAVESETTINGS = ...
ID_DELSETTINGSFILE = ...
ID_EDITSTARTUPSCRIPT = ...
ID_EXECSTARTUPSCRIPT = ...
ID_SHOWPYSLICESTUTORIAL = ...
ID_FIND = ...
ID_FINDNEXT = ...
ID_FINDPREVIOUS = ...
ID_SHOWTOOLS = ...
ID_HIDEFOLDINGMARGIN = ...
class Frame(wx.Frame):
    """Frame with standard menu items."""
    def __init__(self, parent=..., id=..., title=..., pos=..., size=..., style=..., shellName=...) -> None:
        """Create a Frame instance."""
        ...
    
    def OnIconize(self, event): # -> None:
        """Event handler for Iconize."""
        ...
    
    def OnClose(self, event): # -> None:
        """Event handler for closing."""
        ...
    
    def OnShowLineNumbers(self, event): # -> None:
        ...
    
    def OnToggleMaximize(self, event): # -> None:
        ...
    
    def OnFileNew(self, event): # -> None:
        ...
    
    def OnFileOpen(self, event): # -> None:
        ...
    
    def OnFileRevert(self, event): # -> None:
        ...
    
    def OnFileClose(self, event): # -> None:
        ...
    
    def OnFileSave(self, event): # -> None:
        ...
    
    def OnFileSaveAs(self, event): # -> None:
        ...
    
    def OnFileSaveACopy(self, event): # -> None:
        ...
    
    def OnFileUpdateNamespace(self, event): # -> None:
        ...
    
    def OnFilePrint(self, event): # -> None:
        ...
    
    def OnExit(self, event): # -> None:
        ...
    
    def OnUndo(self, event): # -> None:
        ...
    
    def OnRedo(self, event): # -> None:
        ...
    
    def OnCut(self, event): # -> None:
        ...
    
    def OnCopy(self, event): # -> None:
        ...
    
    def OnCopyPlus(self, event): # -> None:
        ...
    
    def OnPaste(self, event): # -> None:
        ...
    
    def OnPastePlus(self, event): # -> None:
        ...
    
    def OnClear(self, event): # -> None:
        ...
    
    def OnEmptyBuffer(self, event): # -> None:
        ...
    
    def OnSelectAll(self, event): # -> None:
        ...
    
    def OnAbout(self, event): # -> None:
        """Display an About window."""
        ...
    
    def OnHelp(self, event): # -> None:
        """Display a Help window."""
        ...
    
    def OnAutoCompleteShow(self, event): # -> None:
        ...
    
    def OnAutoCompleteMagic(self, event): # -> None:
        ...
    
    def OnAutoCompleteSingle(self, event): # -> None:
        ...
    
    def OnAutoCompleteDouble(self, event): # -> None:
        ...
    
    def OnCallTipsShow(self, event): # -> None:
        ...
    
    def OnCallTipsInsert(self, event): # -> None:
        ...
    
    def OnWrap(self, event): # -> None:
        ...
    
    def OnSaveHistory(self, event): # -> None:
        ...
    
    def OnSaveHistoryNow(self, event): # -> None:
        ...
    
    def OnClearHistory(self, event): # -> None:
        ...
    
    def OnEnableShellMode(self, event): # -> None:
        ...
    
    def OnEnableAutoSympy(self, event): # -> None:
        ...
    
    def OnHideFoldingMargin(self, event): # -> None:
        ...
    
    def OnAutoSaveSettings(self, event): # -> None:
        ...
    
    def OnSaveSettings(self, event): # -> None:
        ...
    
    def OnDelSettingsFile(self, event): # -> None:
        ...
    
    def OnEditStartupScript(self, event): # -> None:
        ...
    
    def OnExecStartupScript(self, event): # -> None:
        ...
    
    def OnShowPySlicesTutorial(self, event): # -> None:
        ...
    
    def OnFindText(self, event): # -> None:
        ...
    
    def OnFindNext(self, event, backward=...): # -> None:
        ...
    
    def OnFindPrevious(self, event): # -> None:
        ...
    
    def OnFindClose(self, event): # -> None:
        ...
    
    def OnToggleTools(self, event): # -> None:
        ...
    
    def OnUpdateMenu(self, event):
        """Update menu items based on current status and context."""
        ...
    
    def OnActivate(self, event): # -> None:
        """
        Event Handler for losing the focus of the Frame. Should close
        Autocomplete listbox, if shown.
        """
        ...
    
    def LoadSettings(self, config): # -> None:
        """Called by derived classes to load settings specific to the Frame"""
        ...
    
    def SaveSettings(self, config): # -> None:
        """Called by derived classes to save Frame settings to a wx.Config object"""
        ...
    


class ShellFrameMixin:
    """
    A mix-in class for frames that will have a Shell or a Crust window
    and that want to add history, startupScript and other common
    functionality.
    """
    def __init__(self, config, dataDir) -> None:
        ...
    
    def OnHelp(self, event): # -> None:
        """Display a Help window."""
        ...
    
    def LoadSettings(self): # -> None:
        ...
    
    def SaveSettings(self, force=...): # -> None:
        ...
    
    def SaveHistory(self): # -> None:
        ...
    
    def LoadHistory(self): # -> None:
        ...
    
    def bufferHasChanged(self): # -> Literal[True]:
        ...
    
    def bufferSave(self): # -> None:
        ...
    
    def EditStartupScript(self): # -> None:
        ...
    


class EditStartupScriptDialog(wx.Dialog):
    def __init__(self, parent, fileName, text) -> None:
        ...
    
    def GetText(self):
        ...
    


