---
name: pytest

on:
  push:
    branches:
      - main
      - releasebranch_*
  pull_request:
    branches:
      - main
      - releasebranch_*
      - "*"

jobs:
  pytest:
    concurrency:
      group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}-${{
        matrix.os }}-${{ matrix.python-version }}
      cancel-in-progress: true

    strategy:
      matrix:
        os:
          - ubuntu-22.04
        python-version:
          - '3.8'
          - '3.10'
          - '3.12'
      fail-fast: true

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/cache/restore@v3
        id: cache
        with:
          path: cache-download
          key: ccache-${{ github.job }}-${{ matrix.os }}-python${{ matrix.python-version }}-${{ github.ref }}
      - uses: actions/upload-artifact@v4
        with:
          name: cache-${{ github.job }}-${{ matrix.os }}-python${{ matrix.python-version }}-${{ github.ref }}
          path: cache-download
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Set up Python
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install non-Python dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget git gawk findutils ccache
          xargs -a <(awk '! /^ *(#|$)/' ".github/workflows/apt.txt") -r -- \
              sudo apt-get install -y --no-install-recommends --no-install-suggests

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/workflows/python_requirements.txt
          pip install -r .github/workflows/optional_requirements.txt
          pip install pytest pytest-timeout pytest-github-actions-annotate-failures pytest-xdist

      - name: Ccache for gh actions
        uses: hendrikmuhs/ccache-action@v1.2.12
        with:
          verbose: 2
          variant: ccache
          create-symlink: true
          restore: ${{ github.ref_type != 'tag' && github.event_name != 'release' }}
          key: |
            ccache-${{ github.job }}-${{ matrix.os }}-python${{ matrix.python-version }}-${{ github.ref }}
          restore-keys: |
            ccache-${{ github.job }}-${{ matrix.os }}-python${{ matrix.python-version }}-${{ github.ref }}
            ccache-${{ github.job }}-${{ matrix.os }}-python${{ matrix.python-version }}-/refs/heads/main

      - name: Create installation directory
        run: |
          mkdir $HOME/install

      - name: Set number of cores for compilation
        run: |
          echo "MAKEFLAGS=-j$(nproc)" >> $GITHUB_ENV

      - name: Build
        run: .github/workflows/build_${{ matrix.os }}.sh $HOME/install

      - name: Add the bin directory to PATH
        run: |
          echo "$HOME/install/bin" >> $GITHUB_PATH

      - name: Test executing of the grass command
        run: .github/workflows/test_simple.sh

      - name: Run pytest
        run: |
          export PYTHONPATH=`grass --config python_path`:$PYTHONPATH
          export LD_LIBRARY_PATH=$HOME/install/grass84/lib:$LD_LIBRARY_PATH
          pytest --numprocesses auto .

      - name: Print installed versions
        if: always()
        run: .github/workflows/print_versions.sh
  pytest-success:
    name: pytest Result
    needs:
      - pytest
    if: ${{ always() }}
    uses: ./.github/workflows/verify-success.yml
    with:
      needs_context: ${{ toJson(needs) }}
