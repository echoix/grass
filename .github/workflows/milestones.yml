---
name: Assign Milestone

on:
  pull_request:
  pull_request_target:
    types: [closed]

jobs:
  assign-milestone:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged || true
    steps:
      - run: echo "pull_request is merged"
        if: github.event.pull_request.merged
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
      - run: gh pr view ${{ github.event.pull_request.html_url }}
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
      - run: gh pr view ${{ github.event.pull_request.html_url }} --json milestone
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
      - run: |
          gh pr view ${{ github.event.pull_request.html_url }} --json milestone \
            --jq .milestone.title
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
      # Retreiving the current milestoone from API instead of github context,
      # so up-to-date information is used when running after being queued or for reruns
      # Otherwise, the information should be available using
      # ${{ github.event.pull_request.milestone.title }}
      - name: Get current milestone title
        id: current-milestone
        run: |
          echo "milestone<<EOF" >> "${GITHUB_OUTPUT}"
          gh pr view ${{ github.event.pull_request.html_url }} --json milestone \
            --jq .milestone.title >> "${GITHUB_OUTPUT}"
          echo 'EOF' >> "${GITHUB_OUTPUT}"
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
      - run: echo "Has milestone"
        if: ${{ github.event.pull_request.milestone.title }}
      - run: echo "Does not have a milestone"
        if: ${{ !github.event.pull_request.milestone.title }}
      - name: PR already has a milestone
        run: echo "PR already has a milestone"
        if: ${{ steps.current-milestone.outputs.milestone }}
      - name: PR does not have a milestone
        run: echo "PR does not have a milestone"
        if: ${{ !steps.current-milestone.outputs.milestone}}
      - name: Get VERSION file
        if: ${{ !steps.current-milestone.outputs.milestone}}
        id: version-file
        run: |
          echo "version<<EOF" >> "${GITHUB_OUTPUT}"
          gh api \
            -H "Accept: application/vnd.github.raw" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "/repos/{owner}/{repo}/contents/include/VERSION?ref=${{ github.sha }}" >> "${GITHUB_OUTPUT}"
          echo "EOF" >> "${GITHUB_OUTPUT}"
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
      - name: Show version file
        if: ${{ !steps.current-milestone.outputs.milestone}}
        run: echo $VERSIONFILE
        env:
          VERSIONFILE: ${{ steps.version-file.outputs.version}}
      - name: Get milestone title from VERSION file
        if: ${{ !steps.current-milestone.outputs.milestone}}
        id: milestone
        run: |
          version=$(echo "$VERSIONFILE" | head -n 3 | xargs | sed 's/ /./g' | sed 's/\(RC\|dev\)//g')
          echo "title=$version" >> "${GITHUB_OUTPUT}"
        env:
          VERSIONFILE: ${{ steps.version-file.outputs.version}}
      - name: Show milestone title
        if: ${{ !steps.current-milestone.outputs.milestone}}
        run: echo $MILESTONE
        env:
          MILESTONE: ${{ steps.milestone.outputs.title }}
      - name: Set PR milestone
        if: ${{ !steps.current-milestone.outputs.milestone}}
        run: gh pr edit ${{ github.event.pull_request.html_url }} --milestone "${MILESTONE}"
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
          MILESTONE: ${{ steps.milestone.outputs.title }}
