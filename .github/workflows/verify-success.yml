---
name: Verify Success reusable workflow

on:
  workflow_call:
    inputs:
      needs_context:
        type: string
        required: true
        description: In the calling job that defines all the needed jobs, use $ {{ '$ {{toJson(needs)}}' }}
      fail_if_failure:
        type: boolean
        default: true
        description: If true, this workflow will fail if any job from 'needs_context was failed
      fail_if_cancelled:
          type: boolean
          default: true
          description: If true, this workflow will fail if any job from 'needs_context' was cancelled.

jobs:
  verify-success:
    name: Success
    runs-on: ubuntu-latest
    env:
      NEEDS: ${{ toJSON(fromJson(inputs.needs_context)) }}
      NEEDS_RESULT: ${{ toJson(fromJson(inputs.needs_context).*.result) }}
    steps:
      - name: Contexts of needed jobs
        run: echo "Contexts of needed jobs:" && echo "$NEEDS" && echo "Results of needed jobs:" && echo "$NEEDS_RESULT"
      - name: Check for failed jobs
        if: ${{ contains(env.NEEDS_RESULT, 'failure') && false}}
        run: echo "::error ::Some jobs failed" && exit 1
      - name: Check for cancelled jobs
        # if: ${{ inputs.fail_if_cancelled && contains(env.NEEDS_RESULT, 'cancelled') }}
        # run: echo "$MESSAGE_PREFIX$MESSAGE" && exit $EXIT_CODE
        run: echo "${{ format('{0}{1}', inputs.fail_if_cancelled && env.RESULT && '::error ::' || '',  env.MESSAGE) }}" && echo "${{ env.MESSAGE_PREFIX}}${{ env.MESSAGE}}" && exit ${{ env.EXIT_CODE}}
        env:
          RESULT: ${{ contains(env.NEEDS_RESULT, 'cancelled') }}
          MESSAGE: ${{ contains(env.NEEDS_RESULT, 'cancelled')  && 'Some jobs were cancelled' || 'No jobs were cancelled' }}
          MESSAGE_PREFIX: ${{  inputs.fail_if_cancelled && contains(env.NEEDS_RESULT, 'cancelled') && '::error ::' || '' }}
          EXIT_CODE: ${{ inputs.fail_if_cancelled && contains(env.NEEDS_RESULT, 'cancelled') && 1 || 0 }}
          RESULT2: ${{ env.RESULT}}
      - name: Check for skipped jobs
        if: ${{ contains(env.NEEDS_RESULT, 'skipped') }}
        run: echo "::error ::Some jobs were skipped" && exit 1
      - name: Check for successful jobs
        if: ${{ !contains(env.NEEDS_RESULT, 'success') }}
        run: echo "::error ::No job results were successful" && exit 1
      - run: echo "Checks passed successfully"
        if: ${{ success() }}
      - run: echo "Checks failed"
        if: ${{ !success() }}
    