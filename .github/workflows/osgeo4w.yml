---
name: OSGeo4W

on:
  push:
    branches:
      - main
      - releasebranch_*
  pull_request:

jobs:
  build:
    name: ${{ matrix.os }} build and tests

    concurrency:
      group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}-${{
        matrix.os }}
      cancel-in-progress: true

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-2019
      fail-fast: false
    permissions:
      actions: write # remove stale ccache cache

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - name: Get Date
        id: get-date
        run: |
          echo "date=$(/bin/date -u "+%Y%m%d%H%M%S")" >> $GITHUB_OUTPUT
        shell: bash
      - name: Caching .sccache
        id: cache-sccache
        uses: actions/cache@v4.0.2
        with:
          path: .sccache
          key: sccache-${{ github.job }}-${{ matrix.os }}-${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }}-${{ steps.get-date.outputs.date }}
          restore-keys: |
            sccache-${{ github.job }}-${{ matrix.os }}-${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }}
            sccache-${{ github.job }}-${{ matrix.os }}-main

      - uses: msys2/setup-msys2@cc11e9188b693c2b100158c3322424c4cc1dadea # v2.22.0
        with:
          path-type: inherit
          location: D:\
          msystem: mingw64
          update: true
          install: tar libintl make bison flex diffutils git dos2unix zip mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-fftw mingw-w64-x86_64-lapack mingw-w64-x86_64-pkgconf
            mingw-w64-x86_64-gcc mingw-w64-x86_64-ccache mingw-w64-x86_64-zlib mingw-w64-x86_64-libiconv
            mingw-w64-x86_64-bzip2 mingw-w64-x86_64-gettext mingw-w64-x86_64-libsystre
            mingw-w64-x86_64-libtre-git mingw-w64-x86_64-libwinpthread-git mingw-w64-x86_64-libpng
            mingw-w64-x86_64-pcre mingw-w64-x86_64-sccache
      - run: |
            which sccache
            echo $GITHUB_WORKSPACE
            echo $(cygpath -u $GITHUB_WORKSPACE)
            echo $(cygpath -u $GITHUB_WORKSPACE)/.sccache
            env SCCACHE_IDLE_TIMEOUT=0 SCCACHE_DIR=$(cygpath -u $GITHUB_WORKSPACE)/.sccache SCCACHE_CACHE_SIZE=${{ env.MAX_SIZE }} sccache --start-server
            sccache --help
            sccache --version
            sccache --show-stats
            sccache -z
            sccache --show-stats
        # sccache --stop-server
        shell: msys2 {0}
        env:
          MAX_SIZE: 500M

      # - name: Ccache for gh actions
      #   uses: hendrikmuhs/ccache-action@v1.2.13
      #   with:
      #     verbose: 2
      #     variant: sccache
      #     restore: ${{ github.ref_type != 'tag' && github.event_name != 'release' }}
      #     create-symlink: false
      #     # key: |
      #     #   ${{ github.job }}-${{ matrix.os }}-${{ github.ref }}
      #     # restore-keys: |
      #     #   ${{ github.job }}-${{ matrix.os }}-${{ github.ref }}
      #     #   ${{ github.job }}-${{ matrix.os }}-/refs/heads/main
      # - name: Setup ccache action
      #   uses: Chocobo1/setup-ccache-action@v1.4.2
      #   with:
      #     windows_compile_environment: msys2
      #     install_ccache: false
      #     update_packager_index: false

      - name: Install OSGeo4W
        run: |
          $exe = 'osgeo4w-setup.exe'
          $url = 'http://download.osgeo.org/osgeo4w/v2/' + $exe
          (New-Object System.Net.WebClient).DownloadFile($url, $exe)
          Start-Process ('.\'+$exe) -ArgumentList '-A -g -k -q \
            -s http://download.osgeo.org/osgeo4w/v2/ -P ${{ env.Deps }}' -Wait
        env:
          Deps: "proj-devel,gdal-devel,geos-devel,libtiff-devel,libpng-devel,\
            pdal-devel,netcdf-devel,cairo-devel,fftw,freetype-devel,gdal-ecw,\
            gdal-mrsid,liblas-devel,libxdr,libpq-devel,pdcurses,\
            python3-matplotlib,python3-numpy,python3-ply,python3-pywin32,\
            python3-wxpython,zstd-devel"

      - name: Set number of cores for compilation
        run: |
          echo "MAKEFLAGS=-j$(nproc)" >> $GITHUB_ENV
        shell: msys2 {0}
      # - run: |
      #     env SCCACHE_IDLE_TIMEOUT=0 SCCACHE_DIR=${{ github.workspace }}/.sccache SCCACHE_CACHE_SIZE=${{ env.MAX_SIZE }} sccache --start-server
      #   env:
      #     MAX_SIZE: 500M
      #   shell: msys2 {0}
      - name: Compile GRASS GIS
        run: SRC=$(pwd) ./mswindows/osgeo4w/build_osgeo4w.sh
        shell: msys2 {0}
        env:
          SRC2: ${{ github.workspace }}
          OSGEO4W_ROOT_MSYS: /c/OSGeo4W
          UNITTEST: 1
          CC: sccache gcc
          CXX: sccache g++
          # CC: ccache gcc
          # CXX: ccache g++
          
      # - name: Compile GRASS GIS
      #   run: ./.github/workflows/build_osgeo4w.sh ${{ github.workspace }}
      #   shell: msys2 {0}
      #   env:
      #     CC: ccache gcc
      #     CXX: ccache g++
      #   # env:
      #   #   CC: sccache.exe gcc
      #   #   CXX: sccache.exe gcc
      
      - run: sccache --show-stats
        shell: msys2 {0}
      - run: sccache --stop-server
        shell: msys2 {0}
      
      - name: Test executing of the grass command
        run: .github/workflows/test_simple.bat 'C:\OSGeo4W\opt\grass\grass84.bat'

      - name: Test executing of the grass command in bash
        run: .github/workflows/test_simple.sh
        shell: msys2 {0}

      # - name: Run tests
      #   run: .github/workflows/test_thorough.bat 'C:\OSGeo4W\opt\grass\grass84.bat' 'C:\OSGeo4W\bin\python3'
