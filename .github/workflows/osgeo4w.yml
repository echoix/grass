---
name: OSGeo4W

on:
  push:
    branches:
      - main
      - releasebranch_*
  pull_request:
    branches:
      - main
      - releasebranch_*

jobs:
  build:
    name: ${{ matrix.os }} build and tests

    concurrency:
      group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}-${{
        matrix.os }}
      cancel-in-progress: true

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-2019
      fail-fast: false
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Collect Workflow Telemetry
        uses: catchpoint/workflow-telemetry-action@v1
        with:
          comment_on_pr: false
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
        shell: pwsh
        env:
          tempdir2: ${{ env.TEMP }}
          tempdir3: ${{ runner.temp }}
      - run: echo %TEMP%
        shell: cmd
      - run: echo %TEMP%
        shell: pwsh
      - run: echo "TEMP=$env:TEMP" >> $env:GITHUB_ENV
        shell: pwsh
      - run: echo ${{ env.PackageDir }}
        shell: pwsh
        env:
          PackageDir: "${{ env.TEMP }}/OSGeo4W_v2-Packages/"
      #- run: exit 1
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - uses: msys2/setup-msys2@v2
        with:
          path-type: inherit
          location: D:\
          update: true
          install: tar libintl make bison flex diffutils git dos2unix zip mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-fftw mingw-w64-x86_64-lapack mingw-w64-x86_64-pkgconf
            mingw-w64-x86_64-gcc mingw-w64-x86_64-ccache mingw-w64-x86_64-zlib mingw-w64-x86_64-libiconv
            mingw-w64-x86_64-bzip2 mingw-w64-x86_64-gettext mingw-w64-x86_64-libsystre
            mingw-w64-x86_64-libtre-git mingw-w64-x86_64-libwinpthread-git mingw-w64-x86_64-libpng
            mingw-w64-x86_64-pcre

      - name: Download and Install OSGeo4W
        run: |
          Invoke-WebRequest -Uri "${{ env.BASE_URL }}/${{ env.FILE_NAME }}"  -OutFile "${{ env.FILE_NAME }}"
        shell: pwsh
        env:
          BASE_URL: https://download.osgeo.org/osgeo4w/v2
          FILE_NAME: osgeo4w-setup.exe
          Deps: "proj-devel,gdal-devel,geos-devel,libtiff-devel,libpng-devel,\
            pdal-devel,netcdf-devel,cairo-devel,fftw,freetype-devel,gdal-ecw,\
            gdal-mrsid,liblas-devel,libxdr,libpq-devel,pdcurses,\
            python3-matplotlib,python3-numpy,python3-ply,python3-pywin32,\
            python3-wxpython,regex-devel,zstd-devel"
      - name: Install OSGeo4W
        run: |
          &  .\"${{ env.FILE_NAME }}"  -A -g -k -q -s ${{ env.BASE_URL }} -P ${{ env.Deps }} -l ${{ env.PackageDir }} | Out-Default
  #$exe = 'osgeo4w-setup.exe'
      #Start-Process ('.\'+$exe) -ArgumentList '-A -g -k -q \
    #-s http://download.osgeo.org/osgeo4w/v2/ -P ${{ env.Deps }}' -NoNewWindow
     # .\"${{ env.FILE_NAME }}"  -A -g -k -q -s ${{ env.BASE_URL }} -P ${{ env.Deps }}
        shell: pwsh
        env:
          BASE_URL: https://download.osgeo.org/osgeo4w/v2
          FILE_NAME: osgeo4w-setup.exe
          Deps: ${{'proj-devel,gdal-devel,geos-devel,libtiff-devel,libpng-devel,pdal-devel,netcdf-devel,cairo-devel,fftw,freetype-devel,gdal-ecw,gdal-mrsid,liblas-devel,libxdr,libpq-devel,pdcurses,python3-matplotlib,python3-numpy,python3-ply,python3-pywin32,python3-wxpython,regex-devel,zstd-devel'}}
          Deps1: "proj-devel,gdal-devel,geos-devel,libtiff-devel,libpng-devel,\
            pdal-devel,netcdf-devel,cairo-devel,fftw,freetype-devel,gdal-ecw,\
            gdal-mrsid,liblas-devel,libxdr,libpq-devel,pdcurses,\
            python3-matplotlib,python3-numpy,python3-ply,python3-pywin32,\
            python3-wxpython,regex-devel,zstd-devel"
          PackageDir: "${{ env.TEMP }}/OSGeo4W_v2-Packages/"
      - run: Get-ChildItem -Path ${{ env.PackageDir }} -Recurse -File | sort length –Descending
        shell: pwsh
        env:
          PackageDir: "${{ env.TEMP }}/OSGeo4W_v2-Packages/"
      - run: Get-ChildItem -Path ${{ env.PackageDir }} -Recurse -File | sort length –Descending
        shell: pwsh
        env:
          PackageDir: "${{ env.TEMP }}/http*/"
     # - name: Install OSGeo4W
     #   run: |
     #     $exe = 'osgeo4w-setup.exe'
     #     $url = 'http://download.osgeo.org/osgeo4w/v2/' + $exe
     #     (New-Object System.Net.WebClient).DownloadFile($url, $exe)
     #     Start-Process ('.\'+$exe) -ArgumentList '-A -g -k -q \
     #       -s http://download.osgeo.org/osgeo4w/v2/ -P ${{ env.Deps }}' -Wait
     #   env:
     #     Deps: "proj-devel,gdal-devel,geos-devel,libtiff-devel,libpng-devel,\
     #       pdal-devel,netcdf-devel,cairo-devel,fftw,freetype-devel,gdal-ecw,\
     #       gdal-mrsid,liblas-devel,libxdr,libpq-devel,pdcurses,\
     #       python3-matplotlib,python3-numpy,python3-ply,python3-pywin32,\
     #       python3-wxpython,regex-devel,zstd-devel"
     #   shell: pwsh
      - uses: actions/upload-artifact@v4
        with:
          name: osgeo4w-cache
          path: "${{ env.TEMP }}/OSGeo4W_v2-Packages/"
      - name: Compile GRASS GIS
        run: .github/workflows/build_osgeo4w.sh .
        #run: D:\msys64\usr\bin\bash.exe -l (''+(Get-Location)+'\.github\workflows\build_osgeo4w.sh') (Get-Location)

      - name: Test executing of the grass command
        run: .github/workflows/test_simple.bat 'C:\OSGeo4W\opt\grass\grass84.bat'
      - run: exit 1
      - name: Test executing of the grass command in bash
        run: D:\msys64\usr\bin\bash.exe .github/workflows/test_simple.sh

      - name: Run tests
        run: .github/workflows/test_thorough.bat 'C:\OSGeo4W\opt\grass\grass84.bat' 'C:\OSGeo4W\bin\python3'
