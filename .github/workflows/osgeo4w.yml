---
name: OSGeo4W

on:
  push:
    branches:
      - main
      - releasebranch_*
  pull_request:

jobs:
  build:
    name: ${{ matrix.os }} build and tests

    concurrency:
      group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}-${{
        matrix.os }}
      cancel-in-progress: true

    runs-on: ${{ matrix.os }}
    env:
      PYTHONWARNINGS: always
    strategy:
      matrix:
        os:
          - windows-2019
      fail-fast: false

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: msys2/setup-msys2@ddf331adaebd714795f1042345e6ca57bd66cea8 # v2.24.1
        with:
          path-type: inherit
          location: D:\
          update: true
          msystem: MINGW64
          install: tar libintl make bison flex diffutils git dos2unix zip mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-fftw mingw-w64-x86_64-lapack mingw-w64-x86_64-pkgconf
            mingw-w64-x86_64-gcc mingw-w64-x86_64-ccache mingw-w64-x86_64-zlib mingw-w64-x86_64-libiconv
            mingw-w64-x86_64-bzip2 mingw-w64-x86_64-gettext mingw-w64-x86_64-libsystre
            mingw-w64-x86_64-libtre-git mingw-w64-x86_64-libwinpthread-git mingw-w64-x86_64-libpng
            mingw-w64-x86_64-pcre

      - name: Install OSGeo4W
        run: |
          $exe = 'osgeo4w-setup.exe'
          $url = 'http://download.osgeo.org/osgeo4w/v2/' + $exe
          (New-Object System.Net.WebClient).DownloadFile($url, $exe)
          Start-Process ('.\'+$exe) -ArgumentList '-A -g -k -q \
            -s http://download.osgeo.org/osgeo4w/v2/ -P ${{ env.Deps }}' -Wait
        env:
          Deps: "proj-devel,gdal-devel,geos-devel,libtiff-devel,libpng-devel,\
            pdal-devel,netcdf-devel,cairo-devel,fftw,freetype-devel,gdal-ecw,\
            gdal-mrsid,liblas-devel,libxdr,libpq-devel,pdcurses,\
            python3-matplotlib,python3-numpy,python3-ply,python3-pywin32,\
            python3-pytest,python3-wxpython,regex-devel,zstd-devel"

      - run: python --version
        shell: cmd
      - run: |
          C:/OSGeo4W/OSGeo4W.bat
          python --version
        shell: cmd
        timeout-minutes: 1
        continue-on-error: true
      - run: python --version
        shell: cmd /D /E:ON /V:OFF /S /C "CALL C:/OSGeo4W/OSGeo4W.bat "{0}""
      - run: python -c "import sys; print('\n'.join(sys.path))"
        shell: cmd /D /E:ON /V:OFF /S /C "CALL C:/OSGeo4W/OSGeo4W.bat "{0}""
      - run: python -c "import sys; print(sys.executable)"
        shell: cmd /D /E:ON /V:OFF /S /C "CALL C:/OSGeo4W/OSGeo4W.bat "{0}""
      - run: python -c "import sys; import os; import pprint; pprint.pp(os.environ)"
        shell: cmd /D /E:ON /V:OFF /S /C "CALL C:/OSGeo4W/OSGeo4W.bat "{0}""
      - run: python -m pytest
        shell: cmd /D /E:ON /V:OFF /S /C "CALL C:/OSGeo4W/OSGeo4W.bat "{0}""
        continue-on-error: true
      - run: python -m pytest
        continue-on-error: true
        env:
          OSGEO4W_ROOT: C:\OSGeo4W
          GISBASE: C:\OSGeo4W\apps\grass\grass85
          

      - name: Set number of cores for compilation
        run: |
          echo "MAKEFLAGS=-j$(nproc)" >> $GITHUB_ENV
        shell: msys2 {0}

      - name: Compile GRASS GIS
        shell: msys2 {0}
        run: .github/workflows/build_osgeo4w.sh

      - name: Print installed versions
        if: always()
        shell: msys2 {0}
        run: .github/workflows/print_versions.sh

      - name: Test executing of the grass command
        run: .github/workflows/test_simple.bat 'C:\OSGeo4W\opt\grass\grass85.bat'

      - name: Test executing of the grass command in bash
        shell: msys2 {0}
        run: .github/workflows/test_simple.sh

      - name: Run pytest with a single worker (all tests)
        run: |
          python-grass85.bat -m pytest --verbose --color=yes^
            --durations=0 --durations-min=0.5 ^
            -ra .
        shell: cmd /D /E:ON /V:OFF /S /C "CALL C:/OSGeo4W/OSGeo4W.bat "{0}""
        continue-on-error: true
      - name: Run pytest with a single worker (all tests)
        run: |
          set PYTHONPATH=%OSGEO4W_ROOT%\apps\grass\grass85\etc\python;%PYTHONPATH%
          python -m pytest --verbose --color=yes --durations=0 --durations-min=0.5 ^
            -ra .
        shell: cmd /D /E:ON /V:OFF /S /C "CALL C:/OSGeo4W/OSGeo4W.bat "{0}""
        continue-on-error: true
      - name: Run pytest with a single worker (all tests)
        run: |
          set PYTHONPATH=%OSGEO4W_ROOT%\apps\grass\grass85\etc\python;%PYTHONPATH%
          set grass=C:\OSGeo4W\opt\grass\grass85.bat
          python -m pytest --verbose --color=yes ^
            --durations=0 --durations-min=0.5 ^
            -ra .
        shell: cmd /D /E:ON /V:OFF /S /C "CALL C:/OSGeo4W/OSGeo4W.bat "{0}""
        continue-on-error: true
      - name: Run pytest with a single worker (all tests)
        run: |
           call python-grass85.bat -m pytest --verbose --color=yes ^
            --durations=0 --durations-min=0.5 ^
            -ra .
        shell: cmd /D /E:ON /V:OFF /S /C "CALL C:/OSGeo4W/OSGeo4W.bat "{0}""
        continue-on-error: true
      - name: Run pytest with a single worker (all tests)
        run: |
          rem echo %PYTHONPATH%

          set GISBASE=%OSGEO4W_ROOT%\apps\grass\grass85

          REM Uncomment if you want to use Bash instead of Cmd
          REM Note that msys package must be also installed
          REM set GRASS_SH=%OSGEO4W_ROOT%\apps\msys\bin\sh.exe

          set GRASS_PYTHON=%OSGEO4W_ROOT%\bin\python3.exe
          set GRASS_PROJSHARE=%OSGEO4W_ROOT%\share\proj
          
          set PYTHONHOME=C:\OSGeo4W\apps\Python312
          set PYTHONPATH=%OSGEO4W_ROOT%\apps\grass\grass85\etc\python;%PYTHONPATH%
          set GRASS_COMPATIBILITY_TEST=0
          path %PATH%;%GISBASE%\bin
          echo %PATH%
          echo %PYTHONPATH%

          python -m pytest --verbose --color=yes ^
            --durations=0 --durations-min=0.5 ^
            -ra .
        shell: cmd /D /E:ON /V:OFF /S /C "CALL C:/OSGeo4W/OSGeo4W.bat "{0}""
        continue-on-error: true
      - name: Run pytest with a single worker (all tests)
        run: |
          "C:\OSGeo4W\opt\grass\grass85.bat" --exec "C:\OSGeo4W\bin\python3" -m pytest --verbose --color=yes ^
            --durations=0 --durations-min=0.5 ^
            -ra .
        shell: cmd
      - name: Run pytest with a single worker (all tests)
        run: |
          "C:\OSGeo4W\opt\grass\grass85.bat" --exec "C:\OSGeo4W\bin\python3" -m pytest --verbose --color=yes ^
            --durations=0 --durations-min=0.5 ^
            -ra .
        shell: cmd
        continue-on-error: true
      - name: Run pytest with a single worker (all tests)
        run: | 
          "C:\OSGeo4W\opt\grass\grass85.bat" --exec "C:\OSGeo4W\bin\python3" -m pytest --verbose --color=yes ^
            --durations=0 --durations-min=0.5 ^
            -ra .
        shell: cmd
        continue-on-error: true
        env:
          OSGEO4W_ROOT: "C:\OSGeo4W"
          PYTHONPATH: "C:\OSGeo4W\apps\grass\grass85\etc\python;%PYTHONPATH%"
          # PYTHONPATH: %OSGEO4W_ROOT%\apps\grass\grass85\etc\python;%PYTHONPATH%
          PYTHONHOME: "C:\OSGeo4W\apps\Python312"
      - name: Run pytest with a single worker (all tests)
        run: |
          rem echo %PYTHONPATH%

          set GISBASE=%OSGEO4W_ROOT%\apps\grass\grass85

          REM Uncomment if you want to use Bash instead of Cmd
          REM Note that msys package must be also installed
          REM set GRASS_SH=%OSGEO4W_ROOT%\apps\msys\bin\sh.exe

          set GRASS_PYTHON=%OSGEO4W_ROOT%\bin\python3.exe
          set GRASS_PROJSHARE=%OSGEO4W_ROOT%\share\proj
          
          set PYTHONHOME=C:\OSGeo4W\apps\Python312
          set PYTHONPATH=%OSGEO4W_ROOT%\apps\grass\grass85\etc\python;%PYTHONPATH%
          set GRASS_COMPATIBILITY_TEST=0
          path %PATH%;%GISBASE%\bin
          echo %PATH%
          echo %PYTHONPATH%

          "C:\OSGeo4W\opt\grass\grass85.bat" --exec "C:\OSGeo4W\bin\python3" -m pytest --verbose --color=yes ^
            --durations=0 --durations-min=0.5 ^
            -ra .
        shell: cmd /D /E:ON /V:OFF /S /C "CALL C:/OSGeo4W/OSGeo4W.bat "{0}""
        continue-on-error: true
      - name: Run tests
        run: .github/workflows/test_thorough.bat 'C:\OSGeo4W\opt\grass\grass85.bat' 'C:\OSGeo4W\bin\python3'

      - name: Make HTML test report available
        if: ${{ always() }}
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        with:
          name: testreport-${{ matrix.os }}
          path: testreport
          retention-days: 3
