---
name: OSGeo4W

on:
  push:
    branches:
      - main
      - releasebranch_*
  pull_request:

permissions: {}

jobs:
  build:
    name: ${{ matrix.os }} build and tests

    concurrency:
      group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}-${{
        matrix.os }}
      cancel-in-progress: true

    runs-on: ${{ matrix.os }}
    env:
      PYTHONWARNINGS: always
    strategy:
      matrix:
        os:
          - windows-2019
      fail-fast: false

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: msys2/setup-msys2@61f9e5e925871ba6c9e3e8da24ede83ea27fa91f # v2.27.0
        with:
          path-type: inherit
          location: D:\
          update: true
          msystem: MINGW64
          install: >-
            bison
            diffutils
            dos2unix
            flex
            git
            libintl
            make
            tar
            zip
          pacboy: >-
            bzip2
            ccache
            fftw
            gcc
            gettext
            libiconv
            libsystre
            libtre-git
            libwinpthread-git
            openblas
            pcre
            pkgconf
            toolchain
            zlib

      - name: Setup OSGeo4W environment
        uses: echoix/setup-OSGeo4W@f4311523e39f2c8b10e34ebbc3f2ff437ecfb9ed # v0.2.0
        id: osgeo4w
        with:
          package-dir: "D:/OSGeo4W_pkg"
          packages: |
            cairo-devel
            freetype-devel
            gdal-devel
            geos-devel
            libjpeg-turbo-devel
            liblas-devel
            libpng-devel
            libpq-devel
            libtiff-devel
            netcdf-devel
            proj-devel
            python3-core
            python3-jupyter
            python3-matplotlib
            python3-numpy
            python3-pip
            python3-ply
            python3-pytest
            python3-pywin32
            python3-six
            python3-wxpython
            sqlite3-devel
            zstd-devel

      - name: Set number of cores for compilation
        run: |
          echo "MAKEFLAGS=-j$(nproc)" >> $GITHUB_ENV
        shell: msys2 {0}

      - name: Compile GRASS GIS
        shell: msys2 {0}
        run: |
          .github/workflows/build_osgeo4w.sh

      - name: Print installed versions
        if: always()
        shell: msys2 {0}
        run: .github/workflows/print_versions.sh

      - name: Test executing of the grass command
        run: .github/workflows/test_simple.bat '${{env.O4WROOT}}\opt\grass\grass85.bat'
        env:
          O4WROOT: ${{ steps.osgeo4w.outputs.root }}

      - name: Test executing of the grass command in bash
        shell: msys2 {0}
        run: .github/workflows/test_simple.sh

      - name: Install pytest plugins
        run: python -m pip install --upgrade pytest-timeout slipcover coverage
        shell: cmd /D /E:ON /V:OFF /S /C "CALL C:/OSGeo4W/OSGeo4W.bat "{0}""
      - name: Run pytest with a single worker
        run: |
          call %OSGEO4W_ROOT%\opt\grass\etc\env.bat
          @echo on
          set PYTHONPATH=%GISBASE%\etc\python;%PYTHONPATH%
          path %GISBASE%\lib;%GISBASE%\bin;%PATH%
          set INITIAL_GISBASE=%GISBASE%
          set INITIAL_PWD=%CD%
          echo "Initial gisbase is %INITIAL_GISBASE%"
          python -m slipcover ^
            --json ^
            --out slipcover.json ^
            --source .,%INITIAL_GISBASE%,%INITIAL_GISBASE%/scripts ^
            -m ^
          pytest --verbose --color=yes ^
            --durations=0 --durations-min=0.5 ^
            -ra .
        shell: cmd /D /E:ON /V:OFF /S /C "CALL C:/OSGeo4W/OSGeo4W.bat "{0}""
      - run: cat slipcover.json
        continue-on-error: true
        shell: msys2 {0}
      - run: jq . slipcover.json
        continue-on-error: true
      - name: Convert slipcover's output to coverage.py data file
        run: python utils/slipcover_to_coverage.py slipcover.json .coverage.slipcover
        shell: cmd /D /E:ON /V:OFF /S /C "CALL C:/OSGeo4W/OSGeo4W.bat "{0}""
        continue-on-error: true
      - run: ls -la
        shell: msys2 {0}
      - name: Fix non-standard installed script paths in coverage data
        run: |
          call %OSGEO4W_ROOT%\opt\grass\etc\env.bat
          set PYTHONPATH=%GISBASE%\etc\python;%PYTHONPATH%
          path %GISBASE%\lib;%GISBASE%\bin;%PATH%
          set INITIAL_GISBASE=%GISBASE%
          set INITIAL_PWD=%CD%
          coverage combine
          python utils/coverage_mapper.py
          coverage combine
          coverage html
          coverage report
          coverage json
        shell: cmd /D /E:ON /V:OFF /S /C "CALL C:/OSGeo4W/OSGeo4W.bat "{0}""
        continue-on-error: true
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673 # v4.5.0
        with:
          verbose: true
          flags: pytest-osgeo4w
          name: pytest-osgeo4w
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Make slipcover code coverage files available
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: python-slipcover-${{ matrix.os }}
          path: |
            slipcover.json
            .coverage.slipcover
            .coverage
          retention-days: 3
      - name: Make python-only code coverage test report available
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: python-codecoverage-report-${{ matrix.os }}
          path: coverage_html_report
          retention-days: 1

      - name: Run tests
        run: .github/workflows/test_thorough.bat '${{env.O4WROOT}}\opt\grass\grass85.bat' '${{env.O4WROOT}}\bin\python3'
        env:
          O4WROOT: ${{ steps.osgeo4w.outputs.root }}

      - name: Make HTML test report available
        if: ${{ always() }}
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: testreport-${{ matrix.os }}
          path: testreport
          retention-days: 3
